//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/TimeOfDay.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/Locale.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTime.h"
#include "org/joda/time/DateTimeField.h"
#include "org/joda/time/DateTimeFieldType.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/DateTimeZone.h"
#include "org/joda/time/DurationFieldType.h"
#include "org/joda/time/LocalTime.h"
#include "org/joda/time/ReadablePartial.h"
#include "org/joda/time/ReadablePeriod.h"
#include "org/joda/time/TimeOfDay.h"
#include "org/joda/time/base/AbstractPartial.h"
#include "org/joda/time/base/BasePartial.h"
#include "org/joda/time/chrono/ISOChronology.h"
#include "org/joda/time/field/AbstractPartialFieldProperty.h"
#include "org/joda/time/field/FieldUtils.h"
#include "org/joda/time/format/DateTimeFormatter.h"
#include "org/joda/time/format/ISODateTimeFormat.h"

inline jlong OrgJodaTimeTimeOfDay_get_serialVersionUID();
#define OrgJodaTimeTimeOfDay_serialVersionUID 3633353405803318660LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeTimeOfDay, serialVersionUID, jlong)

inline IOSObjectArray *OrgJodaTimeTimeOfDay_get_FIELD_TYPES();
static IOSObjectArray *OrgJodaTimeTimeOfDay_FIELD_TYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeTimeOfDay, FIELD_TYPES, IOSObjectArray *)

@interface OrgJodaTimeTimeOfDay_Property () {
 @public
  OrgJodaTimeTimeOfDay *iTimeOfDay_;
  jint iFieldIndex_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeTimeOfDay_Property, iTimeOfDay_, OrgJodaTimeTimeOfDay *)

inline jlong OrgJodaTimeTimeOfDay_Property_get_serialVersionUID();
#define OrgJodaTimeTimeOfDay_Property_serialVersionUID 5598459141741063833LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeTimeOfDay_Property, serialVersionUID, jlong)

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeTimeOfDay)

OrgJodaTimeTimeOfDay *OrgJodaTimeTimeOfDay_MIDNIGHT;

@implementation OrgJodaTimeTimeOfDay

+ (OrgJodaTimeTimeOfDay *)fromCalendarFieldsWithJavaUtilCalendar:(JavaUtilCalendar *)calendar {
  return OrgJodaTimeTimeOfDay_fromCalendarFieldsWithJavaUtilCalendar_(calendar);
}

+ (OrgJodaTimeTimeOfDay *)fromDateFieldsWithJavaUtilDate:(JavaUtilDate *)date {
  return OrgJodaTimeTimeOfDay_fromDateFieldsWithJavaUtilDate_(date);
}

+ (OrgJodaTimeTimeOfDay *)fromMillisOfDayWithLong:(jlong)millisOfDay {
  return OrgJodaTimeTimeOfDay_fromMillisOfDayWithLong_(millisOfDay);
}

+ (OrgJodaTimeTimeOfDay *)fromMillisOfDayWithLong:(jlong)millisOfDay
                        withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  return OrgJodaTimeTimeOfDay_fromMillisOfDayWithLong_withOrgJodaTimeChronology_(millisOfDay, chrono);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeTimeOfDay_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone {
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeDateTimeZone_(self, zone);
  return self;
}

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeChronology_(self, chronology);
  return self;
}

- (instancetype)initWithLong:(jlong)instant {
  OrgJodaTimeTimeOfDay_initWithLong_(self, instant);
  return self;
}

- (instancetype)initWithLong:(jlong)instant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeTimeOfDay_initWithLong_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

- (instancetype)initWithId:(id)instant {
  OrgJodaTimeTimeOfDay_initWithId_(self, instant);
  return self;
}

- (instancetype)initWithId:(id)instant
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeTimeOfDay_initWithId_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

- (instancetype)initWithInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_(self, hourOfDay, minuteOfHour);
  return self;
}

- (instancetype)initWithInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, chronology);
  return self;
}

- (instancetype)initWithInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_(self, hourOfDay, minuteOfHour, secondOfMinute);
  return self;
}

- (instancetype)initWithInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute
  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, secondOfMinute, chronology);
  return self;
}

- (instancetype)initWithInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute
                    withInt:(jint)millisOfSecond {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_(self, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
  return self;
}

- (instancetype)initWithInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute
                    withInt:(jint)millisOfSecond
  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond, chronology);
  return self;
}

- (instancetype)initWithOrgJodaTimeTimeOfDay:(OrgJodaTimeTimeOfDay *)partial
                                withIntArray:(IOSIntArray *)values {
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(self, partial, values);
  return self;
}

- (instancetype)initWithOrgJodaTimeTimeOfDay:(OrgJodaTimeTimeOfDay *)partial
                   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withOrgJodaTimeChronology_(self, partial, chrono);
  return self;
}

- (jint)size {
  return 4;
}

- (OrgJodaTimeDateTimeField *)getFieldWithInt:(jint)index
                    withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  switch (index) {
    case OrgJodaTimeTimeOfDay_HOUR_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chrono)) hourOfDay];
    case OrgJodaTimeTimeOfDay_MINUTE_OF_HOUR:
    return [((OrgJodaTimeChronology *) nil_chk(chrono)) minuteOfHour];
    case OrgJodaTimeTimeOfDay_SECOND_OF_MINUTE:
    return [((OrgJodaTimeChronology *) nil_chk(chrono)) secondOfMinute];
    case OrgJodaTimeTimeOfDay_MILLIS_OF_SECOND:
    return [((OrgJodaTimeChronology *) nil_chk(chrono)) millisOfSecond];
    default:
    @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I", @"Invalid index: ", index));
  }
}

- (OrgJodaTimeDateTimeFieldType *)getFieldTypeWithInt:(jint)index {
  return IOSObjectArray_Get(nil_chk(OrgJodaTimeTimeOfDay_FIELD_TYPES), index);
}

- (IOSObjectArray *)getFieldTypes {
  return [((IOSObjectArray *) nil_chk(OrgJodaTimeTimeOfDay_FIELD_TYPES)) clone];
}

- (OrgJodaTimeTimeOfDay *)withChronologyRetainFieldsWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)newChronology {
  newChronology = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(newChronology);
  newChronology = [((OrgJodaTimeChronology *) nil_chk(newChronology)) withUTC];
  if (newChronology == [self getChronology]) {
    return self;
  }
  else {
    OrgJodaTimeTimeOfDay *newTimeOfDay = create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withOrgJodaTimeChronology_(self, newChronology);
    [((OrgJodaTimeChronology *) nil_chk(newChronology)) validateWithOrgJodaTimeReadablePartial:newTimeOfDay withIntArray:[self getValues]];
    return newTimeOfDay;
  }
}

- (OrgJodaTimeTimeOfDay *)withFieldWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                            withInt:(jint)value {
  jint index = [self indexOfSupportedWithOrgJodaTimeDateTimeFieldType:fieldType];
  if (value == [self getValueWithInt:index]) {
    return self;
  }
  IOSIntArray *newValues = [self getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([self getFieldWithInt:index])) setWithOrgJodaTimeReadablePartial:self withInt:index withIntArray:newValues withInt:value];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(self, newValues);
}

- (OrgJodaTimeTimeOfDay *)withFieldAddedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                                                 withInt:(jint)amount {
  jint index = [self indexOfSupportedWithOrgJodaTimeDurationFieldType:fieldType];
  if (amount == 0) {
    return self;
  }
  IOSIntArray *newValues = [self getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([self getFieldWithInt:index])) addWrapPartialWithOrgJodaTimeReadablePartial:self withInt:index withIntArray:newValues withInt:amount];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(self, newValues);
}

- (OrgJodaTimeTimeOfDay *)withPeriodAddedWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                               withInt:(jint)scalar {
  if (period == nil || scalar == 0) {
    return self;
  }
  IOSIntArray *newValues = [self getValues];
  for (jint i = 0; i < [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) size]; i++) {
    OrgJodaTimeDurationFieldType *fieldType = [period getFieldTypeWithInt:i];
    jint index = [self indexOfWithOrgJodaTimeDurationFieldType:fieldType];
    if (index >= 0) {
      newValues = [((OrgJodaTimeDateTimeField *) nil_chk([self getFieldWithInt:index])) addWrapPartialWithOrgJodaTimeReadablePartial:self withInt:index withIntArray:newValues withInt:OrgJodaTimeFieldFieldUtils_safeMultiplyWithInt_withInt_([period getValueWithInt:i], scalar)];
    }
  }
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(self, newValues);
}

- (OrgJodaTimeTimeOfDay *)plusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  return [self withPeriodAddedWithOrgJodaTimeReadablePeriod:period withInt:1];
}

- (OrgJodaTimeTimeOfDay *)plusHoursWithInt:(jint)hours {
  return [self withFieldAddedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_hours() withInt:hours];
}

- (OrgJodaTimeTimeOfDay *)plusMinutesWithInt:(jint)minutes {
  return [self withFieldAddedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_minutes() withInt:minutes];
}

- (OrgJodaTimeTimeOfDay *)plusSecondsWithInt:(jint)seconds {
  return [self withFieldAddedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_seconds() withInt:seconds];
}

- (OrgJodaTimeTimeOfDay *)plusMillisWithInt:(jint)millis {
  return [self withFieldAddedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_millis() withInt:millis];
}

- (OrgJodaTimeTimeOfDay *)minusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  return [self withPeriodAddedWithOrgJodaTimeReadablePeriod:period withInt:-1];
}

- (OrgJodaTimeTimeOfDay *)minusHoursWithInt:(jint)hours {
  return [self withFieldAddedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_hours() withInt:OrgJodaTimeFieldFieldUtils_safeNegateWithInt_(hours)];
}

- (OrgJodaTimeTimeOfDay *)minusMinutesWithInt:(jint)minutes {
  return [self withFieldAddedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_minutes() withInt:OrgJodaTimeFieldFieldUtils_safeNegateWithInt_(minutes)];
}

- (OrgJodaTimeTimeOfDay *)minusSecondsWithInt:(jint)seconds {
  return [self withFieldAddedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_seconds() withInt:OrgJodaTimeFieldFieldUtils_safeNegateWithInt_(seconds)];
}

- (OrgJodaTimeTimeOfDay *)minusMillisWithInt:(jint)millis {
  return [self withFieldAddedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_millis() withInt:OrgJodaTimeFieldFieldUtils_safeNegateWithInt_(millis)];
}

- (OrgJodaTimeTimeOfDay_Property *)propertyWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type {
  return create_OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(self, [self indexOfSupportedWithOrgJodaTimeDateTimeFieldType:type]);
}

- (OrgJodaTimeLocalTime *)toLocalTime {
  return create_OrgJodaTimeLocalTime_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_([self getHourOfDay], [self getMinuteOfHour], [self getSecondOfMinute], [self getMillisOfSecond], [self getChronology]);
}

- (OrgJodaTimeDateTime *)toDateTimeToday {
  return [self toDateTimeTodayWithOrgJodaTimeDateTimeZone:nil];
}

- (OrgJodaTimeDateTime *)toDateTimeTodayWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone {
  OrgJodaTimeChronology *chrono = [((OrgJodaTimeChronology *) nil_chk([self getChronology])) withZoneWithOrgJodaTimeDateTimeZone:zone];
  jlong instantMillis = OrgJodaTimeDateTimeUtils_currentTimeMillis();
  jlong resolved = [((OrgJodaTimeChronology *) nil_chk(chrono)) setWithOrgJodaTimeReadablePartial:self withLong:instantMillis];
  return create_OrgJodaTimeDateTime_initWithLong_withOrgJodaTimeChronology_(resolved, chrono);
}

- (jint)getHourOfDay {
  return [self getValueWithInt:OrgJodaTimeTimeOfDay_HOUR_OF_DAY];
}

- (jint)getMinuteOfHour {
  return [self getValueWithInt:OrgJodaTimeTimeOfDay_MINUTE_OF_HOUR];
}

- (jint)getSecondOfMinute {
  return [self getValueWithInt:OrgJodaTimeTimeOfDay_SECOND_OF_MINUTE];
}

- (jint)getMillisOfSecond {
  return [self getValueWithInt:OrgJodaTimeTimeOfDay_MILLIS_OF_SECOND];
}

- (OrgJodaTimeTimeOfDay *)withHourOfDayWithInt:(jint)hour {
  IOSIntArray *newValues = [self getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) hourOfDay])) setWithOrgJodaTimeReadablePartial:self withInt:OrgJodaTimeTimeOfDay_HOUR_OF_DAY withIntArray:newValues withInt:hour];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(self, newValues);
}

- (OrgJodaTimeTimeOfDay *)withMinuteOfHourWithInt:(jint)minute {
  IOSIntArray *newValues = [self getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) minuteOfHour])) setWithOrgJodaTimeReadablePartial:self withInt:OrgJodaTimeTimeOfDay_MINUTE_OF_HOUR withIntArray:newValues withInt:minute];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(self, newValues);
}

- (OrgJodaTimeTimeOfDay *)withSecondOfMinuteWithInt:(jint)second {
  IOSIntArray *newValues = [self getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) secondOfMinute])) setWithOrgJodaTimeReadablePartial:self withInt:OrgJodaTimeTimeOfDay_SECOND_OF_MINUTE withIntArray:newValues withInt:second];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(self, newValues);
}

- (OrgJodaTimeTimeOfDay *)withMillisOfSecondWithInt:(jint)millis {
  IOSIntArray *newValues = [self getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) millisOfSecond])) setWithOrgJodaTimeReadablePartial:self withInt:OrgJodaTimeTimeOfDay_MILLIS_OF_SECOND withIntArray:newValues withInt:millis];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(self, newValues);
}

- (OrgJodaTimeTimeOfDay_Property *)hourOfDay {
  return create_OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(self, OrgJodaTimeTimeOfDay_HOUR_OF_DAY);
}

- (OrgJodaTimeTimeOfDay_Property *)minuteOfHour {
  return create_OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(self, OrgJodaTimeTimeOfDay_MINUTE_OF_HOUR);
}

- (OrgJodaTimeTimeOfDay_Property *)secondOfMinute {
  return create_OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(self, OrgJodaTimeTimeOfDay_SECOND_OF_MINUTE);
}

- (OrgJodaTimeTimeOfDay_Property *)millisOfSecond {
  return create_OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(self, OrgJodaTimeTimeOfDay_MILLIS_OF_SECOND);
}

- (NSString *)description {
  return [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_tTime())) printWithOrgJodaTimeReadablePartial:self];
}

+ (void)initialize {
  if (self == [OrgJodaTimeTimeOfDay class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeTimeOfDay_FIELD_TYPES, [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDateTimeFieldType_hourOfDay(), OrgJodaTimeDateTimeFieldType_minuteOfHour(), OrgJodaTimeDateTimeFieldType_secondOfMinute(), OrgJodaTimeDateTimeFieldType_millisOfSecond() } count:4 type:OrgJodaTimeDateTimeFieldType_class_()]);
    JreStrongAssignAndConsume(&OrgJodaTimeTimeOfDay_MIDNIGHT, new_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_(0, 0, 0, 0));
    J2OBJC_SET_INITIALIZED(OrgJodaTimeTimeOfDay)
  }
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromCalendarFieldsWithJavaUtilCalendar:", "fromCalendarFields", "Lorg.joda.time.TimeOfDay;", 0x9, NULL, NULL },
    { "fromDateFieldsWithJavaUtilDate:", "fromDateFields", "Lorg.joda.time.TimeOfDay;", 0x9, NULL, NULL },
    { "fromMillisOfDayWithLong:", "fromMillisOfDay", "Lorg.joda.time.TimeOfDay;", 0x9, NULL, NULL },
    { "fromMillisOfDayWithLong:withOrgJodaTimeChronology:", "fromMillisOfDay", "Lorg.joda.time.TimeOfDay;", 0x9, NULL, NULL },
    { "init", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeDateTimeZone:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeChronology:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithLong:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithLong:withOrgJodaTimeChronology:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithId:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithId:withOrgJodaTimeChronology:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:withOrgJodaTimeChronology:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:withInt:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:withInt:withOrgJodaTimeChronology:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:withInt:withInt:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:withInt:withInt:withOrgJodaTimeChronology:", "TimeOfDay", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeTimeOfDay:withIntArray:", "TimeOfDay", NULL, 0x0, NULL, NULL },
    { "initWithOrgJodaTimeTimeOfDay:withOrgJodaTimeChronology:", "TimeOfDay", NULL, 0x0, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "getFieldWithInt:withOrgJodaTimeChronology:", "getField", "Lorg.joda.time.DateTimeField;", 0x4, NULL, NULL },
    { "getFieldTypeWithInt:", "getFieldType", "Lorg.joda.time.DateTimeFieldType;", 0x1, NULL, NULL },
    { "getFieldTypes", NULL, "[Lorg.joda.time.DateTimeFieldType;", 0x1, NULL, NULL },
    { "withChronologyRetainFieldsWithOrgJodaTimeChronology:", "withChronologyRetainFields", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "withFieldWithOrgJodaTimeDateTimeFieldType:withInt:", "withField", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "withFieldAddedWithOrgJodaTimeDurationFieldType:withInt:", "withFieldAdded", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "withPeriodAddedWithOrgJodaTimeReadablePeriod:withInt:", "withPeriodAdded", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "plusWithOrgJodaTimeReadablePeriod:", "plus", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "plusHoursWithInt:", "plusHours", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "plusMinutesWithInt:", "plusMinutes", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "plusSecondsWithInt:", "plusSeconds", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "plusMillisWithInt:", "plusMillis", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "minusWithOrgJodaTimeReadablePeriod:", "minus", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "minusHoursWithInt:", "minusHours", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "minusMinutesWithInt:", "minusMinutes", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "minusSecondsWithInt:", "minusSeconds", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "minusMillisWithInt:", "minusMillis", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "propertyWithOrgJodaTimeDateTimeFieldType:", "property", "Lorg.joda.time.TimeOfDay$Property;", 0x1, NULL, NULL },
    { "toLocalTime", NULL, "Lorg.joda.time.LocalTime;", 0x1, NULL, NULL },
    { "toDateTimeToday", NULL, "Lorg.joda.time.DateTime;", 0x1, NULL, NULL },
    { "toDateTimeTodayWithOrgJodaTimeDateTimeZone:", "toDateTimeToday", "Lorg.joda.time.DateTime;", 0x1, NULL, NULL },
    { "getHourOfDay", NULL, "I", 0x1, NULL, NULL },
    { "getMinuteOfHour", NULL, "I", 0x1, NULL, NULL },
    { "getSecondOfMinute", NULL, "I", 0x1, NULL, NULL },
    { "getMillisOfSecond", NULL, "I", 0x1, NULL, NULL },
    { "withHourOfDayWithInt:", "withHourOfDay", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "withMinuteOfHourWithInt:", "withMinuteOfHour", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "withSecondOfMinuteWithInt:", "withSecondOfMinute", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "withMillisOfSecondWithInt:", "withMillisOfSecond", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "hourOfDay", NULL, "Lorg.joda.time.TimeOfDay$Property;", 0x1, NULL, NULL },
    { "minuteOfHour", NULL, "Lorg.joda.time.TimeOfDay$Property;", 0x1, NULL, NULL },
    { "secondOfMinute", NULL, "Lorg.joda.time.TimeOfDay$Property;", 0x1, NULL, NULL },
    { "millisOfSecond", NULL, "Lorg.joda.time.TimeOfDay$Property;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeTimeOfDay_serialVersionUID },
    { "FIELD_TYPES", "FIELD_TYPES", 0x1a, "[Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeTimeOfDay_FIELD_TYPES, NULL, .constantValue.asLong = 0 },
    { "MIDNIGHT", "MIDNIGHT", 0x19, "Lorg.joda.time.TimeOfDay;", &OrgJodaTimeTimeOfDay_MIDNIGHT, NULL, .constantValue.asLong = 0 },
    { "HOUR_OF_DAY", "HOUR_OF_DAY", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeTimeOfDay_HOUR_OF_DAY },
    { "MINUTE_OF_HOUR", "MINUTE_OF_HOUR", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeTimeOfDay_MINUTE_OF_HOUR },
    { "SECOND_OF_MINUTE", "SECOND_OF_MINUTE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeTimeOfDay_SECOND_OF_MINUTE },
    { "MILLIS_OF_SECOND", "MILLIS_OF_SECOND", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeTimeOfDay_MILLIS_OF_SECOND },
  };
  static const char *inner_classes[] = {"Lorg.joda.time.TimeOfDay$Property;"};
  static const J2ObjcClassInfo _OrgJodaTimeTimeOfDay = { 2, "TimeOfDay", "org.joda.time", NULL, 0x11, 54, methods, 7, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgJodaTimeTimeOfDay;
}

@end

OrgJodaTimeTimeOfDay *OrgJodaTimeTimeOfDay_fromCalendarFieldsWithJavaUtilCalendar_(JavaUtilCalendar *calendar) {
  OrgJodaTimeTimeOfDay_initialize();
  if (calendar == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The calendar must not be null");
  }
  return create_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_([((JavaUtilCalendar *) nil_chk(calendar)) getWithInt:JavaUtilCalendar_HOUR_OF_DAY], [calendar getWithInt:JavaUtilCalendar_MINUTE], [calendar getWithInt:JavaUtilCalendar_SECOND], [calendar getWithInt:JavaUtilCalendar_MILLISECOND]);
}

OrgJodaTimeTimeOfDay *OrgJodaTimeTimeOfDay_fromDateFieldsWithJavaUtilDate_(JavaUtilDate *date) {
  OrgJodaTimeTimeOfDay_initialize();
  if (date == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The date must not be null");
  }
  return create_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_([((JavaUtilDate *) nil_chk(date)) getHours], [date getMinutes], [date getSeconds], (((jint) ([date getTime] % 1000)) + 1000) % 1000);
}

OrgJodaTimeTimeOfDay *OrgJodaTimeTimeOfDay_fromMillisOfDayWithLong_(jlong millisOfDay) {
  OrgJodaTimeTimeOfDay_initialize();
  return OrgJodaTimeTimeOfDay_fromMillisOfDayWithLong_withOrgJodaTimeChronology_(millisOfDay, nil);
}

OrgJodaTimeTimeOfDay *OrgJodaTimeTimeOfDay_fromMillisOfDayWithLong_withOrgJodaTimeChronology_(jlong millisOfDay, OrgJodaTimeChronology *chrono) {
  OrgJodaTimeTimeOfDay_initialize();
  chrono = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(chrono);
  chrono = [((OrgJodaTimeChronology *) nil_chk(chrono)) withUTC];
  return create_OrgJodaTimeTimeOfDay_initWithLong_withOrgJodaTimeChronology_(millisOfDay, chrono);
}

void OrgJodaTimeTimeOfDay_init(OrgJodaTimeTimeOfDay *self) {
  OrgJodaTimeBaseBasePartial_init(self);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_init() {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_init(self);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_init() {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_init(self);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeTimeOfDay *self, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeBaseBasePartial_initWithOrgJodaTimeChronology_(self, OrgJodaTimeChronoISOChronology_getInstanceWithOrgJodaTimeDateTimeZone_(zone));
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeDateTimeZone_(self, zone);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeDateTimeZone_(self, zone);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithOrgJodaTimeChronology_(OrgJodaTimeTimeOfDay *self, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBasePartial_initWithOrgJodaTimeChronology_(self, chronology);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeChronology_(self, chronology);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeChronology_(self, chronology);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithLong_(OrgJodaTimeTimeOfDay *self, jlong instant) {
  OrgJodaTimeBaseBasePartial_initWithLong_(self, instant);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithLong_(jlong instant) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithLong_(self, instant);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithLong_(jlong instant) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithLong_(self, instant);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithLong_withOrgJodaTimeChronology_(OrgJodaTimeTimeOfDay *self, jlong instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBasePartial_initWithLong_withOrgJodaTimeChronology_(self, instant, chronology);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithLong_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithLong_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithId_(OrgJodaTimeTimeOfDay *self, id instant) {
  OrgJodaTimeBaseBasePartial_initWithId_withOrgJodaTimeChronology_withOrgJodaTimeFormatDateTimeFormatter_(self, instant, nil, OrgJodaTimeFormatISODateTimeFormat_timeParser());
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithId_(id instant) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithId_(self, instant);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithId_(id instant) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithId_(self, instant);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithId_withOrgJodaTimeChronology_(OrgJodaTimeTimeOfDay *self, id instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBasePartial_initWithId_withOrgJodaTimeChronology_withOrgJodaTimeFormatDateTimeFormatter_(self, instant, OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(chronology), OrgJodaTimeFormatISODateTimeFormat_timeParser());
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithId_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithId_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithInt_withInt_(OrgJodaTimeTimeOfDay *self, jint hourOfDay, jint minuteOfHour) {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, 0, 0, nil);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithInt_withInt_(jint hourOfDay, jint minuteOfHour) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_(self, hourOfDay, minuteOfHour);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithInt_withInt_(jint hourOfDay, jint minuteOfHour) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_(self, hourOfDay, minuteOfHour);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithInt_withInt_withOrgJodaTimeChronology_(OrgJodaTimeTimeOfDay *self, jint hourOfDay, jint minuteOfHour, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, 0, 0, chronology);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithInt_withInt_withOrgJodaTimeChronology_(jint hourOfDay, jint minuteOfHour, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, chronology);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithInt_withInt_withOrgJodaTimeChronology_(jint hourOfDay, jint minuteOfHour, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, chronology);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_(OrgJodaTimeTimeOfDay *self, jint hourOfDay, jint minuteOfHour, jint secondOfMinute) {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, secondOfMinute, 0, nil);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_(jint hourOfDay, jint minuteOfHour, jint secondOfMinute) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_(self, hourOfDay, minuteOfHour, secondOfMinute);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_(jint hourOfDay, jint minuteOfHour, jint secondOfMinute) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_(self, hourOfDay, minuteOfHour, secondOfMinute);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(OrgJodaTimeTimeOfDay *self, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, secondOfMinute, 0, chronology);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(jint hourOfDay, jint minuteOfHour, jint secondOfMinute, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, secondOfMinute, chronology);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(jint hourOfDay, jint minuteOfHour, jint secondOfMinute, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, secondOfMinute, chronology);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_(OrgJodaTimeTimeOfDay *self, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond) {
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond, nil);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_(jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_(self, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_(jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_(self, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(OrgJodaTimeTimeOfDay *self, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBasePartial_initWithIntArray_withOrgJodaTimeChronology_(self, [IOSIntArray arrayWithInts:(jint[]){ hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond } count:4], chronology);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond, chronology);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(self, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond, chronology);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(OrgJodaTimeTimeOfDay *self, OrgJodaTimeTimeOfDay *partial, IOSIntArray *values) {
  OrgJodaTimeBaseBasePartial_initWithOrgJodaTimeBaseBasePartial_withIntArray_(self, partial, values);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(OrgJodaTimeTimeOfDay *partial, IOSIntArray *values) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(self, partial, values);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(OrgJodaTimeTimeOfDay *partial, IOSIntArray *values) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(self, partial, values);
  return self;
}

void OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withOrgJodaTimeChronology_(OrgJodaTimeTimeOfDay *self, OrgJodaTimeTimeOfDay *partial, OrgJodaTimeChronology *chrono) {
  OrgJodaTimeBaseBasePartial_initWithOrgJodaTimeBaseBasePartial_withOrgJodaTimeChronology_(self, partial, chrono);
}

OrgJodaTimeTimeOfDay *new_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withOrgJodaTimeChronology_(OrgJodaTimeTimeOfDay *partial, OrgJodaTimeChronology *chrono) {
  OrgJodaTimeTimeOfDay *self = [OrgJodaTimeTimeOfDay alloc];
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withOrgJodaTimeChronology_(self, partial, chrono);
  return self;
}

OrgJodaTimeTimeOfDay *create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withOrgJodaTimeChronology_(OrgJodaTimeTimeOfDay *partial, OrgJodaTimeChronology *chrono) {
  OrgJodaTimeTimeOfDay *self = [[OrgJodaTimeTimeOfDay alloc] autorelease];
  OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withOrgJodaTimeChronology_(self, partial, chrono);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeTimeOfDay)

@implementation OrgJodaTimeTimeOfDay_Property

- (instancetype)initWithOrgJodaTimeTimeOfDay:(OrgJodaTimeTimeOfDay *)partial
                                     withInt:(jint)fieldIndex {
  OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(self, partial, fieldIndex);
  return self;
}

- (OrgJodaTimeDateTimeField *)getField {
  return [((OrgJodaTimeTimeOfDay *) nil_chk(iTimeOfDay_)) getFieldWithInt:iFieldIndex_];
}

- (id<OrgJodaTimeReadablePartial>)getReadablePartial {
  return iTimeOfDay_;
}

- (OrgJodaTimeTimeOfDay *)getTimeOfDay {
  return iTimeOfDay_;
}

- (jint)get {
  return [((OrgJodaTimeTimeOfDay *) nil_chk(iTimeOfDay_)) getValueWithInt:iFieldIndex_];
}

- (OrgJodaTimeTimeOfDay *)addToCopyWithInt:(jint)valueToAdd {
  IOSIntArray *newValues = [((OrgJodaTimeTimeOfDay *) nil_chk(iTimeOfDay_)) getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([self getField])) addWrapPartialWithOrgJodaTimeReadablePartial:iTimeOfDay_ withInt:iFieldIndex_ withIntArray:newValues withInt:valueToAdd];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(iTimeOfDay_, newValues);
}

- (OrgJodaTimeTimeOfDay *)addNoWrapToCopyWithInt:(jint)valueToAdd {
  IOSIntArray *newValues = [((OrgJodaTimeTimeOfDay *) nil_chk(iTimeOfDay_)) getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([self getField])) addWithOrgJodaTimeReadablePartial:iTimeOfDay_ withInt:iFieldIndex_ withIntArray:newValues withInt:valueToAdd];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(iTimeOfDay_, newValues);
}

- (OrgJodaTimeTimeOfDay *)addWrapFieldToCopyWithInt:(jint)valueToAdd {
  IOSIntArray *newValues = [((OrgJodaTimeTimeOfDay *) nil_chk(iTimeOfDay_)) getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([self getField])) addWrapFieldWithOrgJodaTimeReadablePartial:iTimeOfDay_ withInt:iFieldIndex_ withIntArray:newValues withInt:valueToAdd];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(iTimeOfDay_, newValues);
}

- (OrgJodaTimeTimeOfDay *)setCopyWithInt:(jint)value {
  IOSIntArray *newValues = [((OrgJodaTimeTimeOfDay *) nil_chk(iTimeOfDay_)) getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([self getField])) setWithOrgJodaTimeReadablePartial:iTimeOfDay_ withInt:iFieldIndex_ withIntArray:newValues withInt:value];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(iTimeOfDay_, newValues);
}

- (OrgJodaTimeTimeOfDay *)setCopyWithNSString:(NSString *)text
                           withJavaUtilLocale:(JavaUtilLocale *)locale {
  IOSIntArray *newValues = [((OrgJodaTimeTimeOfDay *) nil_chk(iTimeOfDay_)) getValues];
  newValues = [((OrgJodaTimeDateTimeField *) nil_chk([self getField])) setWithOrgJodaTimeReadablePartial:iTimeOfDay_ withInt:iFieldIndex_ withIntArray:newValues withNSString:text withJavaUtilLocale:locale];
  return create_OrgJodaTimeTimeOfDay_initWithOrgJodaTimeTimeOfDay_withIntArray_(iTimeOfDay_, newValues);
}

- (OrgJodaTimeTimeOfDay *)setCopyWithNSString:(NSString *)text {
  return [self setCopyWithNSString:text withJavaUtilLocale:nil];
}

- (OrgJodaTimeTimeOfDay *)withMaximumValue {
  return [self setCopyWithInt:[self getMaximumValue]];
}

- (OrgJodaTimeTimeOfDay *)withMinimumValue {
  return [self setCopyWithInt:[self getMinimumValue]];
}

- (void)dealloc {
  RELEASE_(iTimeOfDay_);
  [super dealloc];
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeTimeOfDay:withInt:", "Property", NULL, 0x0, NULL, NULL },
    { "getField", NULL, "Lorg.joda.time.DateTimeField;", 0x1, NULL, NULL },
    { "getReadablePartial", NULL, "Lorg.joda.time.ReadablePartial;", 0x4, NULL, NULL },
    { "getTimeOfDay", NULL, "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "get", NULL, "I", 0x1, NULL, NULL },
    { "addToCopyWithInt:", "addToCopy", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "addNoWrapToCopyWithInt:", "addNoWrapToCopy", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "addWrapFieldToCopyWithInt:", "addWrapFieldToCopy", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "setCopyWithInt:", "setCopy", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "setCopyWithNSString:withJavaUtilLocale:", "setCopy", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "setCopyWithNSString:", "setCopy", "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "withMaximumValue", NULL, "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
    { "withMinimumValue", NULL, "Lorg.joda.time.TimeOfDay;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeTimeOfDay_Property_serialVersionUID },
    { "iTimeOfDay_", NULL, 0x12, "Lorg.joda.time.TimeOfDay;", NULL, NULL, .constantValue.asLong = 0 },
    { "iFieldIndex_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeTimeOfDay_Property = { 2, "Property", "org.joda.time", "TimeOfDay", 0x9, 13, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeTimeOfDay_Property;
}

@end

void OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(OrgJodaTimeTimeOfDay_Property *self, OrgJodaTimeTimeOfDay *partial, jint fieldIndex) {
  OrgJodaTimeFieldAbstractPartialFieldProperty_init(self);
  JreStrongAssign(&self->iTimeOfDay_, partial);
  self->iFieldIndex_ = fieldIndex;
}

OrgJodaTimeTimeOfDay_Property *new_OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(OrgJodaTimeTimeOfDay *partial, jint fieldIndex) {
  OrgJodaTimeTimeOfDay_Property *self = [OrgJodaTimeTimeOfDay_Property alloc];
  OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(self, partial, fieldIndex);
  return self;
}

OrgJodaTimeTimeOfDay_Property *create_OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(OrgJodaTimeTimeOfDay *partial, jint fieldIndex) {
  OrgJodaTimeTimeOfDay_Property *self = [[OrgJodaTimeTimeOfDay_Property alloc] autorelease];
  OrgJodaTimeTimeOfDay_Property_initWithOrgJodaTimeTimeOfDay_withInt_(self, partial, fieldIndex);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeTimeOfDay_Property)
