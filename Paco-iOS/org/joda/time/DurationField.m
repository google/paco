//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/DurationField.java
//

#include "J2ObjC_source.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "org/joda/time/DurationField.h"
#include "org/joda/time/DurationFieldType.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation OrgJodaTimeDurationField

- (OrgJodaTimeDurationFieldType *)getType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isSupported {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isPrecise {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getUnitMillis {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getValueWithLong:(jlong)duration {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getValueAsLongWithLong:(jlong)duration {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getValueWithLong:(jlong)duration
                withLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getValueAsLongWithLong:(jlong)duration
                       withLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getMillisWithInt:(jint)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getMillisWithLong:(jlong)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getMillisWithInt:(jint)value
                 withLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getMillisWithLong:(jlong)value
                  withLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)subtractWithLong:(jlong)instant
                  withInt:(jint)value {
  if (value == JavaLangInteger_MIN_VALUE) {
    return [self subtractWithLong:instant withLong:(jlong) value];
  }
  return [self addWithLong:instant withInt:-value];
}

- (jlong)subtractWithLong:(jlong)instant
                 withLong:(jlong)value {
  if (value == JavaLangLong_MIN_VALUE) {
    @throw create_JavaLangArithmeticException_initWithNSString_(@"Long.MIN_VALUE cannot be negated");
  }
  return [self addWithLong:instant withLong:-value];
}

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeDurationField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getType", NULL, "Lorg.joda.time.DurationFieldType;", 0x401, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "isSupported", NULL, "Z", 0x401, NULL, NULL },
    { "isPrecise", NULL, "Z", 0x401, NULL, NULL },
    { "getUnitMillis", NULL, "J", 0x401, NULL, NULL },
    { "getValueWithLong:", "getValue", "I", 0x401, NULL, NULL },
    { "getValueAsLongWithLong:", "getValueAsLong", "J", 0x401, NULL, NULL },
    { "getValueWithLong:withLong:", "getValue", "I", 0x401, NULL, NULL },
    { "getValueAsLongWithLong:withLong:", "getValueAsLong", "J", 0x401, NULL, NULL },
    { "getMillisWithInt:", "getMillis", "J", 0x401, NULL, NULL },
    { "getMillisWithLong:", "getMillis", "J", 0x401, NULL, NULL },
    { "getMillisWithInt:withLong:", "getMillis", "J", 0x401, NULL, NULL },
    { "getMillisWithLong:withLong:", "getMillis", "J", 0x401, NULL, NULL },
    { "addWithLong:withInt:", "add", "J", 0x401, NULL, NULL },
    { "addWithLong:withLong:", "add", "J", 0x401, NULL, NULL },
    { "subtractWithLong:withInt:", "subtract", "J", 0x1, NULL, NULL },
    { "subtractWithLong:withLong:", "subtract", "J", 0x1, NULL, NULL },
    { "getDifferenceWithLong:withLong:", "getDifference", "I", 0x401, NULL, NULL },
    { "getDifferenceAsLongWithLong:withLong:", "getDifferenceAsLong", "J", 0x401, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x401, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaTimeDurationField = { 2, "DurationField", "org.joda.time", NULL, 0x401, 21, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/lang/Comparable<Lorg/joda/time/DurationField;>;" };
  return &_OrgJodaTimeDurationField;
}

@end

void OrgJodaTimeDurationField_init(OrgJodaTimeDurationField *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeDurationField)
