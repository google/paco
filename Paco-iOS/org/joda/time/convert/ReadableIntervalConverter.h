//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/convert/ReadableIntervalConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeConvertReadableIntervalConverter_INCLUDE_ALL")
#ifdef OrgJodaTimeConvertReadableIntervalConverter_RESTRICT
#define OrgJodaTimeConvertReadableIntervalConverter_INCLUDE_ALL 0
#else
#define OrgJodaTimeConvertReadableIntervalConverter_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeConvertReadableIntervalConverter_RESTRICT

#if !defined (OrgJodaTimeConvertReadableIntervalConverter_) && (OrgJodaTimeConvertReadableIntervalConverter_INCLUDE_ALL || defined(OrgJodaTimeConvertReadableIntervalConverter_INCLUDE))
#define OrgJodaTimeConvertReadableIntervalConverter_

#define OrgJodaTimeConvertAbstractConverter_RESTRICT 1
#define OrgJodaTimeConvertAbstractConverter_INCLUDE 1
#include "org/joda/time/convert/AbstractConverter.h"

#define OrgJodaTimeConvertIntervalConverter_RESTRICT 1
#define OrgJodaTimeConvertIntervalConverter_INCLUDE 1
#include "org/joda/time/convert/IntervalConverter.h"

#define OrgJodaTimeConvertDurationConverter_RESTRICT 1
#define OrgJodaTimeConvertDurationConverter_INCLUDE 1
#include "org/joda/time/convert/DurationConverter.h"

#define OrgJodaTimeConvertPeriodConverter_RESTRICT 1
#define OrgJodaTimeConvertPeriodConverter_INCLUDE 1
#include "org/joda/time/convert/PeriodConverter.h"

@class IOSClass;
@class OrgJodaTimeChronology;
@protocol OrgJodaTimeReadWritableInterval;
@protocol OrgJodaTimeReadWritablePeriod;

@interface OrgJodaTimeConvertReadableIntervalConverter : OrgJodaTimeConvertAbstractConverter < OrgJodaTimeConvertIntervalConverter, OrgJodaTimeConvertDurationConverter, OrgJodaTimeConvertPeriodConverter >

#pragma mark Public

- (jlong)getDurationMillisWithId:(id)object;

- (IOSClass *)getSupportedType;

- (jboolean)isReadableIntervalWithId:(id)object
           withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

- (void)setIntoWithOrgJodaTimeReadWritableInterval:(id<OrgJodaTimeReadWritableInterval>)writableInterval
                                            withId:(id)object
                         withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

- (void)setIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)writablePeriod
                                          withId:(id)object
                       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeConvertReadableIntervalConverter)

inline OrgJodaTimeConvertReadableIntervalConverter *OrgJodaTimeConvertReadableIntervalConverter_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJodaTimeConvertReadableIntervalConverter *OrgJodaTimeConvertReadableIntervalConverter_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeConvertReadableIntervalConverter, INSTANCE, OrgJodaTimeConvertReadableIntervalConverter *)

FOUNDATION_EXPORT void OrgJodaTimeConvertReadableIntervalConverter_init(OrgJodaTimeConvertReadableIntervalConverter *self);

FOUNDATION_EXPORT OrgJodaTimeConvertReadableIntervalConverter *new_OrgJodaTimeConvertReadableIntervalConverter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeConvertReadableIntervalConverter *create_OrgJodaTimeConvertReadableIntervalConverter_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeConvertReadableIntervalConverter)

#endif

#pragma pop_macro("OrgJodaTimeConvertReadableIntervalConverter_INCLUDE_ALL")
