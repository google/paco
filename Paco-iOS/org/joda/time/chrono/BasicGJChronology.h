//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/chrono/BasicGJChronology.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeChronoBasicGJChronology_INCLUDE_ALL")
#ifdef OrgJodaTimeChronoBasicGJChronology_RESTRICT
#define OrgJodaTimeChronoBasicGJChronology_INCLUDE_ALL 0
#else
#define OrgJodaTimeChronoBasicGJChronology_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeChronoBasicGJChronology_RESTRICT

#if !defined (OrgJodaTimeChronoBasicGJChronology_) && (OrgJodaTimeChronoBasicGJChronology_INCLUDE_ALL || defined(OrgJodaTimeChronoBasicGJChronology_INCLUDE))
#define OrgJodaTimeChronoBasicGJChronology_

#define OrgJodaTimeChronoBasicChronology_RESTRICT 1
#define OrgJodaTimeChronoBasicChronology_INCLUDE 1
#include "org/joda/time/chrono/BasicChronology.h"

@class OrgJodaTimeChronology;

@interface OrgJodaTimeChronoBasicGJChronology : OrgJodaTimeChronoBasicChronology

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base
                                       withId:(id)param
                                      withInt:(jint)minDaysInFirstWeek;

- (jint)getDaysInMonthMaxWithInt:(jint)month;

- (jint)getDaysInMonthMaxForSetWithLong:(jlong)instant
                                withInt:(jint)value;

- (jint)getDaysInYearMonthWithInt:(jint)year
                          withInt:(jint)month;

- (jint)getMonthOfYearWithLong:(jlong)millis
                       withInt:(jint)year;

- (jlong)getTotalMillisByYearMonthWithInt:(jint)year
                                  withInt:(jint)month;

- (jlong)getYearDifferenceWithLong:(jlong)minuendInstant
                          withLong:(jlong)subtrahendInstant;

- (jboolean)isLeapDayWithLong:(jlong)instant;

- (jlong)setYearWithLong:(jlong)instant
                 withInt:(jint)year;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeChronoBasicGJChronology)

FOUNDATION_EXPORT void OrgJodaTimeChronoBasicGJChronology_initWithOrgJodaTimeChronology_withId_withInt_(OrgJodaTimeChronoBasicGJChronology *self, OrgJodaTimeChronology *base, id param, jint minDaysInFirstWeek);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoBasicGJChronology)

#endif

#pragma pop_macro("OrgJodaTimeChronoBasicGJChronology_INCLUDE_ALL")
