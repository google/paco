//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/LocalDateTime.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeLocalDateTime_INCLUDE_ALL")
#ifdef OrgJodaTimeLocalDateTime_RESTRICT
#define OrgJodaTimeLocalDateTime_INCLUDE_ALL 0
#else
#define OrgJodaTimeLocalDateTime_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeLocalDateTime_RESTRICT

#if !defined (OrgJodaTimeLocalDateTime_) && (OrgJodaTimeLocalDateTime_INCLUDE_ALL || defined(OrgJodaTimeLocalDateTime_INCLUDE))
#define OrgJodaTimeLocalDateTime_

#define OrgJodaTimeBaseBaseLocal_RESTRICT 1
#define OrgJodaTimeBaseBaseLocal_INCLUDE 1
#include "org/joda/time/base/BaseLocal.h"

#define OrgJodaTimeReadablePartial_RESTRICT 1
#define OrgJodaTimeReadablePartial_INCLUDE 1
#include "org/joda/time/ReadablePartial.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class JavaUtilCalendar;
@class JavaUtilDate;
@class JavaUtilLocale;
@class JavaUtilTimeZone;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTime;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeDurationFieldType;
@class OrgJodaTimeFormatDateTimeFormatter;
@class OrgJodaTimeLocalDate;
@class OrgJodaTimeLocalDateTime_Property;
@class OrgJodaTimeLocalTime;
@protocol OrgJodaTimeReadableDuration;
@protocol OrgJodaTimeReadablePeriod;

@interface OrgJodaTimeLocalDateTime : OrgJodaTimeBaseBaseLocal < OrgJodaTimeReadablePartial, JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute
                    withInt:(jint)millisOfSecond;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute
                    withInt:(jint)millisOfSecond
  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithLong:(jlong)instant;

- (instancetype)initWithLong:(jlong)instant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithLong:(jlong)instant
 withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (instancetype)initWithId:(id)instant;

- (instancetype)initWithId:(id)instant
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithId:(id)instant
withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (OrgJodaTimeLocalDateTime_Property *)centuryOfEra;

- (jint)compareToWithId:(id<OrgJodaTimeReadablePartial>)partial;

- (OrgJodaTimeLocalDateTime_Property *)dayOfMonth;

- (OrgJodaTimeLocalDateTime_Property *)dayOfWeek;

- (OrgJodaTimeLocalDateTime_Property *)dayOfYear;

- (jboolean)isEqual:(id)partial;

- (OrgJodaTimeLocalDateTime_Property *)era;

+ (OrgJodaTimeLocalDateTime *)fromCalendarFieldsWithJavaUtilCalendar:(JavaUtilCalendar *)calendar;

+ (OrgJodaTimeLocalDateTime *)fromDateFieldsWithJavaUtilDate:(JavaUtilDate *)date;

- (jint)getWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (jint)getCenturyOfEra;

- (OrgJodaTimeChronology *)getChronology;

- (jint)getDayOfMonth;

- (jint)getDayOfWeek;

- (jint)getDayOfYear;

- (jint)getEra;

- (jint)getHourOfDay;

- (jint)getMillisOfDay;

- (jint)getMillisOfSecond;

- (jint)getMinuteOfHour;

- (jint)getMonthOfYear;

- (jint)getSecondOfMinute;

- (jint)getValueWithInt:(jint)index;

- (jint)getWeekOfWeekyear;

- (jint)getWeekyear;

- (jint)getYear;

- (jint)getYearOfCentury;

- (jint)getYearOfEra;

- (OrgJodaTimeLocalDateTime_Property *)hourOfDay;

- (jboolean)isSupportedWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (jboolean)isSupportedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type;

- (OrgJodaTimeLocalDateTime_Property *)millisOfDay;

- (OrgJodaTimeLocalDateTime_Property *)millisOfSecond;

- (OrgJodaTimeLocalDateTime *)minusWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration;

- (OrgJodaTimeLocalDateTime *)minusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (OrgJodaTimeLocalDateTime *)minusDaysWithInt:(jint)days;

- (OrgJodaTimeLocalDateTime *)minusHoursWithInt:(jint)hours;

- (OrgJodaTimeLocalDateTime *)minusMillisWithInt:(jint)millis;

- (OrgJodaTimeLocalDateTime *)minusMinutesWithInt:(jint)minutes;

- (OrgJodaTimeLocalDateTime *)minusMonthsWithInt:(jint)months;

- (OrgJodaTimeLocalDateTime *)minusSecondsWithInt:(jint)seconds;

- (OrgJodaTimeLocalDateTime *)minusWeeksWithInt:(jint)weeks;

- (OrgJodaTimeLocalDateTime *)minusYearsWithInt:(jint)years;

- (OrgJodaTimeLocalDateTime_Property *)minuteOfHour;

- (OrgJodaTimeLocalDateTime_Property *)monthOfYear;

+ (OrgJodaTimeLocalDateTime *)now;

+ (OrgJodaTimeLocalDateTime *)nowWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

+ (OrgJodaTimeLocalDateTime *)nowWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

+ (OrgJodaTimeLocalDateTime *)parseWithNSString:(NSString *)str;

+ (OrgJodaTimeLocalDateTime *)parseWithNSString:(NSString *)str
         withOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)formatter;

- (OrgJodaTimeLocalDateTime *)plusWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration;

- (OrgJodaTimeLocalDateTime *)plusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (OrgJodaTimeLocalDateTime *)plusDaysWithInt:(jint)days;

- (OrgJodaTimeLocalDateTime *)plusHoursWithInt:(jint)hours;

- (OrgJodaTimeLocalDateTime *)plusMillisWithInt:(jint)millis;

- (OrgJodaTimeLocalDateTime *)plusMinutesWithInt:(jint)minutes;

- (OrgJodaTimeLocalDateTime *)plusMonthsWithInt:(jint)months;

- (OrgJodaTimeLocalDateTime *)plusSecondsWithInt:(jint)seconds;

- (OrgJodaTimeLocalDateTime *)plusWeeksWithInt:(jint)weeks;

- (OrgJodaTimeLocalDateTime *)plusYearsWithInt:(jint)years;

- (OrgJodaTimeLocalDateTime_Property *)propertyWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType;

- (OrgJodaTimeLocalDateTime_Property *)secondOfMinute;

- (jint)size;

- (JavaUtilDate *)toDate;

- (JavaUtilDate *)toDateWithJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone;

- (OrgJodaTimeDateTime *)toDateTime;

- (OrgJodaTimeDateTime *)toDateTimeWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (OrgJodaTimeLocalDate *)toLocalDate;

- (OrgJodaTimeLocalTime *)toLocalTime;

- (NSString *)description;

- (NSString *)toStringWithNSString:(NSString *)pattern;

- (NSString *)toStringWithNSString:(NSString *)pattern
                withJavaUtilLocale:(JavaUtilLocale *)locale;

- (OrgJodaTimeLocalDateTime_Property *)weekOfWeekyear;

- (OrgJodaTimeLocalDateTime_Property *)weekyear;

- (OrgJodaTimeLocalDateTime *)withCenturyOfEraWithInt:(jint)centuryOfEra;

- (OrgJodaTimeLocalDateTime *)withDateWithInt:(jint)year
                                      withInt:(jint)monthOfYear
                                      withInt:(jint)dayOfMonth;

- (OrgJodaTimeLocalDateTime *)withDayOfMonthWithInt:(jint)dayOfMonth;

- (OrgJodaTimeLocalDateTime *)withDayOfWeekWithInt:(jint)dayOfWeek;

- (OrgJodaTimeLocalDateTime *)withDayOfYearWithInt:(jint)dayOfYear;

- (OrgJodaTimeLocalDateTime *)withDurationAddedWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)durationToAdd
                                                                       withInt:(jint)scalar;

- (OrgJodaTimeLocalDateTime *)withEraWithInt:(jint)era;

- (OrgJodaTimeLocalDateTime *)withFieldWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                                withInt:(jint)value;

- (OrgJodaTimeLocalDateTime *)withFieldAddedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                                                     withInt:(jint)amount;

- (OrgJodaTimeLocalDateTime *)withFieldsWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial;

- (OrgJodaTimeLocalDateTime *)withHourOfDayWithInt:(jint)hour;

- (OrgJodaTimeLocalDateTime *)withMillisOfDayWithInt:(jint)millis;

- (OrgJodaTimeLocalDateTime *)withMillisOfSecondWithInt:(jint)millis;

- (OrgJodaTimeLocalDateTime *)withMinuteOfHourWithInt:(jint)minute;

- (OrgJodaTimeLocalDateTime *)withMonthOfYearWithInt:(jint)monthOfYear;

- (OrgJodaTimeLocalDateTime *)withPeriodAddedWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                                   withInt:(jint)scalar;

- (OrgJodaTimeLocalDateTime *)withSecondOfMinuteWithInt:(jint)second;

- (OrgJodaTimeLocalDateTime *)withTimeWithInt:(jint)hourOfDay
                                      withInt:(jint)minuteOfHour
                                      withInt:(jint)secondOfMinute
                                      withInt:(jint)millisOfSecond;

- (OrgJodaTimeLocalDateTime *)withWeekOfWeekyearWithInt:(jint)weekOfWeekyear;

- (OrgJodaTimeLocalDateTime *)withWeekyearWithInt:(jint)weekyear;

- (OrgJodaTimeLocalDateTime *)withYearWithInt:(jint)year;

- (OrgJodaTimeLocalDateTime *)withYearOfCenturyWithInt:(jint)yearOfCentury;

- (OrgJodaTimeLocalDateTime *)withYearOfEraWithInt:(jint)yearOfEra;

- (OrgJodaTimeLocalDateTime_Property *)year;

- (OrgJodaTimeLocalDateTime_Property *)yearOfCentury;

- (OrgJodaTimeLocalDateTime_Property *)yearOfEra;

#pragma mark Protected

- (OrgJodaTimeDateTimeField *)getFieldWithInt:(jint)index
                    withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

- (jlong)getLocalMillis;

#pragma mark Package-Private

- (OrgJodaTimeLocalDateTime *)withLocalMillisWithLong:(jlong)newMillis;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeLocalDateTime)

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *OrgJodaTimeLocalDateTime_now();

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *OrgJodaTimeLocalDateTime_nowWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *OrgJodaTimeLocalDateTime_nowWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *OrgJodaTimeLocalDateTime_parseWithNSString_(NSString *str);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *OrgJodaTimeLocalDateTime_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_(NSString *str, OrgJodaTimeFormatDateTimeFormatter *formatter);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *OrgJodaTimeLocalDateTime_fromCalendarFieldsWithJavaUtilCalendar_(JavaUtilCalendar *calendar);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *OrgJodaTimeLocalDateTime_fromDateFieldsWithJavaUtilDate_(JavaUtilDate *date);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_init(OrgJodaTimeLocalDateTime *self);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_init();

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeLocalDateTime *self, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithOrgJodaTimeChronology_(OrgJodaTimeLocalDateTime *self, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithLong_(OrgJodaTimeLocalDateTime *self, jlong instant);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithLong_(jlong instant) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithLong_(jlong instant);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithLong_withOrgJodaTimeDateTimeZone_(OrgJodaTimeLocalDateTime *self, jlong instant, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithLong_withOrgJodaTimeDateTimeZone_(jlong instant, OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithLong_withOrgJodaTimeDateTimeZone_(jlong instant, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithLong_withOrgJodaTimeChronology_(OrgJodaTimeLocalDateTime *self, jlong instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithId_(OrgJodaTimeLocalDateTime *self, id instant);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithId_(id instant) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithId_(id instant);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithId_withOrgJodaTimeDateTimeZone_(OrgJodaTimeLocalDateTime *self, id instant, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithId_withOrgJodaTimeDateTimeZone_(id instant, OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithId_withOrgJodaTimeDateTimeZone_(id instant, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithId_withOrgJodaTimeChronology_(OrgJodaTimeLocalDateTime *self, id instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_(OrgJodaTimeLocalDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_(OrgJodaTimeLocalDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(OrgJodaTimeLocalDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond);

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(OrgJodaTimeLocalDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *new_OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime *create_OrgJodaTimeLocalDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeChronology *chronology);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeLocalDateTime)

#endif

#if !defined (OrgJodaTimeLocalDateTime_Property_) && (OrgJodaTimeLocalDateTime_INCLUDE_ALL || defined(OrgJodaTimeLocalDateTime_Property_INCLUDE))
#define OrgJodaTimeLocalDateTime_Property_

#define OrgJodaTimeFieldAbstractReadableInstantFieldProperty_RESTRICT 1
#define OrgJodaTimeFieldAbstractReadableInstantFieldProperty_INCLUDE 1
#include "org/joda/time/field/AbstractReadableInstantFieldProperty.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeLocalDateTime;

@interface OrgJodaTimeLocalDateTime_Property : OrgJodaTimeFieldAbstractReadableInstantFieldProperty

#pragma mark Public

- (OrgJodaTimeLocalDateTime *)addToCopyWithInt:(jint)value;

- (OrgJodaTimeLocalDateTime *)addToCopyWithLong:(jlong)value;

- (OrgJodaTimeLocalDateTime *)addWrapFieldToCopyWithInt:(jint)value;

- (OrgJodaTimeDateTimeField *)getField;

- (OrgJodaTimeLocalDateTime *)getLocalDateTime;

- (OrgJodaTimeLocalDateTime *)roundCeilingCopy;

- (OrgJodaTimeLocalDateTime *)roundFloorCopy;

- (OrgJodaTimeLocalDateTime *)roundHalfCeilingCopy;

- (OrgJodaTimeLocalDateTime *)roundHalfEvenCopy;

- (OrgJodaTimeLocalDateTime *)roundHalfFloorCopy;

- (OrgJodaTimeLocalDateTime *)setCopyWithInt:(jint)value;

- (OrgJodaTimeLocalDateTime *)setCopyWithNSString:(NSString *)text;

- (OrgJodaTimeLocalDateTime *)setCopyWithNSString:(NSString *)text
                               withJavaUtilLocale:(JavaUtilLocale *)locale;

- (OrgJodaTimeLocalDateTime *)withMaximumValue;

- (OrgJodaTimeLocalDateTime *)withMinimumValue;

#pragma mark Protected

- (OrgJodaTimeChronology *)getChronology;

- (jlong)getMillis;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeLocalDateTime:(OrgJodaTimeLocalDateTime *)instant
                    withOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeLocalDateTime_Property)

FOUNDATION_EXPORT void OrgJodaTimeLocalDateTime_Property_initWithOrgJodaTimeLocalDateTime_withOrgJodaTimeDateTimeField_(OrgJodaTimeLocalDateTime_Property *self, OrgJodaTimeLocalDateTime *instant, OrgJodaTimeDateTimeField *field);

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime_Property *new_OrgJodaTimeLocalDateTime_Property_initWithOrgJodaTimeLocalDateTime_withOrgJodaTimeDateTimeField_(OrgJodaTimeLocalDateTime *instant, OrgJodaTimeDateTimeField *field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeLocalDateTime_Property *create_OrgJodaTimeLocalDateTime_Property_initWithOrgJodaTimeLocalDateTime_withOrgJodaTimeDateTimeField_(OrgJodaTimeLocalDateTime *instant, OrgJodaTimeDateTimeField *field);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeLocalDateTime_Property)

#endif

#pragma pop_macro("OrgJodaTimeLocalDateTime_INCLUDE_ALL")
