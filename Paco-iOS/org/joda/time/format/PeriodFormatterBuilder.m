//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Set.h"
#include "java/util/TreeSet.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "java/util/concurrent/ConcurrentMap.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "org/joda/time/DateTimeConstants.h"
#include "org/joda/time/DurationFieldType.h"
#include "org/joda/time/PeriodType.h"
#include "org/joda/time/ReadWritablePeriod.h"
#include "org/joda/time/ReadablePeriod.h"
#include "org/joda/time/format/FormatUtils.h"
#include "org/joda/time/format/PeriodFormatter.h"
#include "org/joda/time/format/PeriodFormatterBuilder.h"
#include "org/joda/time/format/PeriodParser.h"
#include "org/joda/time/format/PeriodPrinter.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgJodaTimeFormatPeriodFormatterBuilder () {
 @public
  jint iMinPrintedDigits_;
  jint iPrintZeroSetting_;
  jint iMaxParsedDigits_;
  jboolean iRejectSignedValues_;
  id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> iPrefix_;
  id<JavaUtilList> iElementPairs_;
  jboolean iNotPrinter_;
  jboolean iNotParser_;
  IOSObjectArray *iFieldFormatters_;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendPrefixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)prefix;

- (void)appendFieldWithInt:(jint)type;

- (void)appendFieldWithInt:(jint)type
                   withInt:(jint)minPrinted;

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSuffixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)suffix;

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSeparatorWithNSString:(NSString *)text
                                                            withNSString:(NSString *)finalText
                                                       withNSStringArray:(IOSObjectArray *)variants
                                                             withBoolean:(jboolean)useBefore
                                                             withBoolean:(jboolean)useAfter;

- (void)clearPrefix;

- (OrgJodaTimeFormatPeriodFormatterBuilder *)append0WithOrgJodaTimeFormatPeriodPrinter:(id<OrgJodaTimeFormatPeriodPrinter>)printer
                                                     withOrgJodaTimeFormatPeriodParser:(id<OrgJodaTimeFormatPeriodParser>)parser;

+ (OrgJodaTimeFormatPeriodFormatter *)toFormatterWithJavaUtilList:(id<JavaUtilList>)elementPairs
                                                      withBoolean:(jboolean)notPrinter
                                                      withBoolean:(jboolean)notParser;

+ (IOSObjectArray *)createCompositeWithJavaUtilList:(id<JavaUtilList>)elementPairs;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder, iPrefix_, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder, iElementPairs_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder, iFieldFormatters_, IOSObjectArray *)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_PRINT_ZERO_RARELY_FIRST();
#define OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_RARELY_FIRST 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, PRINT_ZERO_RARELY_FIRST, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_PRINT_ZERO_RARELY_LAST();
#define OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_RARELY_LAST 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, PRINT_ZERO_RARELY_LAST, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_PRINT_ZERO_IF_SUPPORTED();
#define OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_IF_SUPPORTED 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, PRINT_ZERO_IF_SUPPORTED, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_PRINT_ZERO_ALWAYS();
#define OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_ALWAYS 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, PRINT_ZERO_ALWAYS, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_PRINT_ZERO_NEVER();
#define OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_NEVER 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, PRINT_ZERO_NEVER, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_YEARS();
#define OrgJodaTimeFormatPeriodFormatterBuilder_YEARS 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, YEARS, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_MONTHS();
#define OrgJodaTimeFormatPeriodFormatterBuilder_MONTHS 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, MONTHS, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_WEEKS();
#define OrgJodaTimeFormatPeriodFormatterBuilder_WEEKS 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, WEEKS, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_DAYS();
#define OrgJodaTimeFormatPeriodFormatterBuilder_DAYS 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, DAYS, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_HOURS();
#define OrgJodaTimeFormatPeriodFormatterBuilder_HOURS 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, HOURS, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_MINUTES();
#define OrgJodaTimeFormatPeriodFormatterBuilder_MINUTES 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, MINUTES, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_SECONDS();
#define OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, SECONDS, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_MILLIS();
#define OrgJodaTimeFormatPeriodFormatterBuilder_MILLIS 7
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, MILLIS, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_SECONDS_MILLIS();
#define OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, SECONDS_MILLIS, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_SECONDS_OPTIONAL_MILLIS();
#define OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_OPTIONAL_MILLIS 9
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, SECONDS_OPTIONAL_MILLIS, jint)

inline jint OrgJodaTimeFormatPeriodFormatterBuilder_get_MAX_FIELD();
#define OrgJodaTimeFormatPeriodFormatterBuilder_MAX_FIELD 9
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatPeriodFormatterBuilder, MAX_FIELD, jint)

inline id<JavaUtilConcurrentConcurrentMap> OrgJodaTimeFormatPeriodFormatterBuilder_get_PATTERNS();
static id<JavaUtilConcurrentConcurrentMap> OrgJodaTimeFormatPeriodFormatterBuilder_PATTERNS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatPeriodFormatterBuilder, PATTERNS, id<JavaUtilConcurrentConcurrentMap>)

__attribute__((unused)) static OrgJodaTimeFormatPeriodFormatterBuilder *OrgJodaTimeFormatPeriodFormatterBuilder_appendPrefixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(OrgJodaTimeFormatPeriodFormatterBuilder *self, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> prefix);

__attribute__((unused)) static void OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(OrgJodaTimeFormatPeriodFormatterBuilder *self, jint type);

__attribute__((unused)) static void OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_withInt_(OrgJodaTimeFormatPeriodFormatterBuilder *self, jint type, jint minPrinted);

__attribute__((unused)) static OrgJodaTimeFormatPeriodFormatterBuilder *OrgJodaTimeFormatPeriodFormatterBuilder_appendSuffixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(OrgJodaTimeFormatPeriodFormatterBuilder *self, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> suffix);

__attribute__((unused)) static OrgJodaTimeFormatPeriodFormatterBuilder *OrgJodaTimeFormatPeriodFormatterBuilder_appendSeparatorWithNSString_withNSString_withNSStringArray_withBoolean_withBoolean_(OrgJodaTimeFormatPeriodFormatterBuilder *self, NSString *text, NSString *finalText, IOSObjectArray *variants, jboolean useBefore, jboolean useAfter);

__attribute__((unused)) static void OrgJodaTimeFormatPeriodFormatterBuilder_clearPrefix(OrgJodaTimeFormatPeriodFormatterBuilder *self);

__attribute__((unused)) static OrgJodaTimeFormatPeriodFormatterBuilder *OrgJodaTimeFormatPeriodFormatterBuilder_append0WithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(OrgJodaTimeFormatPeriodFormatterBuilder *self, id<OrgJodaTimeFormatPeriodPrinter> printer, id<OrgJodaTimeFormatPeriodParser> parser);

__attribute__((unused)) static OrgJodaTimeFormatPeriodFormatter *OrgJodaTimeFormatPeriodFormatterBuilder_toFormatterWithJavaUtilList_withBoolean_withBoolean_(id<JavaUtilList> elementPairs, jboolean notPrinter, jboolean notParser);

__attribute__((unused)) static IOSObjectArray *OrgJodaTimeFormatPeriodFormatterBuilder_createCompositeWithJavaUtilList_(id<JavaUtilList> elementPairs);

@interface OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix : NSObject

@end

@interface OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix () {
 @public
  volatile_id iOtherAffixes_;
}

@end

J2OBJC_VOLATILE_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix, iOtherAffixes_, IOSObjectArray *)

@interface OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix () {
 @public
  NSString *iText_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix, iText_, NSString *)

@interface OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix () {
 @public
  NSString *iSingularText_;
  NSString *iPluralText_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix, iSingularText_, NSString *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix, iPluralText_, NSString *)

@interface OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix () {
 @public
  IOSObjectArray *iSuffixes_;
  IOSObjectArray *iPatterns_;
  IOSObjectArray *iSuffixesSortedDescByLength_;
}

- (jint)selectSuffixIndexWithInt:(jint)value;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix, iSuffixes_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix, iPatterns_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix, iSuffixesSortedDescByLength_, IOSObjectArray *)

inline id<JavaUtilComparator> OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_get_LENGTH_DESC_COMPARATOR();
static id<JavaUtilComparator> OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_LENGTH_DESC_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix, LENGTH_DESC_COMPARATOR, id<JavaUtilComparator>)

__attribute__((unused)) static jint OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_selectSuffixIndexWithInt_(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix *self, jint value);

@interface OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(NSString *)o1
               withId:(NSString *)o2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1)

__attribute__((unused)) static void OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1_init(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 *self);

__attribute__((unused)) static OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 *new_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 *create_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1)

@interface OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix () {
 @public
  id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> iLeft_;
  id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> iRight_;
  IOSObjectArray *iLeftRightCombinations_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix, iLeft_, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix, iRight_, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix, iLeftRightCombinations_, IOSObjectArray *)

@interface OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter () {
 @public
  jint iMinPrintedDigits_;
  jint iPrintZeroSetting_;
  jint iMaxParsedDigits_;
  jboolean iRejectSignedValues_;
  jint iFieldType_;
  IOSObjectArray *iFieldFormatters_;
  id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> iPrefix_;
  id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> iSuffix_;
}

- (jint)parseIntWithNSString:(NSString *)text
                     withInt:(jint)position
                     withInt:(jint)length;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter, iFieldFormatters_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter, iPrefix_, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter, iSuffix_, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)

__attribute__((unused)) static jint OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_parseIntWithNSString_withInt_withInt_(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *self, NSString *text, jint position, jint length);

@interface OrgJodaTimeFormatPeriodFormatterBuilder_Literal () {
 @public
  NSString *iText_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_Literal, iText_, NSString *)

@interface OrgJodaTimeFormatPeriodFormatterBuilder_Separator () {
 @public
  NSString *iText_;
  NSString *iFinalText_;
  IOSObjectArray *iParsedForms_;
  jboolean iUseBefore_;
  jboolean iUseAfter_;
  id<OrgJodaTimeFormatPeriodPrinter> iBeforePrinter_;
  volatile_id iAfterPrinter_;
  id<OrgJodaTimeFormatPeriodParser> iBeforeParser_;
  volatile_id iAfterParser_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_Separator, iText_, NSString *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_Separator, iFinalText_, NSString *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_Separator, iParsedForms_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_Separator, iBeforePrinter_, id<OrgJodaTimeFormatPeriodPrinter>)
J2OBJC_VOLATILE_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_Separator, iAfterPrinter_, id<OrgJodaTimeFormatPeriodPrinter>)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_Separator, iBeforeParser_, id<OrgJodaTimeFormatPeriodParser>)
J2OBJC_VOLATILE_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_Separator, iAfterParser_, id<OrgJodaTimeFormatPeriodParser>)

@interface OrgJodaTimeFormatPeriodFormatterBuilder_Composite () {
 @public
  IOSObjectArray *iPrinters_;
  IOSObjectArray *iParsers_;
}

- (void)decomposeWithJavaUtilList:(id<JavaUtilList>)elementPairs
                 withJavaUtilList:(id<JavaUtilList>)printerList
                 withJavaUtilList:(id<JavaUtilList>)parserList;

- (void)addArrayToListWithJavaUtilList:(id<JavaUtilList>)list
                     withNSObjectArray:(IOSObjectArray *)array;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_Composite, iPrinters_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatterBuilder_Composite, iParsers_, IOSObjectArray *)

__attribute__((unused)) static void OrgJodaTimeFormatPeriodFormatterBuilder_Composite_decomposeWithJavaUtilList_withJavaUtilList_withJavaUtilList_(OrgJodaTimeFormatPeriodFormatterBuilder_Composite *self, id<JavaUtilList> elementPairs, id<JavaUtilList> printerList, id<JavaUtilList> parserList);

__attribute__((unused)) static void OrgJodaTimeFormatPeriodFormatterBuilder_Composite_addArrayToListWithJavaUtilList_withNSObjectArray_(OrgJodaTimeFormatPeriodFormatterBuilder_Composite *self, id<JavaUtilList> list, IOSObjectArray *array);

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeFormatPeriodFormatterBuilder)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeFormatPeriodFormatterBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJodaTimeFormatPeriodFormatter *)toFormatter {
  OrgJodaTimeFormatPeriodFormatter *formatter = OrgJodaTimeFormatPeriodFormatterBuilder_toFormatterWithJavaUtilList_withBoolean_withBoolean_(iElementPairs_, iNotPrinter_, iNotParser_);
  {
    IOSObjectArray *a__ = iFieldFormatters_;
    OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *fieldFormatter = *b__++;
      if (fieldFormatter != nil) {
        [fieldFormatter finishWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray:iFieldFormatters_];
      }
    }
  }
  JreStrongAssign(&iFieldFormatters_, [((IOSObjectArray *) nil_chk(iFieldFormatters_)) clone]);
  return formatter;
}

- (id<OrgJodaTimeFormatPeriodPrinter>)toPrinter {
  if (iNotPrinter_) {
    return nil;
  }
  return [((OrgJodaTimeFormatPeriodFormatter *) nil_chk([self toFormatter])) getPrinter];
}

- (id<OrgJodaTimeFormatPeriodParser>)toParser {
  if (iNotParser_) {
    return nil;
  }
  return [((OrgJodaTimeFormatPeriodFormatter *) nil_chk([self toFormatter])) getParser];
}

- (void)clear {
  iMinPrintedDigits_ = 1;
  iPrintZeroSetting_ = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_RARELY_LAST;
  iMaxParsedDigits_ = 10;
  iRejectSignedValues_ = false;
  JreStrongAssign(&iPrefix_, nil);
  if (iElementPairs_ == nil) {
    JreStrongAssignAndConsume(&iElementPairs_, new_JavaUtilArrayList_init());
  }
  else {
    [iElementPairs_ clear];
  }
  iNotPrinter_ = false;
  iNotParser_ = false;
  JreStrongAssignAndConsume(&iFieldFormatters_, [IOSObjectArray newArrayWithLength:10 type:OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_class_()]);
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendWithOrgJodaTimeFormatPeriodFormatter:(OrgJodaTimeFormatPeriodFormatter *)formatter {
  if (formatter == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"No formatter supplied");
  }
  OrgJodaTimeFormatPeriodFormatterBuilder_clearPrefix(self);
  OrgJodaTimeFormatPeriodFormatterBuilder_append0WithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(self, [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(formatter)) getPrinter], [formatter getParser]);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendWithOrgJodaTimeFormatPeriodPrinter:(id<OrgJodaTimeFormatPeriodPrinter>)printer
                                                    withOrgJodaTimeFormatPeriodParser:(id<OrgJodaTimeFormatPeriodParser>)parser {
  if (printer == nil && parser == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"No printer or parser supplied");
  }
  OrgJodaTimeFormatPeriodFormatterBuilder_clearPrefix(self);
  OrgJodaTimeFormatPeriodFormatterBuilder_append0WithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(self, printer, parser);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendLiteralWithNSString:(NSString *)text {
  if (text == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Literal must not be null");
  }
  OrgJodaTimeFormatPeriodFormatterBuilder_clearPrefix(self);
  OrgJodaTimeFormatPeriodFormatterBuilder_Literal *literal = create_OrgJodaTimeFormatPeriodFormatterBuilder_Literal_initWithNSString_(text);
  OrgJodaTimeFormatPeriodFormatterBuilder_append0WithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(self, literal, literal);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)minimumPrintedDigitsWithInt:(jint)minDigits {
  iMinPrintedDigits_ = minDigits;
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)maximumParsedDigitsWithInt:(jint)maxDigits {
  iMaxParsedDigits_ = maxDigits;
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)rejectSignedValuesWithBoolean:(jboolean)v {
  iRejectSignedValues_ = v;
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)printZeroRarelyLast {
  iPrintZeroSetting_ = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_RARELY_LAST;
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)printZeroRarelyFirst {
  iPrintZeroSetting_ = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_RARELY_FIRST;
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)printZeroIfSupported {
  iPrintZeroSetting_ = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_IF_SUPPORTED;
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)printZeroAlways {
  iPrintZeroSetting_ = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_ALWAYS;
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)printZeroNever {
  iPrintZeroSetting_ = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_NEVER;
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendPrefixWithNSString:(NSString *)text {
  if (text == nil) {
    @throw create_JavaLangIllegalArgumentException_init();
  }
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendPrefixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, create_OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix_initWithNSString_(text));
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendPrefixWithNSString:(NSString *)singularText
                                                         withNSString:(NSString *)pluralText {
  if (singularText == nil || pluralText == nil) {
    @throw create_JavaLangIllegalArgumentException_init();
  }
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendPrefixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, create_OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix_initWithNSString_withNSString_(singularText, pluralText));
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendPrefixWithNSStringArray:(IOSObjectArray *)regularExpressions
                                                         withNSStringArray:(IOSObjectArray *)prefixes {
  if (regularExpressions == nil || prefixes == nil || regularExpressions->size_ < 1 || regularExpressions->size_ != prefixes->size_) {
    @throw create_JavaLangIllegalArgumentException_init();
  }
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendPrefixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, create_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_initWithNSStringArray_withNSStringArray_(regularExpressions, prefixes));
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendPrefixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)prefix {
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendPrefixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, prefix);
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendYears {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, OrgJodaTimeFormatPeriodFormatterBuilder_YEARS);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendMonths {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, OrgJodaTimeFormatPeriodFormatterBuilder_MONTHS);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendWeeks {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, OrgJodaTimeFormatPeriodFormatterBuilder_WEEKS);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendDays {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, OrgJodaTimeFormatPeriodFormatterBuilder_DAYS);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendHours {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, OrgJodaTimeFormatPeriodFormatterBuilder_HOURS);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendMinutes {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, OrgJodaTimeFormatPeriodFormatterBuilder_MINUTES);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSeconds {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSecondsWithMillis {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSecondsWithOptionalMillis {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_OPTIONAL_MILLIS);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendMillis {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, OrgJodaTimeFormatPeriodFormatterBuilder_MILLIS);
  return self;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendMillis3Digit {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_withInt_(self, 7, 3);
  return self;
}

- (void)appendFieldWithInt:(jint)type {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(self, type);
}

- (void)appendFieldWithInt:(jint)type
                   withInt:(jint)minPrinted {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_withInt_(self, type, minPrinted);
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSuffixWithNSString:(NSString *)text {
  if (text == nil) {
    @throw create_JavaLangIllegalArgumentException_init();
  }
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendSuffixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, create_OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix_initWithNSString_(text));
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSuffixWithNSString:(NSString *)singularText
                                                         withNSString:(NSString *)pluralText {
  if (singularText == nil || pluralText == nil) {
    @throw create_JavaLangIllegalArgumentException_init();
  }
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendSuffixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, create_OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix_initWithNSString_withNSString_(singularText, pluralText));
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSuffixWithNSStringArray:(IOSObjectArray *)regularExpressions
                                                         withNSStringArray:(IOSObjectArray *)suffixes {
  if (regularExpressions == nil || suffixes == nil || regularExpressions->size_ < 1 || regularExpressions->size_ != suffixes->size_) {
    @throw create_JavaLangIllegalArgumentException_init();
  }
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendSuffixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, create_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_initWithNSStringArray_withNSStringArray_(regularExpressions, suffixes));
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSuffixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)suffix {
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendSuffixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, suffix);
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSeparatorWithNSString:(NSString *)text {
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendSeparatorWithNSString_withNSString_withNSStringArray_withBoolean_withBoolean_(self, text, text, nil, true, true);
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSeparatorIfFieldsAfterWithNSString:(NSString *)text {
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendSeparatorWithNSString_withNSString_withNSStringArray_withBoolean_withBoolean_(self, text, text, nil, false, true);
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSeparatorIfFieldsBeforeWithNSString:(NSString *)text {
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendSeparatorWithNSString_withNSString_withNSStringArray_withBoolean_withBoolean_(self, text, text, nil, true, false);
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSeparatorWithNSString:(NSString *)text
                                                            withNSString:(NSString *)finalText {
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendSeparatorWithNSString_withNSString_withNSStringArray_withBoolean_withBoolean_(self, text, finalText, nil, true, true);
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSeparatorWithNSString:(NSString *)text
                                                            withNSString:(NSString *)finalText
                                                       withNSStringArray:(IOSObjectArray *)variants {
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendSeparatorWithNSString_withNSString_withNSStringArray_withBoolean_withBoolean_(self, text, finalText, variants, true, true);
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)appendSeparatorWithNSString:(NSString *)text
                                                            withNSString:(NSString *)finalText
                                                       withNSStringArray:(IOSObjectArray *)variants
                                                             withBoolean:(jboolean)useBefore
                                                             withBoolean:(jboolean)useAfter {
  return OrgJodaTimeFormatPeriodFormatterBuilder_appendSeparatorWithNSString_withNSString_withNSStringArray_withBoolean_withBoolean_(self, text, finalText, variants, useBefore, useAfter);
}

- (void)clearPrefix {
  OrgJodaTimeFormatPeriodFormatterBuilder_clearPrefix(self);
}

- (OrgJodaTimeFormatPeriodFormatterBuilder *)append0WithOrgJodaTimeFormatPeriodPrinter:(id<OrgJodaTimeFormatPeriodPrinter>)printer
                                                     withOrgJodaTimeFormatPeriodParser:(id<OrgJodaTimeFormatPeriodParser>)parser {
  return OrgJodaTimeFormatPeriodFormatterBuilder_append0WithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(self, printer, parser);
}

+ (OrgJodaTimeFormatPeriodFormatter *)toFormatterWithJavaUtilList:(id<JavaUtilList>)elementPairs
                                                      withBoolean:(jboolean)notPrinter
                                                      withBoolean:(jboolean)notParser {
  return OrgJodaTimeFormatPeriodFormatterBuilder_toFormatterWithJavaUtilList_withBoolean_withBoolean_(elementPairs, notPrinter, notParser);
}

+ (IOSObjectArray *)createCompositeWithJavaUtilList:(id<JavaUtilList>)elementPairs {
  return OrgJodaTimeFormatPeriodFormatterBuilder_createCompositeWithJavaUtilList_(elementPairs);
}

- (void)dealloc {
  RELEASE_(iPrefix_);
  RELEASE_(iElementPairs_);
  RELEASE_(iFieldFormatters_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgJodaTimeFormatPeriodFormatterBuilder class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeFormatPeriodFormatterBuilder_PATTERNS, new_JavaUtilConcurrentConcurrentHashMap_init());
    J2OBJC_SET_INITIALIZED(OrgJodaTimeFormatPeriodFormatterBuilder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "PeriodFormatterBuilder", NULL, 0x1, NULL, NULL },
    { "toFormatter", NULL, "Lorg.joda.time.format.PeriodFormatter;", 0x1, NULL, NULL },
    { "toPrinter", NULL, "Lorg.joda.time.format.PeriodPrinter;", 0x1, NULL, NULL },
    { "toParser", NULL, "Lorg.joda.time.format.PeriodParser;", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "appendWithOrgJodaTimeFormatPeriodFormatter:", "append", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendWithOrgJodaTimeFormatPeriodPrinter:withOrgJodaTimeFormatPeriodParser:", "append", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendLiteralWithNSString:", "appendLiteral", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "minimumPrintedDigitsWithInt:", "minimumPrintedDigits", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "maximumParsedDigitsWithInt:", "maximumParsedDigits", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "rejectSignedValuesWithBoolean:", "rejectSignedValues", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "printZeroRarelyLast", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "printZeroRarelyFirst", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "printZeroIfSupported", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "printZeroAlways", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "printZeroNever", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendPrefixWithNSString:", "appendPrefix", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendPrefixWithNSString:withNSString:", "appendPrefix", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendPrefixWithNSStringArray:withNSStringArray:", "appendPrefix", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendPrefixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:", "appendPrefix", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x2, NULL, NULL },
    { "appendYears", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendMonths", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendWeeks", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendDays", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendHours", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendMinutes", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSeconds", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSecondsWithMillis", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSecondsWithOptionalMillis", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendMillis", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendMillis3Digit", NULL, "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendFieldWithInt:", "appendField", "V", 0x2, NULL, NULL },
    { "appendFieldWithInt:withInt:", "appendField", "V", 0x2, NULL, NULL },
    { "appendSuffixWithNSString:", "appendSuffix", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSuffixWithNSString:withNSString:", "appendSuffix", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSuffixWithNSStringArray:withNSStringArray:", "appendSuffix", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSuffixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:", "appendSuffix", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x2, NULL, NULL },
    { "appendSeparatorWithNSString:", "appendSeparator", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSeparatorIfFieldsAfterWithNSString:", "appendSeparatorIfFieldsAfter", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSeparatorIfFieldsBeforeWithNSString:", "appendSeparatorIfFieldsBefore", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSeparatorWithNSString:withNSString:", "appendSeparator", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSeparatorWithNSString:withNSString:withNSStringArray:", "appendSeparator", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x1, NULL, NULL },
    { "appendSeparatorWithNSString:withNSString:withNSStringArray:withBoolean:withBoolean:", "appendSeparator", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x2, NULL, NULL },
    { "clearPrefix", NULL, "V", 0x2, "Ljava.lang.IllegalStateException;", NULL },
    { "append0WithOrgJodaTimeFormatPeriodPrinter:withOrgJodaTimeFormatPeriodParser:", "append0", "Lorg.joda.time.format.PeriodFormatterBuilder;", 0x2, NULL, NULL },
    { "toFormatterWithJavaUtilList:withBoolean:withBoolean:", "toFormatter", "Lorg.joda.time.format.PeriodFormatter;", 0xa, NULL, "(Ljava/util/List<Ljava/lang/Object;>;ZZ)Lorg/joda/time/format/PeriodFormatter;" },
    { "createCompositeWithJavaUtilList:", "createComposite", "[Ljava.lang.Object;", 0xa, NULL, "(Ljava/util/List<Ljava/lang/Object;>;)[Ljava/lang/Object;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PRINT_ZERO_RARELY_FIRST", "PRINT_ZERO_RARELY_FIRST", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_RARELY_FIRST },
    { "PRINT_ZERO_RARELY_LAST", "PRINT_ZERO_RARELY_LAST", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_RARELY_LAST },
    { "PRINT_ZERO_IF_SUPPORTED", "PRINT_ZERO_IF_SUPPORTED", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_IF_SUPPORTED },
    { "PRINT_ZERO_ALWAYS", "PRINT_ZERO_ALWAYS", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_ALWAYS },
    { "PRINT_ZERO_NEVER", "PRINT_ZERO_NEVER", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_NEVER },
    { "YEARS", "YEARS", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_YEARS },
    { "MONTHS", "MONTHS", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_MONTHS },
    { "WEEKS", "WEEKS", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_WEEKS },
    { "DAYS", "DAYS", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_DAYS },
    { "HOURS", "HOURS", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_HOURS },
    { "MINUTES", "MINUTES", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_MINUTES },
    { "SECONDS", "SECONDS", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS },
    { "MILLIS", "MILLIS", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_MILLIS },
    { "SECONDS_MILLIS", "SECONDS_MILLIS", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS },
    { "SECONDS_OPTIONAL_MILLIS", "SECONDS_OPTIONAL_MILLIS", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_OPTIONAL_MILLIS },
    { "MAX_FIELD", "MAX_FIELD", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgJodaTimeFormatPeriodFormatterBuilder_MAX_FIELD },
    { "PATTERNS", "PATTERNS", 0x1a, "Ljava.util.concurrent.ConcurrentMap;", &OrgJodaTimeFormatPeriodFormatterBuilder_PATTERNS, "Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/regex/Pattern;>;", .constantValue.asLong = 0 },
    { "iMinPrintedDigits_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "iPrintZeroSetting_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "iMaxParsedDigits_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "iRejectSignedValues_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "iPrefix_", NULL, 0x2, "Lorg.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;", NULL, NULL, .constantValue.asLong = 0 },
    { "iElementPairs_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "iNotPrinter_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "iNotParser_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "iFieldFormatters_", NULL, 0x2, "[Lorg.joda.time.format.PeriodFormatterBuilder$FieldFormatter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;", "Lorg.joda.time.format.PeriodFormatterBuilder$IgnorableAffix;", "Lorg.joda.time.format.PeriodFormatterBuilder$SimpleAffix;", "Lorg.joda.time.format.PeriodFormatterBuilder$PluralAffix;", "Lorg.joda.time.format.PeriodFormatterBuilder$RegExAffix;", "Lorg.joda.time.format.PeriodFormatterBuilder$CompositeAffix;", "Lorg.joda.time.format.PeriodFormatterBuilder$FieldFormatter;", "Lorg.joda.time.format.PeriodFormatterBuilder$Literal;", "Lorg.joda.time.format.PeriodFormatterBuilder$Separator;", "Lorg.joda.time.format.PeriodFormatterBuilder$Composite;"};
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder = { 2, "PeriodFormatterBuilder", "org.joda.time.format", NULL, 0x1, 47, methods, 26, fields, 0, NULL, 10, inner_classes, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_init(OrgJodaTimeFormatPeriodFormatterBuilder *self) {
  NSObject_init(self);
  [self clear];
}

OrgJodaTimeFormatPeriodFormatterBuilder *new_OrgJodaTimeFormatPeriodFormatterBuilder_init() {
  OrgJodaTimeFormatPeriodFormatterBuilder *self = [OrgJodaTimeFormatPeriodFormatterBuilder alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_init(self);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder *create_OrgJodaTimeFormatPeriodFormatterBuilder_init() {
  OrgJodaTimeFormatPeriodFormatterBuilder *self = [[OrgJodaTimeFormatPeriodFormatterBuilder alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_init(self);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder *OrgJodaTimeFormatPeriodFormatterBuilder_appendPrefixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(OrgJodaTimeFormatPeriodFormatterBuilder *self, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> prefix) {
  if (prefix == nil) {
    @throw create_JavaLangIllegalArgumentException_init();
  }
  if (self->iPrefix_ != nil) {
    prefix = create_OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix_initWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self->iPrefix_, prefix);
  }
  JreStrongAssign(&self->iPrefix_, prefix);
  return self;
}

void OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_(OrgJodaTimeFormatPeriodFormatterBuilder *self, jint type) {
  OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_withInt_(self, type, self->iMinPrintedDigits_);
}

void OrgJodaTimeFormatPeriodFormatterBuilder_appendFieldWithInt_withInt_(OrgJodaTimeFormatPeriodFormatterBuilder *self, jint type, jint minPrinted) {
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *field = create_OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithInt_withInt_withInt_withBoolean_withInt_withOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(minPrinted, self->iPrintZeroSetting_, self->iMaxParsedDigits_, self->iRejectSignedValues_, type, self->iFieldFormatters_, self->iPrefix_, nil);
  OrgJodaTimeFormatPeriodFormatterBuilder_append0WithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(self, field, field);
  IOSObjectArray_Set(nil_chk(self->iFieldFormatters_), type, field);
  JreStrongAssign(&self->iPrefix_, nil);
}

OrgJodaTimeFormatPeriodFormatterBuilder *OrgJodaTimeFormatPeriodFormatterBuilder_appendSuffixWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(OrgJodaTimeFormatPeriodFormatterBuilder *self, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> suffix) {
  id originalPrinter;
  id originalParser;
  if ([((id<JavaUtilList>) nil_chk(self->iElementPairs_)) size] > 0) {
    originalPrinter = [self->iElementPairs_ getWithInt:[self->iElementPairs_ size] - 2];
    originalParser = [self->iElementPairs_ getWithInt:[self->iElementPairs_ size] - 1];
  }
  else {
    originalPrinter = nil;
    originalParser = nil;
  }
  if (originalPrinter == nil || originalParser == nil || originalPrinter != originalParser || !([originalPrinter isKindOfClass:[OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter class]])) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"No field to apply suffix to");
  }
  OrgJodaTimeFormatPeriodFormatterBuilder_clearPrefix(self);
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *newField = create_OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_((OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *) cast_chk(originalPrinter, [OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter class]), suffix);
  [self->iElementPairs_ setWithInt:[self->iElementPairs_ size] - 2 withId:newField];
  [self->iElementPairs_ setWithInt:[self->iElementPairs_ size] - 1 withId:newField];
  IOSObjectArray_Set(nil_chk(self->iFieldFormatters_), [newField getFieldType], newField);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder *OrgJodaTimeFormatPeriodFormatterBuilder_appendSeparatorWithNSString_withNSString_withNSStringArray_withBoolean_withBoolean_(OrgJodaTimeFormatPeriodFormatterBuilder *self, NSString *text, NSString *finalText, IOSObjectArray *variants, jboolean useBefore, jboolean useAfter) {
  if (text == nil || finalText == nil) {
    @throw create_JavaLangIllegalArgumentException_init();
  }
  OrgJodaTimeFormatPeriodFormatterBuilder_clearPrefix(self);
  id<JavaUtilList> pairs = self->iElementPairs_;
  if ([((id<JavaUtilList>) nil_chk(pairs)) size] == 0) {
    if (useAfter && useBefore == false) {
      OrgJodaTimeFormatPeriodFormatterBuilder_Separator *separator = create_OrgJodaTimeFormatPeriodFormatterBuilder_Separator_initWithNSString_withNSString_withNSStringArray_withOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withBoolean_withBoolean_(text, finalText, variants, JreLoadStatic(OrgJodaTimeFormatPeriodFormatterBuilder_Literal, EMPTY), JreLoadStatic(OrgJodaTimeFormatPeriodFormatterBuilder_Literal, EMPTY), useBefore, useAfter);
      OrgJodaTimeFormatPeriodFormatterBuilder_append0WithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(self, separator, separator);
    }
    return self;
  }
  jint i;
  OrgJodaTimeFormatPeriodFormatterBuilder_Separator *lastSeparator = nil;
  for (i = [pairs size]; --i >= 0; ) {
    if ([[pairs getWithInt:i] isKindOfClass:[OrgJodaTimeFormatPeriodFormatterBuilder_Separator class]]) {
      lastSeparator = (OrgJodaTimeFormatPeriodFormatterBuilder_Separator *) cast_chk([pairs getWithInt:i], [OrgJodaTimeFormatPeriodFormatterBuilder_Separator class]);
      pairs = [pairs subListWithInt:i + 1 withInt:[pairs size]];
      break;
    }
    i--;
  }
  if (lastSeparator != nil && [((id<JavaUtilList>) nil_chk(pairs)) size] == 0) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot have two adjacent separators");
  }
  else {
    IOSObjectArray *comp = OrgJodaTimeFormatPeriodFormatterBuilder_createCompositeWithJavaUtilList_(pairs);
    [((id<JavaUtilList>) nil_chk(pairs)) clear];
    OrgJodaTimeFormatPeriodFormatterBuilder_Separator *separator = create_OrgJodaTimeFormatPeriodFormatterBuilder_Separator_initWithNSString_withNSString_withNSStringArray_withOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withBoolean_withBoolean_(text, finalText, variants, (id<OrgJodaTimeFormatPeriodPrinter>) cast_check(IOSObjectArray_Get(nil_chk(comp), 0), OrgJodaTimeFormatPeriodPrinter_class_()), (id<OrgJodaTimeFormatPeriodParser>) cast_check(IOSObjectArray_Get(comp, 1), OrgJodaTimeFormatPeriodParser_class_()), useBefore, useAfter);
    [pairs addWithId:separator];
    [pairs addWithId:separator];
  }
  return self;
}

void OrgJodaTimeFormatPeriodFormatterBuilder_clearPrefix(OrgJodaTimeFormatPeriodFormatterBuilder *self) {
  if (self->iPrefix_ != nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Prefix not followed by field");
  }
  JreStrongAssign(&self->iPrefix_, nil);
}

OrgJodaTimeFormatPeriodFormatterBuilder *OrgJodaTimeFormatPeriodFormatterBuilder_append0WithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(OrgJodaTimeFormatPeriodFormatterBuilder *self, id<OrgJodaTimeFormatPeriodPrinter> printer, id<OrgJodaTimeFormatPeriodParser> parser) {
  [((id<JavaUtilList>) nil_chk(self->iElementPairs_)) addWithId:printer];
  [self->iElementPairs_ addWithId:parser];
  self->iNotPrinter_ |= (printer == nil);
  self->iNotParser_ |= (parser == nil);
  return self;
}

OrgJodaTimeFormatPeriodFormatter *OrgJodaTimeFormatPeriodFormatterBuilder_toFormatterWithJavaUtilList_withBoolean_withBoolean_(id<JavaUtilList> elementPairs, jboolean notPrinter, jboolean notParser) {
  OrgJodaTimeFormatPeriodFormatterBuilder_initialize();
  if (notPrinter && notParser) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Builder has created neither a printer nor a parser");
  }
  jint size = [((id<JavaUtilList>) nil_chk(elementPairs)) size];
  if (size >= 2 && [[elementPairs getWithInt:0] isKindOfClass:[OrgJodaTimeFormatPeriodFormatterBuilder_Separator class]]) {
    OrgJodaTimeFormatPeriodFormatterBuilder_Separator *sep = (OrgJodaTimeFormatPeriodFormatterBuilder_Separator *) cast_chk([elementPairs getWithInt:0], [OrgJodaTimeFormatPeriodFormatterBuilder_Separator class]);
    if (JreLoadVolatileId(&((OrgJodaTimeFormatPeriodFormatterBuilder_Separator *) nil_chk(sep))->iAfterParser_) == nil && JreLoadVolatileId(&sep->iAfterPrinter_) == nil) {
      OrgJodaTimeFormatPeriodFormatter *f = OrgJodaTimeFormatPeriodFormatterBuilder_toFormatterWithJavaUtilList_withBoolean_withBoolean_([elementPairs subListWithInt:2 withInt:size], notPrinter, notParser);
      sep = [sep finishWithOrgJodaTimeFormatPeriodPrinter:[((OrgJodaTimeFormatPeriodFormatter *) nil_chk(f)) getPrinter] withOrgJodaTimeFormatPeriodParser:[f getParser]];
      return create_OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(sep, sep);
    }
  }
  IOSObjectArray *comp = OrgJodaTimeFormatPeriodFormatterBuilder_createCompositeWithJavaUtilList_(elementPairs);
  if (notPrinter) {
    return create_OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(nil, (id<OrgJodaTimeFormatPeriodParser>) cast_check(IOSObjectArray_Get(nil_chk(comp), 1), OrgJodaTimeFormatPeriodParser_class_()));
  }
  else if (notParser) {
    return create_OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_((id<OrgJodaTimeFormatPeriodPrinter>) cast_check(IOSObjectArray_Get(nil_chk(comp), 0), OrgJodaTimeFormatPeriodPrinter_class_()), nil);
  }
  else {
    return create_OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_((id<OrgJodaTimeFormatPeriodPrinter>) cast_check(IOSObjectArray_Get(nil_chk(comp), 0), OrgJodaTimeFormatPeriodPrinter_class_()), (id<OrgJodaTimeFormatPeriodParser>) cast_check(IOSObjectArray_Get(comp, 1), OrgJodaTimeFormatPeriodParser_class_()));
  }
}

IOSObjectArray *OrgJodaTimeFormatPeriodFormatterBuilder_createCompositeWithJavaUtilList_(id<JavaUtilList> elementPairs) {
  OrgJodaTimeFormatPeriodFormatterBuilder_initialize();
  {
    OrgJodaTimeFormatPeriodFormatterBuilder_Composite *comp;
    switch ([((id<JavaUtilList>) nil_chk(elementPairs)) size]) {
      case 0:
      return [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(OrgJodaTimeFormatPeriodFormatterBuilder_Literal, EMPTY), JreLoadStatic(OrgJodaTimeFormatPeriodFormatterBuilder_Literal, EMPTY) } count:2 type:NSObject_class_()];
      case 1:
      return [IOSObjectArray arrayWithObjects:(id[]){ [elementPairs getWithInt:0], [elementPairs getWithInt:1] } count:2 type:NSObject_class_()];
      default:
      comp = create_OrgJodaTimeFormatPeriodFormatterBuilder_Composite_initWithJavaUtilList_(elementPairs);
      return [IOSObjectArray arrayWithObjects:(id[]){ comp, comp } count:2 type:NSObject_class_()];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculatePrintedLengthWithInt:", "calculatePrintedLength", "I", 0x401, NULL, NULL },
    { "printToWithJavaLangStringBuffer:withInt:", "printTo", "V", 0x401, NULL, NULL },
    { "printToWithJavaIoWriter:withInt:", "printTo", "V", 0x401, "Ljava.io.IOException;", NULL },
    { "parseWithNSString:withInt:", "parse", "I", 0x401, NULL, NULL },
    { "scanWithNSString:withInt:", "scan", "I", 0x401, NULL, NULL },
    { "getAffixes", NULL, "[Ljava.lang.String;", 0x401, NULL, NULL },
    { "finishWithJavaUtilSet:", "finish", "V", 0x401, NULL, "(Ljava/util/Set<Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;>;)V" },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix = { 2, "PeriodFieldAffix", "org.joda.time.format", "PeriodFormatterBuilder", 0x608, 7, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix

- (void)finishWithJavaUtilSet:(id<JavaUtilSet>)periodFieldAffixesToIgnore {
  if (JreLoadVolatileId(&iOtherAffixes_) == nil) {
    jint shortestAffixLength = JavaLangInteger_MAX_VALUE;
    NSString *shortestAffix = nil;
    {
      IOSObjectArray *a__ = [self getAffixes];
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *affix = *b__++;
        if (((jint) [((NSString *) nil_chk(affix)) length]) < shortestAffixLength) {
          shortestAffixLength = ((jint) [affix length]);
          shortestAffix = affix;
        }
      }
    }
    id<JavaUtilSet> affixesToIgnore = create_JavaUtilHashSet_init();
    for (id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> __strong periodFieldAffixToIgnore in nil_chk(periodFieldAffixesToIgnore)) {
      if (periodFieldAffixToIgnore != nil) {
        {
          IOSObjectArray *a__ = [periodFieldAffixToIgnore getAffixes];
          NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
          NSString * const *e__ = b__ + a__->size_;
          while (b__ < e__) {
            NSString *affixToIgnore = *b__++;
            if (((jint) [((NSString *) nil_chk(affixToIgnore)) length]) > shortestAffixLength || ([affixToIgnore equalsIgnoreCase:shortestAffix] && ![affixToIgnore isEqual:shortestAffix])) {
              [affixesToIgnore addWithId:affixToIgnore];
            }
          }
        }
      }
    }
    JreVolatileStrongAssign(&iOtherAffixes_, [affixesToIgnore toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[affixesToIgnore size] type:NSString_class_()]]);
  }
}

- (jboolean)matchesOtherAffixWithInt:(jint)textLength
                        withNSString:(NSString *)periodStr
                             withInt:(jint)position {
  if (JreLoadVolatileId(&iOtherAffixes_) != nil) {
    {
      IOSObjectArray *a__ = JreLoadVolatileId(&iOtherAffixes_);
      NSString * const *b__ = a__->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *affixToIgnore = *b__++;
        jint textToIgnoreLength = ((jint) [((NSString *) nil_chk(affixToIgnore)) length]);
        if ((textLength < textToIgnoreLength && [((NSString *) nil_chk(periodStr)) regionMatches:true thisOffset:position aString:affixToIgnore otherOffset:0 count:textToIgnoreLength]) || (textLength == textToIgnoreLength && [((NSString *) nil_chk(periodStr)) regionMatches:false thisOffset:position aString:affixToIgnore otherOffset:0 count:textToIgnoreLength])) {
          return true;
        }
      }
    }
  }
  return false;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreReleaseVolatile(&iOtherAffixes_);
  [super dealloc];
}

- (void)__javaClone:(OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&iOtherAffixes_, &original->iOtherAffixes_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "finishWithJavaUtilSet:", "finish", "V", 0x1, NULL, "(Ljava/util/Set<Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;>;)V" },
    { "matchesOtherAffixWithInt:withNSString:withInt:", "matchesOtherAffix", "Z", 0x4, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iOtherAffixes_", NULL, 0x42, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix = { 2, "IgnorableAffix", "org.joda.time.format", "PeriodFormatterBuilder", 0x408, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix_init(OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix

- (instancetype)initWithNSString:(NSString *)text {
  OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix_initWithNSString_(self, text);
  return self;
}

- (jint)calculatePrintedLengthWithInt:(jint)value {
  return ((jint) [((NSString *) nil_chk(iText_)) length]);
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                withInt:(jint)value {
  [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:iText_];
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
                        withInt:(jint)value {
  [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:iText_];
}

- (jint)parseWithNSString:(NSString *)periodStr
                  withInt:(jint)position {
  NSString *text = iText_;
  jint textLength = ((jint) [((NSString *) nil_chk(text)) length]);
  if ([((NSString *) nil_chk(periodStr)) regionMatches:true thisOffset:position aString:text otherOffset:0 count:textLength]) {
    if (![self matchesOtherAffixWithInt:textLength withNSString:periodStr withInt:position]) {
      return position + textLength;
    }
  }
  return ~position;
}

- (jint)scanWithNSString:(NSString *)periodStr
                 withInt:(jint)position {
  NSString *text = iText_;
  jint textLength = ((jint) [((NSString *) nil_chk(text)) length]);
  jint sourceLength = ((jint) [((NSString *) nil_chk(periodStr)) length]);
  for (jint pos = position; pos < sourceLength; pos++) {
    if ([periodStr regionMatches:true thisOffset:pos aString:text otherOffset:0 count:textLength]) {
      if (![self matchesOtherAffixWithInt:textLength withNSString:periodStr withInt:pos]) {
        return pos;
      }
    }
    switch ([periodStr charAtWithInt:pos]) {
      case '0':
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
      case '.':
      case ',':
      case '+':
      case '-':
      break;
      default:
      goto break_search;
    }
  }
  break_search: ;
  return ~position;
}

- (IOSObjectArray *)getAffixes {
  return [IOSObjectArray arrayWithObjects:(id[]){ iText_ } count:1 type:NSString_class_()];
}

- (void)dealloc {
  RELEASE_(iText_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "SimpleAffix", NULL, 0x0, NULL, NULL },
    { "calculatePrintedLengthWithInt:", "calculatePrintedLength", "I", 0x1, NULL, NULL },
    { "printToWithJavaLangStringBuffer:withInt:", "printTo", "V", 0x1, NULL, NULL },
    { "printToWithJavaIoWriter:withInt:", "printTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseWithNSString:withInt:", "parse", "I", 0x1, NULL, NULL },
    { "scanWithNSString:withInt:", "scan", "I", 0x1, NULL, NULL },
    { "getAffixes", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iText_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix = { 2, "SimpleAffix", "org.joda.time.format", "PeriodFormatterBuilder", 0x8, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix_initWithNSString_(OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix *self, NSString *text) {
  OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix_init(self);
  JreStrongAssign(&self->iText_, text);
}

OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix *new_OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix_initWithNSString_(NSString *text) {
  OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix *self = [OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix_initWithNSString_(self, text);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix *create_OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix_initWithNSString_(NSString *text) {
  OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix *self = [[OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix_initWithNSString_(self, text);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_SimpleAffix)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix

- (instancetype)initWithNSString:(NSString *)singularText
                    withNSString:(NSString *)pluralText {
  OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix_initWithNSString_withNSString_(self, singularText, pluralText);
  return self;
}

- (jint)calculatePrintedLengthWithInt:(jint)value {
  return ((jint) [(value == 1 ? iSingularText_ : iPluralText_) length]);
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                withInt:(jint)value {
  [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:value == 1 ? iSingularText_ : iPluralText_];
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
                        withInt:(jint)value {
  [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:value == 1 ? iSingularText_ : iPluralText_];
}

- (jint)parseWithNSString:(NSString *)periodStr
                  withInt:(jint)position {
  NSString *text1 = iPluralText_;
  NSString *text2 = iSingularText_;
  if (((jint) [((NSString *) nil_chk(text1)) length]) < ((jint) [((NSString *) nil_chk(text2)) length])) {
    NSString *temp = text1;
    text1 = text2;
    text2 = temp;
  }
  if ([((NSString *) nil_chk(periodStr)) regionMatches:true thisOffset:position aString:text1 otherOffset:0 count:((jint) [text1 length])]) {
    if (![self matchesOtherAffixWithInt:((jint) [text1 length]) withNSString:periodStr withInt:position]) {
      return position + ((jint) [text1 length]);
    }
  }
  if ([periodStr regionMatches:true thisOffset:position aString:text2 otherOffset:0 count:((jint) [text2 length])]) {
    if (![self matchesOtherAffixWithInt:((jint) [text2 length]) withNSString:periodStr withInt:position]) {
      return position + ((jint) [text2 length]);
    }
  }
  return ~position;
}

- (jint)scanWithNSString:(NSString *)periodStr
                 withInt:(jint)position {
  NSString *text1 = iPluralText_;
  NSString *text2 = iSingularText_;
  if (((jint) [((NSString *) nil_chk(text1)) length]) < ((jint) [((NSString *) nil_chk(text2)) length])) {
    NSString *temp = text1;
    text1 = text2;
    text2 = temp;
  }
  jint textLength1 = ((jint) [text1 length]);
  jint textLength2 = ((jint) [text2 length]);
  jint sourceLength = ((jint) [((NSString *) nil_chk(periodStr)) length]);
  for (jint pos = position; pos < sourceLength; pos++) {
    if ([periodStr regionMatches:true thisOffset:pos aString:text1 otherOffset:0 count:textLength1]) {
      if (![self matchesOtherAffixWithInt:((jint) [text1 length]) withNSString:periodStr withInt:pos]) {
        return pos;
      }
    }
    if ([periodStr regionMatches:true thisOffset:pos aString:text2 otherOffset:0 count:textLength2]) {
      if (![self matchesOtherAffixWithInt:((jint) [text2 length]) withNSString:periodStr withInt:pos]) {
        return pos;
      }
    }
  }
  return ~position;
}

- (IOSObjectArray *)getAffixes {
  return [IOSObjectArray arrayWithObjects:(id[]){ iSingularText_, iPluralText_ } count:2 type:NSString_class_()];
}

- (void)dealloc {
  RELEASE_(iSingularText_);
  RELEASE_(iPluralText_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "PluralAffix", NULL, 0x0, NULL, NULL },
    { "calculatePrintedLengthWithInt:", "calculatePrintedLength", "I", 0x1, NULL, NULL },
    { "printToWithJavaLangStringBuffer:withInt:", "printTo", "V", 0x1, NULL, NULL },
    { "printToWithJavaIoWriter:withInt:", "printTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseWithNSString:withInt:", "parse", "I", 0x1, NULL, NULL },
    { "scanWithNSString:withInt:", "scan", "I", 0x1, NULL, NULL },
    { "getAffixes", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iSingularText_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "iPluralText_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix = { 2, "PluralAffix", "org.joda.time.format", "PeriodFormatterBuilder", 0x8, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix_initWithNSString_withNSString_(OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix *self, NSString *singularText, NSString *pluralText) {
  OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix_init(self);
  JreStrongAssign(&self->iSingularText_, singularText);
  JreStrongAssign(&self->iPluralText_, pluralText);
}

OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix *new_OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix_initWithNSString_withNSString_(NSString *singularText, NSString *pluralText) {
  OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix *self = [OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix_initWithNSString_withNSString_(self, singularText, pluralText);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix *create_OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix_initWithNSString_withNSString_(NSString *singularText, NSString *pluralText) {
  OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix *self = [[OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix_initWithNSString_withNSString_(self, singularText, pluralText);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_PluralAffix)

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix

- (instancetype)initWithNSStringArray:(IOSObjectArray *)regExes
                    withNSStringArray:(IOSObjectArray *)texts {
  OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_initWithNSStringArray_withNSStringArray_(self, regExes, texts);
  return self;
}

- (jint)selectSuffixIndexWithInt:(jint)value {
  return OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_selectSuffixIndexWithInt_(self, value);
}

- (jint)calculatePrintedLengthWithInt:(jint)value {
  return ((jint) [((NSString *) nil_chk(IOSObjectArray_Get(nil_chk(iSuffixes_), OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_selectSuffixIndexWithInt_(self, value)))) length]);
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                withInt:(jint)value {
  [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:IOSObjectArray_Get(nil_chk(iSuffixes_), OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_selectSuffixIndexWithInt_(self, value))];
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
                        withInt:(jint)value {
  [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:IOSObjectArray_Get(nil_chk(iSuffixes_), OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_selectSuffixIndexWithInt_(self, value))];
}

- (jint)parseWithNSString:(NSString *)periodStr
                  withInt:(jint)position {
  {
    IOSObjectArray *a__ = iSuffixesSortedDescByLength_;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *text = *b__++;
      if ([((NSString *) nil_chk(periodStr)) regionMatches:true thisOffset:position aString:text otherOffset:0 count:((jint) [((NSString *) nil_chk(text)) length])]) {
        if (![self matchesOtherAffixWithInt:((jint) [text length]) withNSString:periodStr withInt:position]) {
          return position + ((jint) [text length]);
        }
      }
    }
  }
  return ~position;
}

- (jint)scanWithNSString:(NSString *)periodStr
                 withInt:(jint)position {
  jint sourceLength = ((jint) [((NSString *) nil_chk(periodStr)) length]);
  for (jint pos = position; pos < sourceLength; pos++) {
    {
      IOSObjectArray *a__ = iSuffixesSortedDescByLength_;
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *text = *b__++;
        if ([periodStr regionMatches:true thisOffset:pos aString:text otherOffset:0 count:((jint) [((NSString *) nil_chk(text)) length])]) {
          if (![self matchesOtherAffixWithInt:((jint) [text length]) withNSString:periodStr withInt:pos]) {
            return pos;
          }
        }
      }
    }
  }
  return ~position;
}

- (IOSObjectArray *)getAffixes {
  return [((IOSObjectArray *) nil_chk(iSuffixes_)) clone];
}

- (void)dealloc {
  RELEASE_(iSuffixes_);
  RELEASE_(iPatterns_);
  RELEASE_(iSuffixesSortedDescByLength_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_LENGTH_DESC_COMPARATOR, new_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1_init());
    J2OBJC_SET_INITIALIZED(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSStringArray:withNSStringArray:", "RegExAffix", NULL, 0x0, NULL, NULL },
    { "selectSuffixIndexWithInt:", "selectSuffixIndex", "I", 0x2, NULL, NULL },
    { "calculatePrintedLengthWithInt:", "calculatePrintedLength", "I", 0x1, NULL, NULL },
    { "printToWithJavaLangStringBuffer:withInt:", "printTo", "V", 0x1, NULL, NULL },
    { "printToWithJavaIoWriter:withInt:", "printTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseWithNSString:withInt:", "parse", "I", 0x1, NULL, NULL },
    { "scanWithNSString:withInt:", "scan", "I", 0x1, NULL, NULL },
    { "getAffixes", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LENGTH_DESC_COMPARATOR", "LENGTH_DESC_COMPARATOR", 0x1a, "Ljava.util.Comparator;", &OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_LENGTH_DESC_COMPARATOR, "Ljava/util/Comparator<Ljava/lang/String;>;", .constantValue.asLong = 0 },
    { "iSuffixes_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "iPatterns_", NULL, 0x12, "[Ljava.util.regex.Pattern;", NULL, NULL, .constantValue.asLong = 0 },
    { "iSuffixesSortedDescByLength_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix = { 2, "RegExAffix", "org.joda.time.format", "PeriodFormatterBuilder", 0x8, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_initWithNSStringArray_withNSStringArray_(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix *self, IOSObjectArray *regExes, IOSObjectArray *texts) {
  OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix_init(self);
  JreStrongAssign(&self->iSuffixes_, [((IOSObjectArray *) nil_chk(texts)) clone]);
  JreStrongAssignAndConsume(&self->iPatterns_, [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(regExes))->size_ type:JavaUtilRegexPattern_class_()]);
  for (jint i = 0; i < regExes->size_; i++) {
    JavaUtilRegexPattern *pattern = [((id<JavaUtilConcurrentConcurrentMap>) nil_chk(JreLoadStatic(OrgJodaTimeFormatPeriodFormatterBuilder, PATTERNS))) getWithId:IOSObjectArray_Get(regExes, i)];
    if (pattern == nil) {
      pattern = JavaUtilRegexPattern_compileWithNSString_(IOSObjectArray_Get(regExes, i));
      [JreLoadStatic(OrgJodaTimeFormatPeriodFormatterBuilder, PATTERNS) putIfAbsentWithId:IOSObjectArray_Get(regExes, i) withId:pattern];
    }
    IOSObjectArray_Set(self->iPatterns_, i, pattern);
  }
  JreStrongAssign(&self->iSuffixesSortedDescByLength_, [((IOSObjectArray *) nil_chk(self->iSuffixes_)) clone]);
  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(self->iSuffixesSortedDescByLength_, OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_LENGTH_DESC_COMPARATOR);
}

OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix *new_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_initWithNSStringArray_withNSStringArray_(IOSObjectArray *regExes, IOSObjectArray *texts) {
  OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix *self = [OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_initWithNSStringArray_withNSStringArray_(self, regExes, texts);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix *create_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_initWithNSStringArray_withNSStringArray_(IOSObjectArray *regExes, IOSObjectArray *texts) {
  OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix *self = [[OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_initWithNSStringArray_withNSStringArray_(self, regExes, texts);
  return self;
}

jint OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_selectSuffixIndexWithInt_(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix *self, jint value) {
  NSString *valueString = NSString_valueOfInt_(value);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->iPatterns_))->size_; i++) {
    if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(IOSObjectArray_Get(self->iPatterns_, i))) matcherWithJavaLangCharSequence:valueString])) matches]) {
      return i;
    }
  }
  return self->iPatterns_->size_ - 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1

- (jint)compareWithId:(NSString *)o1
               withId:(NSString *)o2 {
  return ((jint) [((NSString *) nil_chk(o2)) length]) - ((jint) [((NSString *) nil_chk(o1)) length]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 = { 2, "", "org.joda.time.format", "PeriodFormatterBuilder$RegExAffix", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Comparator<Ljava/lang/String;>;" };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1_init(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 *self) {
  NSObject_init(self);
}

OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 *new_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1_init() {
  OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 *self = [OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1_init(self);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 *create_OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1_init() {
  OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 *self = [[OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1 alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_RegExAffix_$1)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix

- (instancetype)initWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)left
                    withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)right {
  OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix_initWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, left, right);
  return self;
}

- (jint)calculatePrintedLengthWithInt:(jint)value {
  return [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(iLeft_)) calculatePrintedLengthWithInt:value] + [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(iRight_)) calculatePrintedLengthWithInt:value];
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                withInt:(jint)value {
  [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(iLeft_)) printToWithJavaLangStringBuffer:buf withInt:value];
  [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(iRight_)) printToWithJavaLangStringBuffer:buf withInt:value];
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
                        withInt:(jint)value {
  [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(iLeft_)) printToWithJavaIoWriter:outArg withInt:value];
  [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(iRight_)) printToWithJavaIoWriter:outArg withInt:value];
}

- (jint)parseWithNSString:(NSString *)periodStr
                  withInt:(jint)position {
  jint pos = [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(iLeft_)) parseWithNSString:periodStr withInt:position];
  if (pos >= 0) {
    pos = [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(iRight_)) parseWithNSString:periodStr withInt:pos];
    if (pos >= 0 && [self matchesOtherAffixWithInt:[self parseWithNSString:periodStr withInt:pos] - pos withNSString:periodStr withInt:position]) {
      return ~position;
    }
  }
  return pos;
}

- (jint)scanWithNSString:(NSString *)periodStr
                 withInt:(jint)position {
  jint leftPosition = [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(iLeft_)) scanWithNSString:periodStr withInt:position];
  if (leftPosition >= 0) {
    jint rightPosition = [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(iRight_)) scanWithNSString:periodStr withInt:[iLeft_ parseWithNSString:periodStr withInt:leftPosition]];
    if (!(rightPosition >= 0 && [self matchesOtherAffixWithInt:[iRight_ parseWithNSString:periodStr withInt:rightPosition] - leftPosition withNSString:periodStr withInt:position])) {
      if (leftPosition > 0) {
        return leftPosition;
      }
      else {
        return rightPosition;
      }
    }
  }
  return ~position;
}

- (IOSObjectArray *)getAffixes {
  return [((IOSObjectArray *) nil_chk(iLeftRightCombinations_)) clone];
}

- (void)dealloc {
  RELEASE_(iLeft_);
  RELEASE_(iRight_);
  RELEASE_(iLeftRightCombinations_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:", "CompositeAffix", NULL, 0x0, NULL, NULL },
    { "calculatePrintedLengthWithInt:", "calculatePrintedLength", "I", 0x1, NULL, NULL },
    { "printToWithJavaLangStringBuffer:withInt:", "printTo", "V", 0x1, NULL, NULL },
    { "printToWithJavaIoWriter:withInt:", "printTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseWithNSString:withInt:", "parse", "I", 0x1, NULL, NULL },
    { "scanWithNSString:withInt:", "scan", "I", 0x1, NULL, NULL },
    { "getAffixes", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iLeft_", NULL, 0x12, "Lorg.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;", NULL, NULL, .constantValue.asLong = 0 },
    { "iRight_", NULL, 0x12, "Lorg.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;", NULL, NULL, .constantValue.asLong = 0 },
    { "iLeftRightCombinations_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix = { 2, "CompositeAffix", "org.joda.time.format", "PeriodFormatterBuilder", 0x8, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix_initWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix *self, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> left, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> right) {
  OrgJodaTimeFormatPeriodFormatterBuilder_IgnorableAffix_init(self);
  JreStrongAssign(&self->iLeft_, left);
  JreStrongAssign(&self->iRight_, right);
  id<JavaUtilSet> result = create_JavaUtilHashSet_init();
  {
    IOSObjectArray *a__ = [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(self->iLeft_)) getAffixes];
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *leftText = *b__++;
      {
        IOSObjectArray *a__ = [((id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>) nil_chk(self->iRight_)) getAffixes];
        NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        NSString * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          NSString *rightText = *b__++;
          [result addWithId:JreStrcat("$$", leftText, rightText)];
        }
      }
    }
  }
  JreStrongAssign(&self->iLeftRightCombinations_, [result toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[result size] type:NSString_class_()]]);
}

OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix *new_OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix_initWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> left, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> right) {
  OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix *self = [OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix_initWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, left, right);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix *create_OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix_initWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> left, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> right) {
  OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix *self = [[OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix_initWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, left, right);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter

- (instancetype)initWithInt:(jint)minPrintedDigits
                    withInt:(jint)printZeroSetting
                    withInt:(jint)maxParsedDigits
                withBoolean:(jboolean)rejectSignedValues
                    withInt:(jint)fieldType
withOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray:(IOSObjectArray *)fieldFormatters
withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)prefix
withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)suffix {
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithInt_withInt_withInt_withBoolean_withInt_withOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, minPrintedDigits, printZeroSetting, maxParsedDigits, rejectSignedValues, fieldType, fieldFormatters, prefix, suffix);
  return self;
}

- (instancetype)initWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter:(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *)field
                  withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:(id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix>)suffix {
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, field, suffix);
  return self;
}

- (void)finishWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray:(IOSObjectArray *)fieldFormatters {
  id<JavaUtilSet> prefixesToIgnore = create_JavaUtilHashSet_init();
  id<JavaUtilSet> suffixesToIgnore = create_JavaUtilHashSet_init();
  {
    IOSObjectArray *a__ = fieldFormatters;
    OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *fieldFormatter = *b__++;
      if (fieldFormatter != nil && ![self isEqual:fieldFormatter]) {
        [prefixesToIgnore addWithId:fieldFormatter->iPrefix_];
        [suffixesToIgnore addWithId:fieldFormatter->iSuffix_];
      }
    }
  }
  if (iPrefix_ != nil) {
    [iPrefix_ finishWithJavaUtilSet:prefixesToIgnore];
  }
  if (iSuffix_ != nil) {
    [iSuffix_ finishWithJavaUtilSet:suffixesToIgnore];
  }
}

- (jint)countFieldsToPrintWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                withInt:(jint)stopAt
                                     withJavaUtilLocale:(JavaUtilLocale *)locale {
  if (stopAt <= 0) {
    return 0;
  }
  if (iPrintZeroSetting_ == OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_ALWAYS || [self getFieldValueWithOrgJodaTimeReadablePeriod:period] != JavaLangLong_MAX_VALUE) {
    return 1;
  }
  return 0;
}

- (jint)calculatePrintedLengthWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                         withJavaUtilLocale:(JavaUtilLocale *)locale {
  jlong valueLong = [self getFieldValueWithOrgJodaTimeReadablePeriod:period];
  if (valueLong == JavaLangLong_MAX_VALUE) {
    return 0;
  }
  jint sum = JavaLangMath_maxWithInt_withInt_(OrgJodaTimeFormatFormatUtils_calculateDigitCountWithLong_(valueLong), iMinPrintedDigits_);
  if (iFieldType_ >= OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS) {
    sum = (valueLong < 0 ? JavaLangMath_maxWithInt_withInt_(sum, 5) : JavaLangMath_maxWithInt_withInt_(sum, 4));
    sum++;
    if (iFieldType_ == OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_OPTIONAL_MILLIS && (JavaLangMath_absWithLong_(valueLong) % OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND) == 0) {
      sum -= 4;
    }
    valueLong = valueLong / OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND;
  }
  jint value = (jint) valueLong;
  if (iPrefix_ != nil) {
    sum += [iPrefix_ calculatePrintedLengthWithInt:value];
  }
  if (iSuffix_ != nil) {
    sum += [iSuffix_ calculatePrintedLengthWithInt:value];
  }
  return sum;
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
          withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                     withJavaUtilLocale:(JavaUtilLocale *)locale {
  jlong valueLong = [self getFieldValueWithOrgJodaTimeReadablePeriod:period];
  if (valueLong == JavaLangLong_MAX_VALUE) {
    return;
  }
  jint value = (jint) valueLong;
  if (iFieldType_ >= OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS) {
    value = (jint) (valueLong / OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND);
  }
  if (iPrefix_ != nil) {
    [iPrefix_ printToWithJavaLangStringBuffer:buf withInt:value];
  }
  jint bufLen = [((JavaLangStringBuffer *) nil_chk(buf)) length];
  jint minDigits = iMinPrintedDigits_;
  if (minDigits <= 1) {
    OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangStringBuffer_withInt_(buf, value);
  }
  else {
    OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangStringBuffer_withInt_withInt_(buf, value, minDigits);
  }
  if (iFieldType_ >= OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS) {
    jint dp = (jint) (JavaLangMath_absWithLong_(valueLong) % OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND);
    if (iFieldType_ == OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS || dp > 0) {
      if (valueLong < 0 && valueLong > -OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND) {
        [buf insertWithInt:bufLen withChar:'-'];
      }
      [buf appendWithChar:'.'];
      OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangStringBuffer_withInt_withInt_(buf, dp, 3);
    }
  }
  if (iSuffix_ != nil) {
    [iSuffix_ printToWithJavaLangStringBuffer:buf withInt:value];
  }
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
  withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  jlong valueLong = [self getFieldValueWithOrgJodaTimeReadablePeriod:period];
  if (valueLong == JavaLangLong_MAX_VALUE) {
    return;
  }
  jint value = (jint) valueLong;
  if (iFieldType_ >= OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS) {
    value = (jint) (valueLong / OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND);
  }
  if (iPrefix_ != nil) {
    [iPrefix_ printToWithJavaIoWriter:outArg withInt:value];
  }
  jint minDigits = iMinPrintedDigits_;
  if (minDigits <= 1) {
    OrgJodaTimeFormatFormatUtils_writeUnpaddedIntegerWithJavaIoWriter_withInt_(outArg, value);
  }
  else {
    OrgJodaTimeFormatFormatUtils_writePaddedIntegerWithJavaIoWriter_withInt_withInt_(outArg, value, minDigits);
  }
  if (iFieldType_ >= OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS) {
    jint dp = (jint) (JavaLangMath_absWithLong_(valueLong) % OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND);
    if (iFieldType_ == OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS || dp > 0) {
      [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:'.'];
      OrgJodaTimeFormatFormatUtils_writePaddedIntegerWithJavaIoWriter_withInt_withInt_(outArg, dp, 3);
    }
  }
  if (iSuffix_ != nil) {
    [iSuffix_ printToWithJavaIoWriter:outArg withInt:value];
  }
}

- (jint)parseIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)period
                                      withNSString:(NSString *)text
                                           withInt:(jint)position
                                withJavaUtilLocale:(JavaUtilLocale *)locale {
  jboolean mustParse = iPrintZeroSetting_ == OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_ALWAYS;
  if (position >= ((jint) [((NSString *) nil_chk(text)) length])) {
    return mustParse ? ~position : position;
  }
  if (iPrefix_ != nil) {
    position = [iPrefix_ parseWithNSString:text withInt:position];
    if (position >= 0) {
      mustParse = true;
    }
    else {
      if (!mustParse) {
        return ~position;
      }
      return position;
    }
  }
  jint suffixPos = -1;
  if (iSuffix_ != nil && !mustParse) {
    suffixPos = [iSuffix_ scanWithNSString:text withInt:position];
    if (suffixPos >= 0) {
      mustParse = true;
    }
    else {
      if (!mustParse) {
        return ~suffixPos;
      }
      return suffixPos;
    }
  }
  if (!mustParse && ![self isSupportedWithOrgJodaTimePeriodType:[((id<OrgJodaTimeReadWritablePeriod>) nil_chk(period)) getPeriodType] withInt:iFieldType_]) {
    return position;
  }
  jint limit;
  if (suffixPos > 0) {
    limit = JavaLangMath_minWithInt_withInt_(iMaxParsedDigits_, suffixPos - position);
  }
  else {
    limit = JavaLangMath_minWithInt_withInt_(iMaxParsedDigits_, ((jint) [text length]) - position);
  }
  jint length = 0;
  jint fractPos = -1;
  jboolean hasDigits = false;
  jboolean negative = false;
  while (length < limit) {
    jchar c = [text charAtWithInt:position + length];
    if (length == 0 && (c == '-' || c == '+') && !iRejectSignedValues_) {
      negative = (c == '-');
      if (length + 1 >= limit || (c = [text charAtWithInt:position + length + 1]) < '0' || c > '9') {
        break;
      }
      if (negative) {
        length++;
      }
      else {
        position++;
      }
      limit = JavaLangMath_minWithInt_withInt_(limit + 1, ((jint) [text length]) - position);
      continue;
    }
    if (c >= '0' && c <= '9') {
      hasDigits = true;
    }
    else {
      if ((c == '.' || c == ',') && (iFieldType_ == OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS || iFieldType_ == OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_OPTIONAL_MILLIS)) {
        if (fractPos >= 0) {
          break;
        }
        fractPos = position + length + 1;
        limit = JavaLangMath_minWithInt_withInt_(limit + 1, ((jint) [text length]) - position);
      }
      else {
        break;
      }
    }
    length++;
  }
  if (!hasDigits) {
    return ~position;
  }
  if (suffixPos >= 0 && position + length != suffixPos) {
    return position;
  }
  if (iFieldType_ != OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS && iFieldType_ != OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_OPTIONAL_MILLIS) {
    [self setFieldValueWithOrgJodaTimeReadWritablePeriod:period withInt:iFieldType_ withInt:OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_parseIntWithNSString_withInt_withInt_(self, text, position, length)];
  }
  else if (fractPos < 0) {
    [self setFieldValueWithOrgJodaTimeReadWritablePeriod:period withInt:OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS withInt:OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_parseIntWithNSString_withInt_withInt_(self, text, position, length)];
    [self setFieldValueWithOrgJodaTimeReadWritablePeriod:period withInt:OrgJodaTimeFormatPeriodFormatterBuilder_MILLIS withInt:0];
  }
  else {
    jint wholeValue = OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_parseIntWithNSString_withInt_withInt_(self, text, position, fractPos - position - 1);
    [self setFieldValueWithOrgJodaTimeReadWritablePeriod:period withInt:OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS withInt:wholeValue];
    jint fractLen = position + length - fractPos;
    jint fractValue;
    if (fractLen <= 0) {
      fractValue = 0;
    }
    else {
      if (fractLen >= 3) {
        fractValue = OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_parseIntWithNSString_withInt_withInt_(self, text, fractPos, 3);
      }
      else {
        fractValue = OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_parseIntWithNSString_withInt_withInt_(self, text, fractPos, fractLen);
        if (fractLen == 1) {
          fractValue *= 100;
        }
        else {
          fractValue *= 10;
        }
      }
      if (negative || wholeValue < 0) {
        fractValue = -fractValue;
      }
    }
    [self setFieldValueWithOrgJodaTimeReadWritablePeriod:period withInt:OrgJodaTimeFormatPeriodFormatterBuilder_MILLIS withInt:fractValue];
  }
  position += length;
  if (position >= 0 && iSuffix_ != nil) {
    position = [iSuffix_ parseWithNSString:text withInt:position];
  }
  return position;
}

- (jint)parseIntWithNSString:(NSString *)text
                     withInt:(jint)position
                     withInt:(jint)length {
  return OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_parseIntWithNSString_withInt_withInt_(self, text, position, length);
}

- (jlong)getFieldValueWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  OrgJodaTimePeriodType *type;
  if (iPrintZeroSetting_ == OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_ALWAYS) {
    type = nil;
  }
  else {
    type = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getPeriodType];
  }
  if (type != nil && [self isSupportedWithOrgJodaTimePeriodType:type withInt:iFieldType_] == false) {
    return JavaLangLong_MAX_VALUE;
  }
  jlong value;
  {
    jint seconds;
    jint millis;
    switch (iFieldType_) {
      default:
      return JavaLangLong_MAX_VALUE;
      case OrgJodaTimeFormatPeriodFormatterBuilder_YEARS:
      value = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_years()];
      break;
      case OrgJodaTimeFormatPeriodFormatterBuilder_MONTHS:
      value = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_months()];
      break;
      case OrgJodaTimeFormatPeriodFormatterBuilder_WEEKS:
      value = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_weeks()];
      break;
      case OrgJodaTimeFormatPeriodFormatterBuilder_DAYS:
      value = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days()];
      break;
      case OrgJodaTimeFormatPeriodFormatterBuilder_HOURS:
      value = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_hours()];
      break;
      case OrgJodaTimeFormatPeriodFormatterBuilder_MINUTES:
      value = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_minutes()];
      break;
      case OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS:
      value = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_seconds()];
      break;
      case OrgJodaTimeFormatPeriodFormatterBuilder_MILLIS:
      value = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_millis()];
      break;
      case OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS:
      case OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_OPTIONAL_MILLIS:
      seconds = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_seconds()];
      millis = [period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_millis()];
      value = (seconds * (jlong) OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND) + millis;
      break;
    }
  }
  if (value == 0) {
    switch (iPrintZeroSetting_) {
      case OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_NEVER:
      return JavaLangLong_MAX_VALUE;
      case OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_RARELY_LAST:
      if ([self isZeroWithOrgJodaTimeReadablePeriod:period] && IOSObjectArray_Get(nil_chk(iFieldFormatters_), iFieldType_) == self) {
        for (jint i = iFieldType_ + 1; i <= OrgJodaTimeFormatPeriodFormatterBuilder_MAX_FIELD; i++) {
          if ([self isSupportedWithOrgJodaTimePeriodType:type withInt:i] && IOSObjectArray_Get(iFieldFormatters_, i) != nil) {
            return JavaLangLong_MAX_VALUE;
          }
        }
      }
      else {
        return JavaLangLong_MAX_VALUE;
      }
      break;
      case OrgJodaTimeFormatPeriodFormatterBuilder_PRINT_ZERO_RARELY_FIRST:
      if ([self isZeroWithOrgJodaTimeReadablePeriod:period] && IOSObjectArray_Get(nil_chk(iFieldFormatters_), iFieldType_) == self) {
        jint i = JavaLangMath_minWithInt_withInt_(iFieldType_, 8);
        i--;
        for (; i >= 0 && i <= OrgJodaTimeFormatPeriodFormatterBuilder_MAX_FIELD; i--) {
          if ([self isSupportedWithOrgJodaTimePeriodType:type withInt:i] && IOSObjectArray_Get(iFieldFormatters_, i) != nil) {
            return JavaLangLong_MAX_VALUE;
          }
        }
      }
      else {
        return JavaLangLong_MAX_VALUE;
      }
      break;
    }
  }
  return value;
}

- (jboolean)isZeroWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  for (jint i = 0, isize = [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) size]; i < isize; i++) {
    if ([period getValueWithInt:i] != 0) {
      return false;
    }
  }
  return true;
}

- (jboolean)isSupportedWithOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type
                                         withInt:(jint)field {
  switch (field) {
    default:
    return false;
    case OrgJodaTimeFormatPeriodFormatterBuilder_YEARS:
    return [((OrgJodaTimePeriodType *) nil_chk(type)) isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_years()];
    case OrgJodaTimeFormatPeriodFormatterBuilder_MONTHS:
    return [((OrgJodaTimePeriodType *) nil_chk(type)) isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_months()];
    case OrgJodaTimeFormatPeriodFormatterBuilder_WEEKS:
    return [((OrgJodaTimePeriodType *) nil_chk(type)) isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_weeks()];
    case OrgJodaTimeFormatPeriodFormatterBuilder_DAYS:
    return [((OrgJodaTimePeriodType *) nil_chk(type)) isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days()];
    case OrgJodaTimeFormatPeriodFormatterBuilder_HOURS:
    return [((OrgJodaTimePeriodType *) nil_chk(type)) isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_hours()];
    case OrgJodaTimeFormatPeriodFormatterBuilder_MINUTES:
    return [((OrgJodaTimePeriodType *) nil_chk(type)) isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_minutes()];
    case OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS:
    return [((OrgJodaTimePeriodType *) nil_chk(type)) isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_seconds()];
    case OrgJodaTimeFormatPeriodFormatterBuilder_MILLIS:
    return [((OrgJodaTimePeriodType *) nil_chk(type)) isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_millis()];
    case OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_MILLIS:
    case OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS_OPTIONAL_MILLIS:
    return [((OrgJodaTimePeriodType *) nil_chk(type)) isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_seconds()] || [type isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_millis()];
  }
}

- (void)setFieldValueWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)period
                                               withInt:(jint)field
                                               withInt:(jint)value {
  switch (field) {
    default:
    break;
    case OrgJodaTimeFormatPeriodFormatterBuilder_YEARS:
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(period)) setYearsWithInt:value];
    break;
    case OrgJodaTimeFormatPeriodFormatterBuilder_MONTHS:
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(period)) setMonthsWithInt:value];
    break;
    case OrgJodaTimeFormatPeriodFormatterBuilder_WEEKS:
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(period)) setWeeksWithInt:value];
    break;
    case OrgJodaTimeFormatPeriodFormatterBuilder_DAYS:
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(period)) setDaysWithInt:value];
    break;
    case OrgJodaTimeFormatPeriodFormatterBuilder_HOURS:
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(period)) setHoursWithInt:value];
    break;
    case OrgJodaTimeFormatPeriodFormatterBuilder_MINUTES:
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(period)) setMinutesWithInt:value];
    break;
    case OrgJodaTimeFormatPeriodFormatterBuilder_SECONDS:
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(period)) setSecondsWithInt:value];
    break;
    case OrgJodaTimeFormatPeriodFormatterBuilder_MILLIS:
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(period)) setMillisWithInt:value];
    break;
  }
}

- (jint)getFieldType {
  return iFieldType_;
}

- (void)dealloc {
  RELEASE_(iFieldFormatters_);
  RELEASE_(iPrefix_);
  RELEASE_(iSuffix_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withInt:withBoolean:withInt:withOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray:withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:", "FieldFormatter", NULL, 0x0, NULL, NULL },
    { "initWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter:withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix:", "FieldFormatter", NULL, 0x0, NULL, NULL },
    { "finishWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray:", "finish", "V", 0x1, NULL, NULL },
    { "countFieldsToPrintWithOrgJodaTimeReadablePeriod:withInt:withJavaUtilLocale:", "countFieldsToPrint", "I", 0x1, NULL, NULL },
    { "calculatePrintedLengthWithOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "calculatePrintedLength", "I", 0x1, NULL, NULL },
    { "printToWithJavaLangStringBuffer:withOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "printTo", "V", 0x1, NULL, NULL },
    { "printToWithJavaIoWriter:withOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "printTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseIntoWithOrgJodaTimeReadWritablePeriod:withNSString:withInt:withJavaUtilLocale:", "parseInto", "I", 0x1, NULL, NULL },
    { "parseIntWithNSString:withInt:withInt:", "parseInt", "I", 0x2, NULL, NULL },
    { "getFieldValueWithOrgJodaTimeReadablePeriod:", "getFieldValue", "J", 0x0, NULL, NULL },
    { "isZeroWithOrgJodaTimeReadablePeriod:", "isZero", "Z", 0x0, NULL, NULL },
    { "isSupportedWithOrgJodaTimePeriodType:withInt:", "isSupported", "Z", 0x0, NULL, NULL },
    { "setFieldValueWithOrgJodaTimeReadWritablePeriod:withInt:withInt:", "setFieldValue", "V", 0x0, NULL, NULL },
    { "getFieldType", NULL, "I", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iMinPrintedDigits_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "iPrintZeroSetting_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "iMaxParsedDigits_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "iRejectSignedValues_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "iFieldType_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "iFieldFormatters_", NULL, 0x12, "[Lorg.joda.time.format.PeriodFormatterBuilder$FieldFormatter;", NULL, NULL, .constantValue.asLong = 0 },
    { "iPrefix_", NULL, 0x12, "Lorg.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;", NULL, NULL, .constantValue.asLong = 0 },
    { "iSuffix_", NULL, 0x12, "Lorg.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter = { 2, "FieldFormatter", "org.joda.time.format", "PeriodFormatterBuilder", 0x8, 14, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithInt_withInt_withInt_withBoolean_withInt_withOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *self, jint minPrintedDigits, jint printZeroSetting, jint maxParsedDigits, jboolean rejectSignedValues, jint fieldType, IOSObjectArray *fieldFormatters, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> prefix, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> suffix) {
  NSObject_init(self);
  self->iMinPrintedDigits_ = minPrintedDigits;
  self->iPrintZeroSetting_ = printZeroSetting;
  self->iMaxParsedDigits_ = maxParsedDigits;
  self->iRejectSignedValues_ = rejectSignedValues;
  self->iFieldType_ = fieldType;
  JreStrongAssign(&self->iFieldFormatters_, fieldFormatters);
  JreStrongAssign(&self->iPrefix_, prefix);
  JreStrongAssign(&self->iSuffix_, suffix);
}

OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *new_OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithInt_withInt_withInt_withBoolean_withInt_withOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(jint minPrintedDigits, jint printZeroSetting, jint maxParsedDigits, jboolean rejectSignedValues, jint fieldType, IOSObjectArray *fieldFormatters, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> prefix, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> suffix) {
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *self = [OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithInt_withInt_withInt_withBoolean_withInt_withOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, minPrintedDigits, printZeroSetting, maxParsedDigits, rejectSignedValues, fieldType, fieldFormatters, prefix, suffix);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *create_OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithInt_withInt_withInt_withBoolean_withInt_withOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(jint minPrintedDigits, jint printZeroSetting, jint maxParsedDigits, jboolean rejectSignedValues, jint fieldType, IOSObjectArray *fieldFormatters, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> prefix, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> suffix) {
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *self = [[OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithInt_withInt_withInt_withBoolean_withInt_withOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatterArray_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, minPrintedDigits, printZeroSetting, maxParsedDigits, rejectSignedValues, fieldType, fieldFormatters, prefix, suffix);
  return self;
}

void OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *self, OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *field, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> suffix) {
  NSObject_init(self);
  self->iMinPrintedDigits_ = ((OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *) nil_chk(field))->iMinPrintedDigits_;
  self->iPrintZeroSetting_ = field->iPrintZeroSetting_;
  self->iMaxParsedDigits_ = field->iMaxParsedDigits_;
  self->iRejectSignedValues_ = field->iRejectSignedValues_;
  self->iFieldType_ = field->iFieldType_;
  JreStrongAssign(&self->iFieldFormatters_, field->iFieldFormatters_);
  JreStrongAssign(&self->iPrefix_, field->iPrefix_);
  if (field->iSuffix_ != nil) {
    suffix = create_OrgJodaTimeFormatPeriodFormatterBuilder_CompositeAffix_initWithOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(field->iSuffix_, suffix);
  }
  JreStrongAssign(&self->iSuffix_, suffix);
}

OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *new_OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *field, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> suffix) {
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *self = [OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, field, suffix);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *create_OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *field, id<OrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix> suffix) {
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *self = [[OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_initWithOrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_withOrgJodaTimeFormatPeriodFormatterBuilder_PeriodFieldAffix_(self, field, suffix);
  return self;
}

jint OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter_parseIntWithNSString_withInt_withInt_(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter *self, NSString *text, jint position, jint length) {
  if (length >= 10) {
    return JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(text)) substring:position endIndex:position + length]);
  }
  if (length <= 0) {
    return 0;
  }
  jint value = [((NSString *) nil_chk(text)) charAtWithInt:position++];
  length--;
  jboolean negative;
  if (value == '-') {
    if (--length < 0) {
      return 0;
    }
    negative = true;
    value = [text charAtWithInt:position++];
  }
  else {
    negative = false;
  }
  value -= '0';
  while (length-- > 0) {
    value = ((JreLShift32(value, 3)) + (JreLShift32(value, 1))) + [text charAtWithInt:position++] - '0';
  }
  return negative ? -value : value;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_FieldFormatter)

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeFormatPeriodFormatterBuilder_Literal)

OrgJodaTimeFormatPeriodFormatterBuilder_Literal *OrgJodaTimeFormatPeriodFormatterBuilder_Literal_EMPTY;

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_Literal

- (instancetype)initWithNSString:(NSString *)text {
  OrgJodaTimeFormatPeriodFormatterBuilder_Literal_initWithNSString_(self, text);
  return self;
}

- (jint)countFieldsToPrintWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                withInt:(jint)stopAt
                                     withJavaUtilLocale:(JavaUtilLocale *)locale {
  return 0;
}

- (jint)calculatePrintedLengthWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                         withJavaUtilLocale:(JavaUtilLocale *)locale {
  return ((jint) [((NSString *) nil_chk(iText_)) length]);
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
          withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                     withJavaUtilLocale:(JavaUtilLocale *)locale {
  [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:iText_];
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
  withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:iText_];
}

- (jint)parseIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)period
                                      withNSString:(NSString *)periodStr
                                           withInt:(jint)position
                                withJavaUtilLocale:(JavaUtilLocale *)locale {
  if ([((NSString *) nil_chk(periodStr)) regionMatches:true thisOffset:position aString:iText_ otherOffset:0 count:((jint) [((NSString *) nil_chk(iText_)) length])]) {
    return position + ((jint) [iText_ length]);
  }
  return ~position;
}

- (void)dealloc {
  RELEASE_(iText_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgJodaTimeFormatPeriodFormatterBuilder_Literal class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeFormatPeriodFormatterBuilder_Literal_EMPTY, new_OrgJodaTimeFormatPeriodFormatterBuilder_Literal_initWithNSString_(@""));
    J2OBJC_SET_INITIALIZED(OrgJodaTimeFormatPeriodFormatterBuilder_Literal)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "Literal", NULL, 0x0, NULL, NULL },
    { "countFieldsToPrintWithOrgJodaTimeReadablePeriod:withInt:withJavaUtilLocale:", "countFieldsToPrint", "I", 0x1, NULL, NULL },
    { "calculatePrintedLengthWithOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "calculatePrintedLength", "I", 0x1, NULL, NULL },
    { "printToWithJavaLangStringBuffer:withOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "printTo", "V", 0x1, NULL, NULL },
    { "printToWithJavaIoWriter:withOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "printTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseIntoWithOrgJodaTimeReadWritablePeriod:withNSString:withInt:withJavaUtilLocale:", "parseInto", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY", "EMPTY", 0x18, "Lorg.joda.time.format.PeriodFormatterBuilder$Literal;", &OrgJodaTimeFormatPeriodFormatterBuilder_Literal_EMPTY, NULL, .constantValue.asLong = 0 },
    { "iText_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_Literal = { 2, "Literal", "org.joda.time.format", "PeriodFormatterBuilder", 0x8, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_Literal;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_Literal_initWithNSString_(OrgJodaTimeFormatPeriodFormatterBuilder_Literal *self, NSString *text) {
  NSObject_init(self);
  JreStrongAssign(&self->iText_, text);
}

OrgJodaTimeFormatPeriodFormatterBuilder_Literal *new_OrgJodaTimeFormatPeriodFormatterBuilder_Literal_initWithNSString_(NSString *text) {
  OrgJodaTimeFormatPeriodFormatterBuilder_Literal *self = [OrgJodaTimeFormatPeriodFormatterBuilder_Literal alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_Literal_initWithNSString_(self, text);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder_Literal *create_OrgJodaTimeFormatPeriodFormatterBuilder_Literal_initWithNSString_(NSString *text) {
  OrgJodaTimeFormatPeriodFormatterBuilder_Literal *self = [[OrgJodaTimeFormatPeriodFormatterBuilder_Literal alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_Literal_initWithNSString_(self, text);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_Literal)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_Separator

- (instancetype)initWithNSString:(NSString *)text
                    withNSString:(NSString *)finalText
               withNSStringArray:(IOSObjectArray *)variants
withOrgJodaTimeFormatPeriodPrinter:(id<OrgJodaTimeFormatPeriodPrinter>)beforePrinter
withOrgJodaTimeFormatPeriodParser:(id<OrgJodaTimeFormatPeriodParser>)beforeParser
                     withBoolean:(jboolean)useBefore
                     withBoolean:(jboolean)useAfter {
  OrgJodaTimeFormatPeriodFormatterBuilder_Separator_initWithNSString_withNSString_withNSStringArray_withOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withBoolean_withBoolean_(self, text, finalText, variants, beforePrinter, beforeParser, useBefore, useAfter);
  return self;
}

- (jint)countFieldsToPrintWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                withInt:(jint)stopAt
                                     withJavaUtilLocale:(JavaUtilLocale *)locale {
  jint sum = [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(iBeforePrinter_)) countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:stopAt withJavaUtilLocale:locale];
  if (sum < stopAt) {
    sum += [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(JreLoadVolatileId(&iAfterPrinter_))) countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:stopAt withJavaUtilLocale:locale];
  }
  return sum;
}

- (jint)calculatePrintedLengthWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                         withJavaUtilLocale:(JavaUtilLocale *)locale {
  id<OrgJodaTimeFormatPeriodPrinter> before = iBeforePrinter_;
  id<OrgJodaTimeFormatPeriodPrinter> after = JreLoadVolatileId(&iAfterPrinter_);
  jint sum = [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(before)) calculatePrintedLengthWithOrgJodaTimeReadablePeriod:period withJavaUtilLocale:locale] + [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(after)) calculatePrintedLengthWithOrgJodaTimeReadablePeriod:period withJavaUtilLocale:locale];
  if (iUseBefore_) {
    if ([before countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:1 withJavaUtilLocale:locale] > 0) {
      if (iUseAfter_) {
        jint afterCount = [after countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:2 withJavaUtilLocale:locale];
        if (afterCount > 0) {
          sum += ((jint) [(afterCount > 1 ? iText_ : iFinalText_) length]);
        }
      }
      else {
        sum += ((jint) [((NSString *) nil_chk(iText_)) length]);
      }
    }
  }
  else if (iUseAfter_ && [after countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:1 withJavaUtilLocale:locale] > 0) {
    sum += ((jint) [((NSString *) nil_chk(iText_)) length]);
  }
  return sum;
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
          withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                     withJavaUtilLocale:(JavaUtilLocale *)locale {
  id<OrgJodaTimeFormatPeriodPrinter> before = iBeforePrinter_;
  id<OrgJodaTimeFormatPeriodPrinter> after = JreLoadVolatileId(&iAfterPrinter_);
  [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(before)) printToWithJavaLangStringBuffer:buf withOrgJodaTimeReadablePeriod:period withJavaUtilLocale:locale];
  if (iUseBefore_) {
    if ([before countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:1 withJavaUtilLocale:locale] > 0) {
      if (iUseAfter_) {
        jint afterCount = [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(after)) countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:2 withJavaUtilLocale:locale];
        if (afterCount > 0) {
          [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:afterCount > 1 ? iText_ : iFinalText_];
        }
      }
      else {
        [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:iText_];
      }
    }
  }
  else if (iUseAfter_ && [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(after)) countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:1 withJavaUtilLocale:locale] > 0) {
    [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:iText_];
  }
  [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(after)) printToWithJavaLangStringBuffer:buf withOrgJodaTimeReadablePeriod:period withJavaUtilLocale:locale];
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
  withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  id<OrgJodaTimeFormatPeriodPrinter> before = iBeforePrinter_;
  id<OrgJodaTimeFormatPeriodPrinter> after = JreLoadVolatileId(&iAfterPrinter_);
  [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(before)) printToWithJavaIoWriter:outArg withOrgJodaTimeReadablePeriod:period withJavaUtilLocale:locale];
  if (iUseBefore_) {
    if ([before countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:1 withJavaUtilLocale:locale] > 0) {
      if (iUseAfter_) {
        jint afterCount = [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(after)) countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:2 withJavaUtilLocale:locale];
        if (afterCount > 0) {
          [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:afterCount > 1 ? iText_ : iFinalText_];
        }
      }
      else {
        [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:iText_];
      }
    }
  }
  else if (iUseAfter_ && [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(after)) countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:1 withJavaUtilLocale:locale] > 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:iText_];
  }
  [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(after)) printToWithJavaIoWriter:outArg withOrgJodaTimeReadablePeriod:period withJavaUtilLocale:locale];
}

- (jint)parseIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)period
                                      withNSString:(NSString *)periodStr
                                           withInt:(jint)position
                                withJavaUtilLocale:(JavaUtilLocale *)locale {
  jint oldPos = position;
  position = [((id<OrgJodaTimeFormatPeriodParser>) nil_chk(iBeforeParser_)) parseIntoWithOrgJodaTimeReadWritablePeriod:period withNSString:periodStr withInt:position withJavaUtilLocale:locale];
  if (position < 0) {
    return position;
  }
  jboolean found = false;
  jint parsedFormLength = -1;
  if (position > oldPos) {
    IOSObjectArray *parsedForms = iParsedForms_;
    jint length = ((IOSObjectArray *) nil_chk(parsedForms))->size_;
    for (jint i = 0; i < length; i++) {
      NSString *parsedForm = IOSObjectArray_Get(parsedForms, i);
      if ((parsedForm == nil || ((jint) [parsedForm length]) == 0) || [((NSString *) nil_chk(periodStr)) regionMatches:true thisOffset:position aString:parsedForm otherOffset:0 count:((jint) [parsedForm length])]) {
        parsedFormLength = (parsedForm == nil ? 0 : ((jint) [parsedForm length]));
        position += parsedFormLength;
        found = true;
        break;
      }
    }
  }
  oldPos = position;
  position = [((id<OrgJodaTimeFormatPeriodParser>) nil_chk(JreLoadVolatileId(&iAfterParser_))) parseIntoWithOrgJodaTimeReadWritablePeriod:period withNSString:periodStr withInt:position withJavaUtilLocale:locale];
  if (position < 0) {
    return position;
  }
  if (found && position == oldPos && parsedFormLength > 0) {
    return ~oldPos;
  }
  if (position > oldPos && !found && !iUseBefore_) {
    return ~oldPos;
  }
  return position;
}

- (OrgJodaTimeFormatPeriodFormatterBuilder_Separator *)finishWithOrgJodaTimeFormatPeriodPrinter:(id<OrgJodaTimeFormatPeriodPrinter>)afterPrinter
                                                              withOrgJodaTimeFormatPeriodParser:(id<OrgJodaTimeFormatPeriodParser>)afterParser {
  JreVolatileStrongAssign(&iAfterPrinter_, afterPrinter);
  JreVolatileStrongAssign(&iAfterParser_, afterParser);
  return self;
}

- (void)dealloc {
  RELEASE_(iText_);
  RELEASE_(iFinalText_);
  RELEASE_(iParsedForms_);
  RELEASE_(iBeforePrinter_);
  JreReleaseVolatile(&iAfterPrinter_);
  RELEASE_(iBeforeParser_);
  JreReleaseVolatile(&iAfterParser_);
  [super dealloc];
}

- (void)__javaClone:(OrgJodaTimeFormatPeriodFormatterBuilder_Separator *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&iAfterPrinter_, &original->iAfterPrinter_);
  JreCloneVolatileStrong(&iAfterParser_, &original->iAfterParser_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withNSStringArray:withOrgJodaTimeFormatPeriodPrinter:withOrgJodaTimeFormatPeriodParser:withBoolean:withBoolean:", "Separator", NULL, 0x0, NULL, NULL },
    { "countFieldsToPrintWithOrgJodaTimeReadablePeriod:withInt:withJavaUtilLocale:", "countFieldsToPrint", "I", 0x1, NULL, NULL },
    { "calculatePrintedLengthWithOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "calculatePrintedLength", "I", 0x1, NULL, NULL },
    { "printToWithJavaLangStringBuffer:withOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "printTo", "V", 0x1, NULL, NULL },
    { "printToWithJavaIoWriter:withOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "printTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseIntoWithOrgJodaTimeReadWritablePeriod:withNSString:withInt:withJavaUtilLocale:", "parseInto", "I", 0x1, NULL, NULL },
    { "finishWithOrgJodaTimeFormatPeriodPrinter:withOrgJodaTimeFormatPeriodParser:", "finish", "Lorg.joda.time.format.PeriodFormatterBuilder$Separator;", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iText_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "iFinalText_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "iParsedForms_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "iUseBefore_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "iUseAfter_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "iBeforePrinter_", NULL, 0x12, "Lorg.joda.time.format.PeriodPrinter;", NULL, NULL, .constantValue.asLong = 0 },
    { "iAfterPrinter_", NULL, 0x42, "Lorg.joda.time.format.PeriodPrinter;", NULL, NULL, .constantValue.asLong = 0 },
    { "iBeforeParser_", NULL, 0x12, "Lorg.joda.time.format.PeriodParser;", NULL, NULL, .constantValue.asLong = 0 },
    { "iAfterParser_", NULL, 0x42, "Lorg.joda.time.format.PeriodParser;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_Separator = { 2, "Separator", "org.joda.time.format", "PeriodFormatterBuilder", 0x8, 7, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_Separator;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_Separator_initWithNSString_withNSString_withNSStringArray_withOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withBoolean_withBoolean_(OrgJodaTimeFormatPeriodFormatterBuilder_Separator *self, NSString *text, NSString *finalText, IOSObjectArray *variants, id<OrgJodaTimeFormatPeriodPrinter> beforePrinter, id<OrgJodaTimeFormatPeriodParser> beforeParser, jboolean useBefore, jboolean useAfter) {
  NSObject_init(self);
  JreStrongAssign(&self->iText_, text);
  JreStrongAssign(&self->iFinalText_, finalText);
  if ((finalText == nil || [((NSString *) nil_chk(text)) isEqual:finalText]) && (variants == nil || variants->size_ == 0)) {
    JreStrongAssignAndConsume(&self->iParsedForms_, [IOSObjectArray newArrayWithObjects:(id[]){ text } count:1 type:NSString_class_()]);
  }
  else {
    JavaUtilTreeSet *parsedSet = create_JavaUtilTreeSet_initWithJavaUtilComparator_(JreLoadStatic(NSString, CASE_INSENSITIVE_ORDER));
    [parsedSet addWithId:text];
    [parsedSet addWithId:finalText];
    if (variants != nil) {
      for (jint i = variants->size_; --i >= 0; ) {
        [parsedSet addWithId:IOSObjectArray_Get(variants, i)];
      }
    }
    JavaUtilArrayList *parsedList = create_JavaUtilArrayList_initWithJavaUtilCollection_(parsedSet);
    JavaUtilCollections_reverseWithJavaUtilList_(parsedList);
    JreStrongAssign(&self->iParsedForms_, [parsedList toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[parsedList size] type:NSString_class_()]]);
  }
  JreStrongAssign(&self->iBeforePrinter_, beforePrinter);
  JreStrongAssign(&self->iBeforeParser_, beforeParser);
  self->iUseBefore_ = useBefore;
  self->iUseAfter_ = useAfter;
}

OrgJodaTimeFormatPeriodFormatterBuilder_Separator *new_OrgJodaTimeFormatPeriodFormatterBuilder_Separator_initWithNSString_withNSString_withNSStringArray_withOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withBoolean_withBoolean_(NSString *text, NSString *finalText, IOSObjectArray *variants, id<OrgJodaTimeFormatPeriodPrinter> beforePrinter, id<OrgJodaTimeFormatPeriodParser> beforeParser, jboolean useBefore, jboolean useAfter) {
  OrgJodaTimeFormatPeriodFormatterBuilder_Separator *self = [OrgJodaTimeFormatPeriodFormatterBuilder_Separator alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_Separator_initWithNSString_withNSString_withNSStringArray_withOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withBoolean_withBoolean_(self, text, finalText, variants, beforePrinter, beforeParser, useBefore, useAfter);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder_Separator *create_OrgJodaTimeFormatPeriodFormatterBuilder_Separator_initWithNSString_withNSString_withNSStringArray_withOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withBoolean_withBoolean_(NSString *text, NSString *finalText, IOSObjectArray *variants, id<OrgJodaTimeFormatPeriodPrinter> beforePrinter, id<OrgJodaTimeFormatPeriodParser> beforeParser, jboolean useBefore, jboolean useAfter) {
  OrgJodaTimeFormatPeriodFormatterBuilder_Separator *self = [[OrgJodaTimeFormatPeriodFormatterBuilder_Separator alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_Separator_initWithNSString_withNSString_withNSStringArray_withOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withBoolean_withBoolean_(self, text, finalText, variants, beforePrinter, beforeParser, useBefore, useAfter);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_Separator)

@implementation OrgJodaTimeFormatPeriodFormatterBuilder_Composite

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)elementPairs {
  OrgJodaTimeFormatPeriodFormatterBuilder_Composite_initWithJavaUtilList_(self, elementPairs);
  return self;
}

- (jint)countFieldsToPrintWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                withInt:(jint)stopAt
                                     withJavaUtilLocale:(JavaUtilLocale *)locale {
  jint sum = 0;
  IOSObjectArray *printers = iPrinters_;
  for (jint i = ((IOSObjectArray *) nil_chk(printers))->size_; sum < stopAt && --i >= 0; ) {
    sum += [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(IOSObjectArray_Get(printers, i))) countFieldsToPrintWithOrgJodaTimeReadablePeriod:period withInt:JavaLangInteger_MAX_VALUE withJavaUtilLocale:locale];
  }
  return sum;
}

- (jint)calculatePrintedLengthWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                         withJavaUtilLocale:(JavaUtilLocale *)locale {
  jint sum = 0;
  IOSObjectArray *printers = iPrinters_;
  for (jint i = ((IOSObjectArray *) nil_chk(printers))->size_; --i >= 0; ) {
    sum += [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(IOSObjectArray_Get(printers, i))) calculatePrintedLengthWithOrgJodaTimeReadablePeriod:period withJavaUtilLocale:locale];
  }
  return sum;
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
          withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                     withJavaUtilLocale:(JavaUtilLocale *)locale {
  IOSObjectArray *printers = iPrinters_;
  jint len = ((IOSObjectArray *) nil_chk(printers))->size_;
  for (jint i = 0; i < len; i++) {
    [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(IOSObjectArray_Get(printers, i))) printToWithJavaLangStringBuffer:buf withOrgJodaTimeReadablePeriod:period withJavaUtilLocale:locale];
  }
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
  withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  IOSObjectArray *printers = iPrinters_;
  jint len = ((IOSObjectArray *) nil_chk(printers))->size_;
  for (jint i = 0; i < len; i++) {
    [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(IOSObjectArray_Get(printers, i))) printToWithJavaIoWriter:outArg withOrgJodaTimeReadablePeriod:period withJavaUtilLocale:locale];
  }
}

- (jint)parseIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)period
                                      withNSString:(NSString *)periodStr
                                           withInt:(jint)position
                                withJavaUtilLocale:(JavaUtilLocale *)locale {
  IOSObjectArray *parsers = iParsers_;
  if (parsers == nil) {
    @throw create_JavaLangUnsupportedOperationException_init();
  }
  jint len = ((IOSObjectArray *) nil_chk(parsers))->size_;
  for (jint i = 0; i < len && position >= 0; i++) {
    position = [((id<OrgJodaTimeFormatPeriodParser>) nil_chk(IOSObjectArray_Get(parsers, i))) parseIntoWithOrgJodaTimeReadWritablePeriod:period withNSString:periodStr withInt:position withJavaUtilLocale:locale];
  }
  return position;
}

- (void)decomposeWithJavaUtilList:(id<JavaUtilList>)elementPairs
                 withJavaUtilList:(id<JavaUtilList>)printerList
                 withJavaUtilList:(id<JavaUtilList>)parserList {
  OrgJodaTimeFormatPeriodFormatterBuilder_Composite_decomposeWithJavaUtilList_withJavaUtilList_withJavaUtilList_(self, elementPairs, printerList, parserList);
}

- (void)addArrayToListWithJavaUtilList:(id<JavaUtilList>)list
                     withNSObjectArray:(IOSObjectArray *)array {
  OrgJodaTimeFormatPeriodFormatterBuilder_Composite_addArrayToListWithJavaUtilList_withNSObjectArray_(self, list, array);
}

- (void)dealloc {
  RELEASE_(iPrinters_);
  RELEASE_(iParsers_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "Composite", NULL, 0x0, NULL, "(Ljava/util/List<Ljava/lang/Object;>;)V" },
    { "countFieldsToPrintWithOrgJodaTimeReadablePeriod:withInt:withJavaUtilLocale:", "countFieldsToPrint", "I", 0x1, NULL, NULL },
    { "calculatePrintedLengthWithOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "calculatePrintedLength", "I", 0x1, NULL, NULL },
    { "printToWithJavaLangStringBuffer:withOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "printTo", "V", 0x1, NULL, NULL },
    { "printToWithJavaIoWriter:withOrgJodaTimeReadablePeriod:withJavaUtilLocale:", "printTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseIntoWithOrgJodaTimeReadWritablePeriod:withNSString:withInt:withJavaUtilLocale:", "parseInto", "I", 0x1, NULL, NULL },
    { "decomposeWithJavaUtilList:withJavaUtilList:withJavaUtilList:", "decompose", "V", 0x2, NULL, "(Ljava/util/List<Ljava/lang/Object;>;Ljava/util/List<Ljava/lang/Object;>;Ljava/util/List<Ljava/lang/Object;>;)V" },
    { "addArrayToListWithJavaUtilList:withNSObjectArray:", "addArrayToList", "V", 0x2, NULL, "(Ljava/util/List<Ljava/lang/Object;>;[Ljava/lang/Object;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iPrinters_", NULL, 0x12, "[Lorg.joda.time.format.PeriodPrinter;", NULL, NULL, .constantValue.asLong = 0 },
    { "iParsers_", NULL, 0x12, "[Lorg.joda.time.format.PeriodParser;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatterBuilder_Composite = { 2, "Composite", "org.joda.time.format", "PeriodFormatterBuilder", 0x8, 8, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatterBuilder_Composite;
}

@end

void OrgJodaTimeFormatPeriodFormatterBuilder_Composite_initWithJavaUtilList_(OrgJodaTimeFormatPeriodFormatterBuilder_Composite *self, id<JavaUtilList> elementPairs) {
  NSObject_init(self);
  id<JavaUtilList> printerList = create_JavaUtilArrayList_init();
  id<JavaUtilList> parserList = create_JavaUtilArrayList_init();
  OrgJodaTimeFormatPeriodFormatterBuilder_Composite_decomposeWithJavaUtilList_withJavaUtilList_withJavaUtilList_(self, elementPairs, printerList, parserList);
  if ([printerList size] <= 0) {
    JreStrongAssign(&self->iPrinters_, nil);
  }
  else {
    JreStrongAssign(&self->iPrinters_, [printerList toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[printerList size] type:OrgJodaTimeFormatPeriodPrinter_class_()]]);
  }
  if ([parserList size] <= 0) {
    JreStrongAssign(&self->iParsers_, nil);
  }
  else {
    JreStrongAssign(&self->iParsers_, [parserList toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[parserList size] type:OrgJodaTimeFormatPeriodParser_class_()]]);
  }
}

OrgJodaTimeFormatPeriodFormatterBuilder_Composite *new_OrgJodaTimeFormatPeriodFormatterBuilder_Composite_initWithJavaUtilList_(id<JavaUtilList> elementPairs) {
  OrgJodaTimeFormatPeriodFormatterBuilder_Composite *self = [OrgJodaTimeFormatPeriodFormatterBuilder_Composite alloc];
  OrgJodaTimeFormatPeriodFormatterBuilder_Composite_initWithJavaUtilList_(self, elementPairs);
  return self;
}

OrgJodaTimeFormatPeriodFormatterBuilder_Composite *create_OrgJodaTimeFormatPeriodFormatterBuilder_Composite_initWithJavaUtilList_(id<JavaUtilList> elementPairs) {
  OrgJodaTimeFormatPeriodFormatterBuilder_Composite *self = [[OrgJodaTimeFormatPeriodFormatterBuilder_Composite alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatterBuilder_Composite_initWithJavaUtilList_(self, elementPairs);
  return self;
}

void OrgJodaTimeFormatPeriodFormatterBuilder_Composite_decomposeWithJavaUtilList_withJavaUtilList_withJavaUtilList_(OrgJodaTimeFormatPeriodFormatterBuilder_Composite *self, id<JavaUtilList> elementPairs, id<JavaUtilList> printerList, id<JavaUtilList> parserList) {
  jint size = [((id<JavaUtilList>) nil_chk(elementPairs)) size];
  for (jint i = 0; i < size; i += 2) {
    id element = [elementPairs getWithInt:i];
    if ([OrgJodaTimeFormatPeriodPrinter_class_() isInstance:element]) {
      if ([element isKindOfClass:[OrgJodaTimeFormatPeriodFormatterBuilder_Composite class]]) {
        OrgJodaTimeFormatPeriodFormatterBuilder_Composite_addArrayToListWithJavaUtilList_withNSObjectArray_(self, printerList, ((OrgJodaTimeFormatPeriodFormatterBuilder_Composite *) nil_chk(((OrgJodaTimeFormatPeriodFormatterBuilder_Composite *) cast_chk(element, [OrgJodaTimeFormatPeriodFormatterBuilder_Composite class]))))->iPrinters_);
      }
      else {
        [((id<JavaUtilList>) nil_chk(printerList)) addWithId:element];
      }
    }
    element = [elementPairs getWithInt:i + 1];
    if ([OrgJodaTimeFormatPeriodParser_class_() isInstance:element]) {
      if ([element isKindOfClass:[OrgJodaTimeFormatPeriodFormatterBuilder_Composite class]]) {
        OrgJodaTimeFormatPeriodFormatterBuilder_Composite_addArrayToListWithJavaUtilList_withNSObjectArray_(self, parserList, ((OrgJodaTimeFormatPeriodFormatterBuilder_Composite *) nil_chk(((OrgJodaTimeFormatPeriodFormatterBuilder_Composite *) cast_chk(element, [OrgJodaTimeFormatPeriodFormatterBuilder_Composite class]))))->iParsers_);
      }
      else {
        [((id<JavaUtilList>) nil_chk(parserList)) addWithId:element];
      }
    }
  }
}

void OrgJodaTimeFormatPeriodFormatterBuilder_Composite_addArrayToListWithJavaUtilList_withNSObjectArray_(OrgJodaTimeFormatPeriodFormatterBuilder_Composite *self, id<JavaUtilList> list, IOSObjectArray *array) {
  if (array != nil) {
    for (jint i = 0; i < array->size_; i++) {
      [((id<JavaUtilList>) nil_chk(list)) addWithId:IOSObjectArray_Get(array, i)];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatterBuilder_Composite)
