//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/format/FormatUtils.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/Appendable.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuffer.h"
#include "org/joda/time/format/FormatUtils.h"

@interface OrgJodaTimeFormatFormatUtils ()

- (instancetype)init;

@end

inline jdouble OrgJodaTimeFormatFormatUtils_get_LOG_10();
static jdouble OrgJodaTimeFormatFormatUtils_LOG_10;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgJodaTimeFormatFormatUtils, LOG_10, jdouble)

__attribute__((unused)) static void OrgJodaTimeFormatFormatUtils_init(OrgJodaTimeFormatFormatUtils *self);

__attribute__((unused)) static OrgJodaTimeFormatFormatUtils *new_OrgJodaTimeFormatFormatUtils_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeFormatFormatUtils *create_OrgJodaTimeFormatFormatUtils_init();

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeFormatFormatUtils)

@implementation OrgJodaTimeFormatFormatUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeFormatFormatUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)appendPaddedIntegerWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                            withInt:(jint)value
                                            withInt:(jint)size {
  OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangStringBuffer_withInt_withInt_(buf, value, size);
}

+ (void)appendPaddedIntegerWithJavaLangAppendable:(id<JavaLangAppendable>)appenadble
                                          withInt:(jint)value
                                          withInt:(jint)size {
  OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangAppendable_withInt_withInt_(appenadble, value, size);
}

+ (void)appendPaddedIntegerWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                           withLong:(jlong)value
                                            withInt:(jint)size {
  OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangStringBuffer_withLong_withInt_(buf, value, size);
}

+ (void)appendPaddedIntegerWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                         withLong:(jlong)value
                                          withInt:(jint)size {
  OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangAppendable_withLong_withInt_(appendable, value, size);
}

+ (void)writePaddedIntegerWithJavaIoWriter:(JavaIoWriter *)outArg
                                   withInt:(jint)value
                                   withInt:(jint)size {
  OrgJodaTimeFormatFormatUtils_writePaddedIntegerWithJavaIoWriter_withInt_withInt_(outArg, value, size);
}

+ (void)writePaddedIntegerWithJavaIoWriter:(JavaIoWriter *)outArg
                                  withLong:(jlong)value
                                   withInt:(jint)size {
  OrgJodaTimeFormatFormatUtils_writePaddedIntegerWithJavaIoWriter_withLong_withInt_(outArg, value, size);
}

+ (void)appendUnpaddedIntegerWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                              withInt:(jint)value {
  OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangStringBuffer_withInt_(buf, value);
}

+ (void)appendUnpaddedIntegerWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                            withInt:(jint)value {
  OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangAppendable_withInt_(appendable, value);
}

+ (void)appendUnpaddedIntegerWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                             withLong:(jlong)value {
  OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangStringBuffer_withLong_(buf, value);
}

+ (void)appendUnpaddedIntegerWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                           withLong:(jlong)value {
  OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangAppendable_withLong_(appendable, value);
}

+ (void)writeUnpaddedIntegerWithJavaIoWriter:(JavaIoWriter *)outArg
                                     withInt:(jint)value {
  OrgJodaTimeFormatFormatUtils_writeUnpaddedIntegerWithJavaIoWriter_withInt_(outArg, value);
}

+ (void)writeUnpaddedIntegerWithJavaIoWriter:(JavaIoWriter *)outArg
                                    withLong:(jlong)value {
  OrgJodaTimeFormatFormatUtils_writeUnpaddedIntegerWithJavaIoWriter_withLong_(outArg, value);
}

+ (jint)calculateDigitCountWithLong:(jlong)value {
  return OrgJodaTimeFormatFormatUtils_calculateDigitCountWithLong_(value);
}

+ (jint)parseTwoDigitsWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                       withInt:(jint)position {
  return OrgJodaTimeFormatFormatUtils_parseTwoDigitsWithJavaLangCharSequence_withInt_(text, position);
}

+ (NSString *)createErrorMessageWithNSString:(NSString *)text
                                     withInt:(jint)errorPos {
  return OrgJodaTimeFormatFormatUtils_createErrorMessageWithNSString_withInt_(text, errorPos);
}

+ (void)initialize {
  if (self == [OrgJodaTimeFormatFormatUtils class]) {
    OrgJodaTimeFormatFormatUtils_LOG_10 = JavaLangMath_logWithDouble_(10);
    J2OBJC_SET_INITIALIZED(OrgJodaTimeFormatFormatUtils)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "FormatUtils", NULL, 0x2, NULL, NULL },
    { "appendPaddedIntegerWithJavaLangStringBuffer:withInt:withInt:", "appendPaddedInteger", "V", 0x9, NULL, NULL },
    { "appendPaddedIntegerWithJavaLangAppendable:withInt:withInt:", "appendPaddedInteger", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "appendPaddedIntegerWithJavaLangStringBuffer:withLong:withInt:", "appendPaddedInteger", "V", 0x9, NULL, NULL },
    { "appendPaddedIntegerWithJavaLangAppendable:withLong:withInt:", "appendPaddedInteger", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "writePaddedIntegerWithJavaIoWriter:withInt:withInt:", "writePaddedInteger", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "writePaddedIntegerWithJavaIoWriter:withLong:withInt:", "writePaddedInteger", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "appendUnpaddedIntegerWithJavaLangStringBuffer:withInt:", "appendUnpaddedInteger", "V", 0x9, NULL, NULL },
    { "appendUnpaddedIntegerWithJavaLangAppendable:withInt:", "appendUnpaddedInteger", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "appendUnpaddedIntegerWithJavaLangStringBuffer:withLong:", "appendUnpaddedInteger", "V", 0x9, NULL, NULL },
    { "appendUnpaddedIntegerWithJavaLangAppendable:withLong:", "appendUnpaddedInteger", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "writeUnpaddedIntegerWithJavaIoWriter:withInt:", "writeUnpaddedInteger", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "writeUnpaddedIntegerWithJavaIoWriter:withLong:", "writeUnpaddedInteger", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "calculateDigitCountWithLong:", "calculateDigitCount", "I", 0x9, NULL, NULL },
    { "parseTwoDigitsWithJavaLangCharSequence:withInt:", "parseTwoDigits", "I", 0x8, NULL, NULL },
    { "createErrorMessageWithNSString:withInt:", "createErrorMessage", "Ljava.lang.String;", 0x8, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LOG_10", "LOG_10", 0x1a, "D", &OrgJodaTimeFormatFormatUtils_LOG_10, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatFormatUtils = { 2, "FormatUtils", "org.joda.time.format", NULL, 0x1, 16, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatFormatUtils;
}

@end

void OrgJodaTimeFormatFormatUtils_init(OrgJodaTimeFormatFormatUtils *self) {
  NSObject_init(self);
}

OrgJodaTimeFormatFormatUtils *new_OrgJodaTimeFormatFormatUtils_init() {
  OrgJodaTimeFormatFormatUtils *self = [OrgJodaTimeFormatFormatUtils alloc];
  OrgJodaTimeFormatFormatUtils_init(self);
  return self;
}

OrgJodaTimeFormatFormatUtils *create_OrgJodaTimeFormatFormatUtils_init() {
  OrgJodaTimeFormatFormatUtils *self = [[OrgJodaTimeFormatFormatUtils alloc] autorelease];
  OrgJodaTimeFormatFormatUtils_init(self);
  return self;
}

void OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangStringBuffer_withInt_withInt_(JavaLangStringBuffer *buf, jint value, jint size) {
  OrgJodaTimeFormatFormatUtils_initialize();
  @try {
    OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangAppendable_withInt_withInt_(buf, value, size);
  }
  @catch (JavaIoIOException *e) {
  }
}

void OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangAppendable_withInt_withInt_(id<JavaLangAppendable> appenadble, jint value, jint size) {
  OrgJodaTimeFormatFormatUtils_initialize();
  if (value < 0) {
    [((id<JavaLangAppendable>) nil_chk(appenadble)) appendWithChar:'-'];
    if (value != JavaLangInteger_MIN_VALUE) {
      value = -value;
    }
    else {
      for (; size > 10; size--) {
        [appenadble appendWithChar:'0'];
      }
      [appenadble appendWithJavaLangCharSequence:JreStrcat("J", -(jlong) JavaLangInteger_MIN_VALUE)];
      return;
    }
  }
  if (value < 10) {
    for (; size > 1; size--) {
      [((id<JavaLangAppendable>) nil_chk(appenadble)) appendWithChar:'0'];
    }
    [((id<JavaLangAppendable>) nil_chk(appenadble)) appendWithChar:(jchar) (value + '0')];
  }
  else if (value < 100) {
    for (; size > 2; size--) {
      [((id<JavaLangAppendable>) nil_chk(appenadble)) appendWithChar:'0'];
    }
    jint d = JreRShift32(((value + 1) * 13421772), 27);
    [((id<JavaLangAppendable>) nil_chk(appenadble)) appendWithChar:(jchar) (d + '0')];
    [appenadble appendWithChar:(jchar) (value - (JreLShift32(d, 3)) - (JreLShift32(d, 1)) + '0')];
  }
  else {
    jint digits;
    if (value < 1000) {
      digits = 3;
    }
    else if (value < 10000) {
      digits = 4;
    }
    else {
      digits = JreFpToInt((JavaLangMath_logWithDouble_(value) / OrgJodaTimeFormatFormatUtils_LOG_10)) + 1;
    }
    for (; size > digits; size--) {
      [((id<JavaLangAppendable>) nil_chk(appenadble)) appendWithChar:'0'];
    }
    [((id<JavaLangAppendable>) nil_chk(appenadble)) appendWithJavaLangCharSequence:JavaLangInteger_toStringWithInt_(value)];
  }
}

void OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangStringBuffer_withLong_withInt_(JavaLangStringBuffer *buf, jlong value, jint size) {
  OrgJodaTimeFormatFormatUtils_initialize();
  @try {
    OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangAppendable_withLong_withInt_(buf, value, size);
  }
  @catch (JavaIoIOException *e) {
  }
}

void OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangAppendable_withLong_withInt_(id<JavaLangAppendable> appendable, jlong value, jint size) {
  OrgJodaTimeFormatFormatUtils_initialize();
  jint intValue = (jint) value;
  if (intValue == value) {
    OrgJodaTimeFormatFormatUtils_appendPaddedIntegerWithJavaLangAppendable_withInt_withInt_(appendable, intValue, size);
  }
  else if (size <= 19) {
    [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithJavaLangCharSequence:JavaLangLong_toStringWithLong_(value)];
  }
  else {
    if (value < 0) {
      [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithChar:'-'];
      if (value != JavaLangLong_MIN_VALUE) {
        value = -value;
      }
      else {
        for (; size > 19; size--) {
          [appendable appendWithChar:'0'];
        }
        [appendable appendWithJavaLangCharSequence:@"9223372036854775808"];
        return;
      }
    }
    jint digits = JreFpToInt((JavaLangMath_logWithDouble_(value) / OrgJodaTimeFormatFormatUtils_LOG_10)) + 1;
    for (; size > digits; size--) {
      [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithChar:'0'];
    }
    [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithJavaLangCharSequence:JavaLangLong_toStringWithLong_(value)];
  }
}

void OrgJodaTimeFormatFormatUtils_writePaddedIntegerWithJavaIoWriter_withInt_withInt_(JavaIoWriter *outArg, jint value, jint size) {
  OrgJodaTimeFormatFormatUtils_initialize();
  if (value < 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:'-'];
    if (value != JavaLangInteger_MIN_VALUE) {
      value = -value;
    }
    else {
      for (; size > 10; size--) {
        [outArg writeWithInt:'0'];
      }
      [outArg writeWithNSString:JreStrcat("J", -(jlong) JavaLangInteger_MIN_VALUE)];
      return;
    }
  }
  if (value < 10) {
    for (; size > 1; size--) {
      [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:'0'];
    }
    [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:value + '0'];
  }
  else if (value < 100) {
    for (; size > 2; size--) {
      [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:'0'];
    }
    jint d = JreRShift32(((value + 1) * 13421772), 27);
    [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:d + '0'];
    [outArg writeWithInt:value - (JreLShift32(d, 3)) - (JreLShift32(d, 1)) + '0'];
  }
  else {
    jint digits;
    if (value < 1000) {
      digits = 3;
    }
    else if (value < 10000) {
      digits = 4;
    }
    else {
      digits = JreFpToInt((JavaLangMath_logWithDouble_(value) / OrgJodaTimeFormatFormatUtils_LOG_10)) + 1;
    }
    for (; size > digits; size--) {
      [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:'0'];
    }
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:JavaLangInteger_toStringWithInt_(value)];
  }
}

void OrgJodaTimeFormatFormatUtils_writePaddedIntegerWithJavaIoWriter_withLong_withInt_(JavaIoWriter *outArg, jlong value, jint size) {
  OrgJodaTimeFormatFormatUtils_initialize();
  jint intValue = (jint) value;
  if (intValue == value) {
    OrgJodaTimeFormatFormatUtils_writePaddedIntegerWithJavaIoWriter_withInt_withInt_(outArg, intValue, size);
  }
  else if (size <= 19) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:JavaLangLong_toStringWithLong_(value)];
  }
  else {
    if (value < 0) {
      [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:'-'];
      if (value != JavaLangLong_MIN_VALUE) {
        value = -value;
      }
      else {
        for (; size > 19; size--) {
          [outArg writeWithInt:'0'];
        }
        [outArg writeWithNSString:@"9223372036854775808"];
        return;
      }
    }
    jint digits = JreFpToInt((JavaLangMath_logWithDouble_(value) / OrgJodaTimeFormatFormatUtils_LOG_10)) + 1;
    for (; size > digits; size--) {
      [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:'0'];
    }
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:JavaLangLong_toStringWithLong_(value)];
  }
}

void OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangStringBuffer_withInt_(JavaLangStringBuffer *buf, jint value) {
  OrgJodaTimeFormatFormatUtils_initialize();
  @try {
    OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangAppendable_withInt_(buf, value);
  }
  @catch (JavaIoIOException *e) {
  }
}

void OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangAppendable_withInt_(id<JavaLangAppendable> appendable, jint value) {
  OrgJodaTimeFormatFormatUtils_initialize();
  if (value < 0) {
    [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithChar:'-'];
    if (value != JavaLangInteger_MIN_VALUE) {
      value = -value;
    }
    else {
      [appendable appendWithJavaLangCharSequence:JreStrcat("J", -(jlong) JavaLangInteger_MIN_VALUE)];
      return;
    }
  }
  if (value < 10) {
    [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithChar:(jchar) (value + '0')];
  }
  else if (value < 100) {
    jint d = JreRShift32(((value + 1) * 13421772), 27);
    [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithChar:(jchar) (d + '0')];
    [appendable appendWithChar:(jchar) (value - (JreLShift32(d, 3)) - (JreLShift32(d, 1)) + '0')];
  }
  else {
    [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithJavaLangCharSequence:JavaLangInteger_toStringWithInt_(value)];
  }
}

void OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangStringBuffer_withLong_(JavaLangStringBuffer *buf, jlong value) {
  OrgJodaTimeFormatFormatUtils_initialize();
  @try {
    OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangAppendable_withLong_(buf, value);
  }
  @catch (JavaIoIOException *e) {
  }
}

void OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangAppendable_withLong_(id<JavaLangAppendable> appendable, jlong value) {
  OrgJodaTimeFormatFormatUtils_initialize();
  jint intValue = (jint) value;
  if (intValue == value) {
    OrgJodaTimeFormatFormatUtils_appendUnpaddedIntegerWithJavaLangAppendable_withInt_(appendable, intValue);
  }
  else {
    [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithJavaLangCharSequence:JavaLangLong_toStringWithLong_(value)];
  }
}

void OrgJodaTimeFormatFormatUtils_writeUnpaddedIntegerWithJavaIoWriter_withInt_(JavaIoWriter *outArg, jint value) {
  OrgJodaTimeFormatFormatUtils_initialize();
  if (value < 0) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:'-'];
    if (value != JavaLangInteger_MIN_VALUE) {
      value = -value;
    }
    else {
      [outArg writeWithNSString:JreStrcat("J", -(jlong) JavaLangInteger_MIN_VALUE)];
      return;
    }
  }
  if (value < 10) {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:value + '0'];
  }
  else if (value < 100) {
    jint d = JreRShift32(((value + 1) * 13421772), 27);
    [((JavaIoWriter *) nil_chk(outArg)) writeWithInt:d + '0'];
    [outArg writeWithInt:value - (JreLShift32(d, 3)) - (JreLShift32(d, 1)) + '0'];
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:JavaLangInteger_toStringWithInt_(value)];
  }
}

void OrgJodaTimeFormatFormatUtils_writeUnpaddedIntegerWithJavaIoWriter_withLong_(JavaIoWriter *outArg, jlong value) {
  OrgJodaTimeFormatFormatUtils_initialize();
  jint intValue = (jint) value;
  if (intValue == value) {
    OrgJodaTimeFormatFormatUtils_writeUnpaddedIntegerWithJavaIoWriter_withInt_(outArg, intValue);
  }
  else {
    [((JavaIoWriter *) nil_chk(outArg)) writeWithNSString:JavaLangLong_toStringWithLong_(value)];
  }
}

jint OrgJodaTimeFormatFormatUtils_calculateDigitCountWithLong_(jlong value) {
  OrgJodaTimeFormatFormatUtils_initialize();
  if (value < 0) {
    if (value != JavaLangLong_MIN_VALUE) {
      return OrgJodaTimeFormatFormatUtils_calculateDigitCountWithLong_(-value) + 1;
    }
    else {
      return 20;
    }
  }
  return (value < 10 ? 1 : (value < 100 ? 2 : (value < 1000 ? 3 : (value < 10000 ? 4 : (JreFpToInt((JavaLangMath_logWithDouble_(value) / OrgJodaTimeFormatFormatUtils_LOG_10)) + 1)))));
}

jint OrgJodaTimeFormatFormatUtils_parseTwoDigitsWithJavaLangCharSequence_withInt_(id<JavaLangCharSequence> text, jint position) {
  OrgJodaTimeFormatFormatUtils_initialize();
  jint value = [((id<JavaLangCharSequence>) nil_chk(text)) charAtWithInt:position] - '0';
  return ((JreLShift32(value, 3)) + (JreLShift32(value, 1))) + [text charAtWithInt:position + 1] - '0';
}

NSString *OrgJodaTimeFormatFormatUtils_createErrorMessageWithNSString_withInt_(NSString *text, jint errorPos) {
  OrgJodaTimeFormatFormatUtils_initialize();
  jint sampleLen = errorPos + 32;
  NSString *sampleText;
  if (((jint) [((NSString *) nil_chk(text)) length]) <= sampleLen + 3) {
    sampleText = text;
  }
  else {
    sampleText = [((NSString *) nil_chk([text substring:0 endIndex:sampleLen])) concat:@"..."];
  }
  if (errorPos <= 0) {
    return JreStrcat("$$C", @"Invalid format: \"", sampleText, '"');
  }
  if (errorPos >= ((jint) [text length])) {
    return JreStrcat("$$$", @"Invalid format: \"", sampleText, @"\" is too short");
  }
  return JreStrcat("$$$$C", @"Invalid format: \"", sampleText, @"\" is malformed at \"", [((NSString *) nil_chk(sampleText)) substring:errorPos], '"');
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatFormatUtils)
