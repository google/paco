//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/format/PeriodFormatter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Locale.h"
#include "org/joda/time/MutablePeriod.h"
#include "org/joda/time/Period.h"
#include "org/joda/time/PeriodType.h"
#include "org/joda/time/ReadWritablePeriod.h"
#include "org/joda/time/ReadablePeriod.h"
#include "org/joda/time/format/FormatUtils.h"
#include "org/joda/time/format/PeriodFormatter.h"
#include "org/joda/time/format/PeriodParser.h"
#include "org/joda/time/format/PeriodPrinter.h"

@interface OrgJodaTimeFormatPeriodFormatter () {
 @public
  id<OrgJodaTimeFormatPeriodPrinter> iPrinter_;
  id<OrgJodaTimeFormatPeriodParser> iParser_;
  JavaUtilLocale *iLocale_;
  OrgJodaTimePeriodType *iParseType_;
}

- (void)checkPrinter;

- (void)checkPeriodWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (void)checkParser;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatter, iPrinter_, id<OrgJodaTimeFormatPeriodPrinter>)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatter, iParser_, id<OrgJodaTimeFormatPeriodParser>)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatter, iLocale_, JavaUtilLocale *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFormatPeriodFormatter, iParseType_, OrgJodaTimePeriodType *)

__attribute__((unused)) static void OrgJodaTimeFormatPeriodFormatter_checkPrinter(OrgJodaTimeFormatPeriodFormatter *self);

__attribute__((unused)) static void OrgJodaTimeFormatPeriodFormatter_checkPeriodWithOrgJodaTimeReadablePeriod_(OrgJodaTimeFormatPeriodFormatter *self, id<OrgJodaTimeReadablePeriod> period);

__attribute__((unused)) static void OrgJodaTimeFormatPeriodFormatter_checkParser(OrgJodaTimeFormatPeriodFormatter *self);

@implementation OrgJodaTimeFormatPeriodFormatter

- (instancetype)initWithOrgJodaTimeFormatPeriodPrinter:(id<OrgJodaTimeFormatPeriodPrinter>)printer
                     withOrgJodaTimeFormatPeriodParser:(id<OrgJodaTimeFormatPeriodParser>)parser {
  OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(self, printer, parser);
  return self;
}

- (instancetype)initWithOrgJodaTimeFormatPeriodPrinter:(id<OrgJodaTimeFormatPeriodPrinter>)printer
                     withOrgJodaTimeFormatPeriodParser:(id<OrgJodaTimeFormatPeriodParser>)parser
                                    withJavaUtilLocale:(JavaUtilLocale *)locale
                             withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withJavaUtilLocale_withOrgJodaTimePeriodType_(self, printer, parser, locale, type);
  return self;
}

- (jboolean)isPrinter {
  return (iPrinter_ != nil);
}

- (id<OrgJodaTimeFormatPeriodPrinter>)getPrinter {
  return iPrinter_;
}

- (jboolean)isParser {
  return (iParser_ != nil);
}

- (id<OrgJodaTimeFormatPeriodParser>)getParser {
  return iParser_;
}

- (OrgJodaTimeFormatPeriodFormatter *)withLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale {
  if (locale == [self getLocale] || (locale != nil && [locale isEqual:[self getLocale]])) {
    return self;
  }
  return create_OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withJavaUtilLocale_withOrgJodaTimePeriodType_(iPrinter_, iParser_, locale, iParseType_);
}

- (JavaUtilLocale *)getLocale {
  return iLocale_;
}

- (OrgJodaTimeFormatPeriodFormatter *)withParseTypeWithOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  if (type == iParseType_) {
    return self;
  }
  return create_OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withJavaUtilLocale_withOrgJodaTimePeriodType_(iPrinter_, iParser_, iLocale_, type);
}

- (OrgJodaTimePeriodType *)getParseType {
  return iParseType_;
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
          withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  OrgJodaTimeFormatPeriodFormatter_checkPrinter(self);
  OrgJodaTimeFormatPeriodFormatter_checkPeriodWithOrgJodaTimeReadablePeriod_(self, period);
  [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk([self getPrinter])) printToWithJavaLangStringBuffer:buf withOrgJodaTimeReadablePeriod:period withJavaUtilLocale:iLocale_];
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
  withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  OrgJodaTimeFormatPeriodFormatter_checkPrinter(self);
  OrgJodaTimeFormatPeriodFormatter_checkPeriodWithOrgJodaTimeReadablePeriod_(self, period);
  [((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk([self getPrinter])) printToWithJavaIoWriter:outArg withOrgJodaTimeReadablePeriod:period withJavaUtilLocale:iLocale_];
}

- (NSString *)printWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  OrgJodaTimeFormatPeriodFormatter_checkPrinter(self);
  OrgJodaTimeFormatPeriodFormatter_checkPeriodWithOrgJodaTimeReadablePeriod_(self, period);
  id<OrgJodaTimeFormatPeriodPrinter> printer = [self getPrinter];
  JavaLangStringBuffer *buf = create_JavaLangStringBuffer_initWithInt_([((id<OrgJodaTimeFormatPeriodPrinter>) nil_chk(printer)) calculatePrintedLengthWithOrgJodaTimeReadablePeriod:period withJavaUtilLocale:iLocale_]);
  [printer printToWithJavaLangStringBuffer:buf withOrgJodaTimeReadablePeriod:period withJavaUtilLocale:iLocale_];
  return [buf description];
}

- (void)checkPrinter {
  OrgJodaTimeFormatPeriodFormatter_checkPrinter(self);
}

- (void)checkPeriodWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  OrgJodaTimeFormatPeriodFormatter_checkPeriodWithOrgJodaTimeReadablePeriod_(self, period);
}

- (jint)parseIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)period
                                      withNSString:(NSString *)text
                                           withInt:(jint)position {
  OrgJodaTimeFormatPeriodFormatter_checkParser(self);
  OrgJodaTimeFormatPeriodFormatter_checkPeriodWithOrgJodaTimeReadablePeriod_(self, period);
  return [((id<OrgJodaTimeFormatPeriodParser>) nil_chk([self getParser])) parseIntoWithOrgJodaTimeReadWritablePeriod:period withNSString:text withInt:position withJavaUtilLocale:iLocale_];
}

- (OrgJodaTimePeriod *)parsePeriodWithNSString:(NSString *)text {
  OrgJodaTimeFormatPeriodFormatter_checkParser(self);
  return [((OrgJodaTimeMutablePeriod *) nil_chk([self parseMutablePeriodWithNSString:text])) toPeriod];
}

- (OrgJodaTimeMutablePeriod *)parseMutablePeriodWithNSString:(NSString *)text {
  OrgJodaTimeFormatPeriodFormatter_checkParser(self);
  OrgJodaTimeMutablePeriod *period = create_OrgJodaTimeMutablePeriod_initWithLong_withOrgJodaTimePeriodType_(0, iParseType_);
  jint newPos = [((id<OrgJodaTimeFormatPeriodParser>) nil_chk([self getParser])) parseIntoWithOrgJodaTimeReadWritablePeriod:period withNSString:text withInt:0 withJavaUtilLocale:iLocale_];
  if (newPos >= 0) {
    if (newPos >= ((jint) [((NSString *) nil_chk(text)) length])) {
      return period;
    }
  }
  else {
    newPos = ~newPos;
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(OrgJodaTimeFormatFormatUtils_createErrorMessageWithNSString_withInt_(text, newPos));
}

- (void)checkParser {
  OrgJodaTimeFormatPeriodFormatter_checkParser(self);
}

- (void)dealloc {
  RELEASE_(iPrinter_);
  RELEASE_(iParser_);
  RELEASE_(iLocale_);
  RELEASE_(iParseType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeFormatPeriodPrinter:withOrgJodaTimeFormatPeriodParser:", "PeriodFormatter", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeFormatPeriodPrinter:withOrgJodaTimeFormatPeriodParser:withJavaUtilLocale:withOrgJodaTimePeriodType:", "PeriodFormatter", NULL, 0x0, NULL, NULL },
    { "isPrinter", NULL, "Z", 0x1, NULL, NULL },
    { "getPrinter", NULL, "Lorg.joda.time.format.PeriodPrinter;", 0x1, NULL, NULL },
    { "isParser", NULL, "Z", 0x1, NULL, NULL },
    { "getParser", NULL, "Lorg.joda.time.format.PeriodParser;", 0x1, NULL, NULL },
    { "withLocaleWithJavaUtilLocale:", "withLocale", "Lorg.joda.time.format.PeriodFormatter;", 0x1, NULL, NULL },
    { "getLocale", NULL, "Ljava.util.Locale;", 0x1, NULL, NULL },
    { "withParseTypeWithOrgJodaTimePeriodType:", "withParseType", "Lorg.joda.time.format.PeriodFormatter;", 0x1, NULL, NULL },
    { "getParseType", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL, NULL },
    { "printToWithJavaLangStringBuffer:withOrgJodaTimeReadablePeriod:", "printTo", "V", 0x1, NULL, NULL },
    { "printToWithJavaIoWriter:withOrgJodaTimeReadablePeriod:", "printTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "printWithOrgJodaTimeReadablePeriod:", "print", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "checkPrinter", NULL, "V", 0x2, NULL, NULL },
    { "checkPeriodWithOrgJodaTimeReadablePeriod:", "checkPeriod", "V", 0x2, NULL, NULL },
    { "parseIntoWithOrgJodaTimeReadWritablePeriod:withNSString:withInt:", "parseInto", "I", 0x1, NULL, NULL },
    { "parsePeriodWithNSString:", "parsePeriod", "Lorg.joda.time.Period;", 0x1, NULL, NULL },
    { "parseMutablePeriodWithNSString:", "parseMutablePeriod", "Lorg.joda.time.MutablePeriod;", 0x1, NULL, NULL },
    { "checkParser", NULL, "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iPrinter_", NULL, 0x12, "Lorg.joda.time.format.PeriodPrinter;", NULL, NULL, .constantValue.asLong = 0 },
    { "iParser_", NULL, 0x12, "Lorg.joda.time.format.PeriodParser;", NULL, NULL, .constantValue.asLong = 0 },
    { "iLocale_", NULL, 0x12, "Ljava.util.Locale;", NULL, NULL, .constantValue.asLong = 0 },
    { "iParseType_", NULL, 0x12, "Lorg.joda.time.PeriodType;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatPeriodFormatter = { 2, "PeriodFormatter", "org.joda.time.format", NULL, 0x1, 19, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatPeriodFormatter;
}

@end

void OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(OrgJodaTimeFormatPeriodFormatter *self, id<OrgJodaTimeFormatPeriodPrinter> printer, id<OrgJodaTimeFormatPeriodParser> parser) {
  NSObject_init(self);
  JreStrongAssign(&self->iPrinter_, printer);
  JreStrongAssign(&self->iParser_, parser);
  JreStrongAssign(&self->iLocale_, nil);
  JreStrongAssign(&self->iParseType_, nil);
}

OrgJodaTimeFormatPeriodFormatter *new_OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(id<OrgJodaTimeFormatPeriodPrinter> printer, id<OrgJodaTimeFormatPeriodParser> parser) {
  OrgJodaTimeFormatPeriodFormatter *self = [OrgJodaTimeFormatPeriodFormatter alloc];
  OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(self, printer, parser);
  return self;
}

OrgJodaTimeFormatPeriodFormatter *create_OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(id<OrgJodaTimeFormatPeriodPrinter> printer, id<OrgJodaTimeFormatPeriodParser> parser) {
  OrgJodaTimeFormatPeriodFormatter *self = [[OrgJodaTimeFormatPeriodFormatter alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_(self, printer, parser);
  return self;
}

void OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withJavaUtilLocale_withOrgJodaTimePeriodType_(OrgJodaTimeFormatPeriodFormatter *self, id<OrgJodaTimeFormatPeriodPrinter> printer, id<OrgJodaTimeFormatPeriodParser> parser, JavaUtilLocale *locale, OrgJodaTimePeriodType *type) {
  NSObject_init(self);
  JreStrongAssign(&self->iPrinter_, printer);
  JreStrongAssign(&self->iParser_, parser);
  JreStrongAssign(&self->iLocale_, locale);
  JreStrongAssign(&self->iParseType_, type);
}

OrgJodaTimeFormatPeriodFormatter *new_OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withJavaUtilLocale_withOrgJodaTimePeriodType_(id<OrgJodaTimeFormatPeriodPrinter> printer, id<OrgJodaTimeFormatPeriodParser> parser, JavaUtilLocale *locale, OrgJodaTimePeriodType *type) {
  OrgJodaTimeFormatPeriodFormatter *self = [OrgJodaTimeFormatPeriodFormatter alloc];
  OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withJavaUtilLocale_withOrgJodaTimePeriodType_(self, printer, parser, locale, type);
  return self;
}

OrgJodaTimeFormatPeriodFormatter *create_OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withJavaUtilLocale_withOrgJodaTimePeriodType_(id<OrgJodaTimeFormatPeriodPrinter> printer, id<OrgJodaTimeFormatPeriodParser> parser, JavaUtilLocale *locale, OrgJodaTimePeriodType *type) {
  OrgJodaTimeFormatPeriodFormatter *self = [[OrgJodaTimeFormatPeriodFormatter alloc] autorelease];
  OrgJodaTimeFormatPeriodFormatter_initWithOrgJodaTimeFormatPeriodPrinter_withOrgJodaTimeFormatPeriodParser_withJavaUtilLocale_withOrgJodaTimePeriodType_(self, printer, parser, locale, type);
  return self;
}

void OrgJodaTimeFormatPeriodFormatter_checkPrinter(OrgJodaTimeFormatPeriodFormatter *self) {
  if (self->iPrinter_ == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Printing not supported");
  }
}

void OrgJodaTimeFormatPeriodFormatter_checkPeriodWithOrgJodaTimeReadablePeriod_(OrgJodaTimeFormatPeriodFormatter *self, id<OrgJodaTimeReadablePeriod> period) {
  if (period == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Period must not be null");
  }
}

void OrgJodaTimeFormatPeriodFormatter_checkParser(OrgJodaTimeFormatPeriodFormatter *self) {
  if (self->iParser_ == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Parsing not supported");
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatPeriodFormatter)
