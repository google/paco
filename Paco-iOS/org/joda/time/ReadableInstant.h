//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/ReadableInstant.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeReadableInstant_INCLUDE_ALL")
#ifdef OrgJodaTimeReadableInstant_RESTRICT
#define OrgJodaTimeReadableInstant_INCLUDE_ALL 0
#else
#define OrgJodaTimeReadableInstant_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeReadableInstant_RESTRICT

#if !defined (OrgJodaTimeReadableInstant_) && (OrgJodaTimeReadableInstant_INCLUDE_ALL || defined(OrgJodaTimeReadableInstant_INCLUDE))
#define OrgJodaTimeReadableInstant_

#define JavaLangComparable_RESTRICT 1
#define JavaLangComparable_INCLUDE 1
#include "java/lang/Comparable.h"

@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeInstant;

@protocol OrgJodaTimeReadableInstant < JavaLangComparable, NSObject, JavaObject >

- (jlong)getMillis;

- (OrgJodaTimeChronology *)getChronology;

- (OrgJodaTimeDateTimeZone *)getZone;

- (jint)getWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (jboolean)isSupportedWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)field;

- (OrgJodaTimeInstant *)toInstant;

- (jboolean)isEqualWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

- (jboolean)isAfterWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

- (jboolean)isBeforeWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

- (jboolean)isEqual:(id)readableInstant;

- (NSUInteger)hash;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeReadableInstant)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeReadableInstant)

#endif

#pragma pop_macro("OrgJodaTimeReadableInstant_INCLUDE_ALL")
