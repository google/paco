//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/Hours.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/joda/convert/FromString.h"
#include "org/joda/convert/ToString.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTime.h"
#include "org/joda/time/DateTimeConstants.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/Days.h"
#include "org/joda/time/Duration.h"
#include "org/joda/time/DurationField.h"
#include "org/joda/time/DurationFieldType.h"
#include "org/joda/time/Hours.h"
#include "org/joda/time/LocalTime.h"
#include "org/joda/time/Minutes.h"
#include "org/joda/time/Period.h"
#include "org/joda/time/PeriodType.h"
#include "org/joda/time/ReadableInstant.h"
#include "org/joda/time/ReadableInterval.h"
#include "org/joda/time/ReadablePartial.h"
#include "org/joda/time/ReadablePeriod.h"
#include "org/joda/time/Seconds.h"
#include "org/joda/time/Weeks.h"
#include "org/joda/time/base/BaseSingleFieldPeriod.h"
#include "org/joda/time/field/FieldUtils.h"
#include "org/joda/time/format/ISOPeriodFormat.h"
#include "org/joda/time/format/PeriodFormatter.h"

@interface OrgJodaTimeHours ()

- (instancetype)initWithInt:(jint)hours;

- (id)readResolve;

@end

inline OrgJodaTimeFormatPeriodFormatter *OrgJodaTimeHours_get_PARSER();
static OrgJodaTimeFormatPeriodFormatter *OrgJodaTimeHours_PARSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeHours, PARSER, OrgJodaTimeFormatPeriodFormatter *)

inline jlong OrgJodaTimeHours_get_serialVersionUID();
#define OrgJodaTimeHours_serialVersionUID 87525275727380864LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeHours, serialVersionUID, jlong)

__attribute__((unused)) static void OrgJodaTimeHours_initWithInt_(OrgJodaTimeHours *self, jint hours);

__attribute__((unused)) static OrgJodaTimeHours *new_OrgJodaTimeHours_initWithInt_(jint hours) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeHours *create_OrgJodaTimeHours_initWithInt_(jint hours);

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeHours)

OrgJodaTimeHours *OrgJodaTimeHours_ZERO;
OrgJodaTimeHours *OrgJodaTimeHours_ONE;
OrgJodaTimeHours *OrgJodaTimeHours_TWO;
OrgJodaTimeHours *OrgJodaTimeHours_THREE;
OrgJodaTimeHours *OrgJodaTimeHours_FOUR;
OrgJodaTimeHours *OrgJodaTimeHours_FIVE;
OrgJodaTimeHours *OrgJodaTimeHours_SIX;
OrgJodaTimeHours *OrgJodaTimeHours_SEVEN;
OrgJodaTimeHours *OrgJodaTimeHours_EIGHT;
OrgJodaTimeHours *OrgJodaTimeHours_MAX_VALUE;
OrgJodaTimeHours *OrgJodaTimeHours_MIN_VALUE;

@implementation OrgJodaTimeHours

+ (OrgJodaTimeHours *)hoursWithInt:(jint)hours {
  return OrgJodaTimeHours_hoursWithInt_(hours);
}

+ (OrgJodaTimeHours *)hoursBetweenWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                                  withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  return OrgJodaTimeHours_hoursBetweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(start, end);
}

+ (OrgJodaTimeHours *)hoursBetweenWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)start
                                  withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)end {
  return OrgJodaTimeHours_hoursBetweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_(start, end);
}

+ (OrgJodaTimeHours *)hoursInWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  return OrgJodaTimeHours_hoursInWithOrgJodaTimeReadableInterval_(interval);
}

+ (OrgJodaTimeHours *)standardHoursInWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  return OrgJodaTimeHours_standardHoursInWithOrgJodaTimeReadablePeriod_(period);
}

+ (OrgJodaTimeHours *)parseHoursWithNSString:(NSString *)periodStr {
  return OrgJodaTimeHours_parseHoursWithNSString_(periodStr);
}

- (instancetype)initWithInt:(jint)hours {
  OrgJodaTimeHours_initWithInt_(self, hours);
  return self;
}

- (id)readResolve {
  return OrgJodaTimeHours_hoursWithInt_([self getValue]);
}

- (OrgJodaTimeDurationFieldType *)getFieldType {
  return OrgJodaTimeDurationFieldType_hours();
}

- (OrgJodaTimePeriodType *)getPeriodType {
  return OrgJodaTimePeriodType_hours();
}

- (OrgJodaTimeWeeks *)toStandardWeeks {
  return OrgJodaTimeWeeks_weeksWithInt_([self getValue] / OrgJodaTimeDateTimeConstants_HOURS_PER_WEEK);
}

- (OrgJodaTimeDays *)toStandardDays {
  return OrgJodaTimeDays_daysWithInt_([self getValue] / OrgJodaTimeDateTimeConstants_HOURS_PER_DAY);
}

- (OrgJodaTimeMinutes *)toStandardMinutes {
  return OrgJodaTimeMinutes_minutesWithInt_(OrgJodaTimeFieldFieldUtils_safeMultiplyWithInt_withInt_([self getValue], OrgJodaTimeDateTimeConstants_MINUTES_PER_HOUR));
}

- (OrgJodaTimeSeconds *)toStandardSeconds {
  return OrgJodaTimeSeconds_secondsWithInt_(OrgJodaTimeFieldFieldUtils_safeMultiplyWithInt_withInt_([self getValue], OrgJodaTimeDateTimeConstants_SECONDS_PER_HOUR));
}

- (OrgJodaTimeDuration *)toStandardDuration {
  jlong hours = [self getValue];
  return create_OrgJodaTimeDuration_initWithLong_(hours * OrgJodaTimeDateTimeConstants_MILLIS_PER_HOUR);
}

- (jint)getHours {
  return [self getValue];
}

- (OrgJodaTimeHours *)plusWithInt:(jint)hours {
  if (hours == 0) {
    return self;
  }
  return OrgJodaTimeHours_hoursWithInt_(OrgJodaTimeFieldFieldUtils_safeAddWithInt_withInt_([self getValue], hours));
}

- (OrgJodaTimeHours *)plusWithOrgJodaTimeHours:(OrgJodaTimeHours *)hours {
  if (hours == nil) {
    return self;
  }
  return [self plusWithInt:[((OrgJodaTimeHours *) nil_chk(hours)) getValue]];
}

- (OrgJodaTimeHours *)minusWithInt:(jint)hours {
  return [self plusWithInt:OrgJodaTimeFieldFieldUtils_safeNegateWithInt_(hours)];
}

- (OrgJodaTimeHours *)minusWithOrgJodaTimeHours:(OrgJodaTimeHours *)hours {
  if (hours == nil) {
    return self;
  }
  return [self minusWithInt:[((OrgJodaTimeHours *) nil_chk(hours)) getValue]];
}

- (OrgJodaTimeHours *)multipliedByWithInt:(jint)scalar {
  return OrgJodaTimeHours_hoursWithInt_(OrgJodaTimeFieldFieldUtils_safeMultiplyWithInt_withInt_([self getValue], scalar));
}

- (OrgJodaTimeHours *)dividedByWithInt:(jint)divisor {
  if (divisor == 1) {
    return self;
  }
  return OrgJodaTimeHours_hoursWithInt_([self getValue] / divisor);
}

- (OrgJodaTimeHours *)negated {
  return OrgJodaTimeHours_hoursWithInt_(OrgJodaTimeFieldFieldUtils_safeNegateWithInt_([self getValue]));
}

- (jboolean)isGreaterThanWithOrgJodaTimeHours:(OrgJodaTimeHours *)other {
  if (other == nil) {
    return [self getValue] > 0;
  }
  return [self getValue] > [((OrgJodaTimeHours *) nil_chk(other)) getValue];
}

- (jboolean)isLessThanWithOrgJodaTimeHours:(OrgJodaTimeHours *)other {
  if (other == nil) {
    return [self getValue] < 0;
  }
  return [self getValue] < [((OrgJodaTimeHours *) nil_chk(other)) getValue];
}

- (NSString *)description {
  return JreStrcat("$$C", @"PT", NSString_valueOfInt_([self getValue]), 'H');
}

+ (void)initialize {
  if (self == [OrgJodaTimeHours class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeHours_ZERO, new_OrgJodaTimeHours_initWithInt_(0));
    JreStrongAssignAndConsume(&OrgJodaTimeHours_ONE, new_OrgJodaTimeHours_initWithInt_(1));
    JreStrongAssignAndConsume(&OrgJodaTimeHours_TWO, new_OrgJodaTimeHours_initWithInt_(2));
    JreStrongAssignAndConsume(&OrgJodaTimeHours_THREE, new_OrgJodaTimeHours_initWithInt_(3));
    JreStrongAssignAndConsume(&OrgJodaTimeHours_FOUR, new_OrgJodaTimeHours_initWithInt_(4));
    JreStrongAssignAndConsume(&OrgJodaTimeHours_FIVE, new_OrgJodaTimeHours_initWithInt_(5));
    JreStrongAssignAndConsume(&OrgJodaTimeHours_SIX, new_OrgJodaTimeHours_initWithInt_(6));
    JreStrongAssignAndConsume(&OrgJodaTimeHours_SEVEN, new_OrgJodaTimeHours_initWithInt_(7));
    JreStrongAssignAndConsume(&OrgJodaTimeHours_EIGHT, new_OrgJodaTimeHours_initWithInt_(8));
    JreStrongAssignAndConsume(&OrgJodaTimeHours_MAX_VALUE, new_OrgJodaTimeHours_initWithInt_(JavaLangInteger_MAX_VALUE));
    JreStrongAssignAndConsume(&OrgJodaTimeHours_MIN_VALUE, new_OrgJodaTimeHours_initWithInt_(JavaLangInteger_MIN_VALUE));
    JreStrongAssign(&OrgJodaTimeHours_PARSER, [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeFormatISOPeriodFormat_standard())) withParseTypeWithOrgJodaTimePeriodType:OrgJodaTimePeriodType_hours()]);
    J2OBJC_SET_INITIALIZED(OrgJodaTimeHours)
  }
}

+ (IOSObjectArray *)__annotations_parseHoursWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertFromString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_toString {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertToString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hoursWithInt:", "hours", "Lorg.joda.time.Hours;", 0x9, NULL, NULL },
    { "hoursBetweenWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "hoursBetween", "Lorg.joda.time.Hours;", 0x9, NULL, NULL },
    { "hoursBetweenWithOrgJodaTimeReadablePartial:withOrgJodaTimeReadablePartial:", "hoursBetween", "Lorg.joda.time.Hours;", 0x9, NULL, NULL },
    { "hoursInWithOrgJodaTimeReadableInterval:", "hoursIn", "Lorg.joda.time.Hours;", 0x9, NULL, NULL },
    { "standardHoursInWithOrgJodaTimeReadablePeriod:", "standardHoursIn", "Lorg.joda.time.Hours;", 0x9, NULL, NULL },
    { "parseHoursWithNSString:", "parseHours", "Lorg.joda.time.Hours;", 0x9, NULL, NULL },
    { "initWithInt:", "Hours", NULL, 0x2, NULL, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL, NULL },
    { "getFieldType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL, NULL },
    { "getPeriodType", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL, NULL },
    { "toStandardWeeks", NULL, "Lorg.joda.time.Weeks;", 0x1, NULL, NULL },
    { "toStandardDays", NULL, "Lorg.joda.time.Days;", 0x1, NULL, NULL },
    { "toStandardMinutes", NULL, "Lorg.joda.time.Minutes;", 0x1, NULL, NULL },
    { "toStandardSeconds", NULL, "Lorg.joda.time.Seconds;", 0x1, NULL, NULL },
    { "toStandardDuration", NULL, "Lorg.joda.time.Duration;", 0x1, NULL, NULL },
    { "getHours", NULL, "I", 0x1, NULL, NULL },
    { "plusWithInt:", "plus", "Lorg.joda.time.Hours;", 0x1, NULL, NULL },
    { "plusWithOrgJodaTimeHours:", "plus", "Lorg.joda.time.Hours;", 0x1, NULL, NULL },
    { "minusWithInt:", "minus", "Lorg.joda.time.Hours;", 0x1, NULL, NULL },
    { "minusWithOrgJodaTimeHours:", "minus", "Lorg.joda.time.Hours;", 0x1, NULL, NULL },
    { "multipliedByWithInt:", "multipliedBy", "Lorg.joda.time.Hours;", 0x1, NULL, NULL },
    { "dividedByWithInt:", "dividedBy", "Lorg.joda.time.Hours;", 0x1, NULL, NULL },
    { "negated", NULL, "Lorg.joda.time.Hours;", 0x1, NULL, NULL },
    { "isGreaterThanWithOrgJodaTimeHours:", "isGreaterThan", "Z", 0x1, NULL, NULL },
    { "isLessThanWithOrgJodaTimeHours:", "isLessThan", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "ZERO", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_ZERO, NULL, .constantValue.asLong = 0 },
    { "ONE", "ONE", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_ONE, NULL, .constantValue.asLong = 0 },
    { "TWO", "TWO", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_TWO, NULL, .constantValue.asLong = 0 },
    { "THREE", "THREE", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_THREE, NULL, .constantValue.asLong = 0 },
    { "FOUR", "FOUR", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_FOUR, NULL, .constantValue.asLong = 0 },
    { "FIVE", "FIVE", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_FIVE, NULL, .constantValue.asLong = 0 },
    { "SIX", "SIX", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_SIX, NULL, .constantValue.asLong = 0 },
    { "SEVEN", "SEVEN", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_SEVEN, NULL, .constantValue.asLong = 0 },
    { "EIGHT", "EIGHT", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_EIGHT, NULL, .constantValue.asLong = 0 },
    { "MAX_VALUE", "MAX_VALUE", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_MAX_VALUE, NULL, .constantValue.asLong = 0 },
    { "MIN_VALUE", "MIN_VALUE", 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_MIN_VALUE, NULL, .constantValue.asLong = 0 },
    { "PARSER", "PARSER", 0x1a, "Lorg.joda.time.format.PeriodFormatter;", &OrgJodaTimeHours_PARSER, NULL, .constantValue.asLong = 0 },
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeHours_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgJodaTimeHours = { 2, "Hours", "org.joda.time", NULL, 0x11, 26, methods, 13, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeHours;
}

@end

OrgJodaTimeHours *OrgJodaTimeHours_hoursWithInt_(jint hours) {
  OrgJodaTimeHours_initialize();
  switch (hours) {
    case 0:
    return OrgJodaTimeHours_ZERO;
    case 1:
    return OrgJodaTimeHours_ONE;
    case 2:
    return OrgJodaTimeHours_TWO;
    case 3:
    return OrgJodaTimeHours_THREE;
    case 4:
    return OrgJodaTimeHours_FOUR;
    case 5:
    return OrgJodaTimeHours_FIVE;
    case 6:
    return OrgJodaTimeHours_SIX;
    case 7:
    return OrgJodaTimeHours_SEVEN;
    case 8:
    return OrgJodaTimeHours_EIGHT;
    case JavaLangInteger_MAX_VALUE:
    return OrgJodaTimeHours_MAX_VALUE;
    case JavaLangInteger_MIN_VALUE:
    return OrgJodaTimeHours_MIN_VALUE;
    default:
    return create_OrgJodaTimeHours_initWithInt_(hours);
  }
}

OrgJodaTimeHours *OrgJodaTimeHours_hoursBetweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeHours_initialize();
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_withOrgJodaTimeDurationFieldType_(start, end, OrgJodaTimeDurationFieldType_hours());
  return OrgJodaTimeHours_hoursWithInt_(amount);
}

OrgJodaTimeHours *OrgJodaTimeHours_hoursBetweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_(id<OrgJodaTimeReadablePartial> start, id<OrgJodaTimeReadablePartial> end) {
  OrgJodaTimeHours_initialize();
  if ([start isKindOfClass:[OrgJodaTimeLocalTime class]] && [end isKindOfClass:[OrgJodaTimeLocalTime class]]) {
    OrgJodaTimeChronology *chrono = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_([((id<OrgJodaTimeReadablePartial>) nil_chk(start)) getChronology]);
    jint hours = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk(chrono)) hours])) getDifferenceWithLong:[((OrgJodaTimeLocalTime *) nil_chk(((OrgJodaTimeLocalTime *) cast_chk(end, [OrgJodaTimeLocalTime class])))) getLocalMillis] withLong:[((OrgJodaTimeLocalTime *) cast_chk(start, [OrgJodaTimeLocalTime class])) getLocalMillis]];
    return OrgJodaTimeHours_hoursWithInt_(hours);
  }
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePeriod_(start, end, OrgJodaTimeHours_ZERO);
  return OrgJodaTimeHours_hoursWithInt_(amount);
}

OrgJodaTimeHours *OrgJodaTimeHours_hoursInWithOrgJodaTimeReadableInterval_(id<OrgJodaTimeReadableInterval> interval) {
  OrgJodaTimeHours_initialize();
  if (interval == nil) {
    return OrgJodaTimeHours_ZERO;
  }
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_withOrgJodaTimeDurationFieldType_([((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStart], [interval getEnd], OrgJodaTimeDurationFieldType_hours());
  return OrgJodaTimeHours_hoursWithInt_(amount);
}

OrgJodaTimeHours *OrgJodaTimeHours_standardHoursInWithOrgJodaTimeReadablePeriod_(id<OrgJodaTimeReadablePeriod> period) {
  OrgJodaTimeHours_initialize();
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_standardPeriodInWithOrgJodaTimeReadablePeriod_withLong_(period, OrgJodaTimeDateTimeConstants_MILLIS_PER_HOUR);
  return OrgJodaTimeHours_hoursWithInt_(amount);
}

OrgJodaTimeHours *OrgJodaTimeHours_parseHoursWithNSString_(NSString *periodStr) {
  OrgJodaTimeHours_initialize();
  if (periodStr == nil) {
    return OrgJodaTimeHours_ZERO;
  }
  OrgJodaTimePeriod *p = [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeHours_PARSER)) parsePeriodWithNSString:periodStr];
  return OrgJodaTimeHours_hoursWithInt_([((OrgJodaTimePeriod *) nil_chk(p)) getHours]);
}

void OrgJodaTimeHours_initWithInt_(OrgJodaTimeHours *self, jint hours) {
  OrgJodaTimeBaseBaseSingleFieldPeriod_initWithInt_(self, hours);
}

OrgJodaTimeHours *new_OrgJodaTimeHours_initWithInt_(jint hours) {
  OrgJodaTimeHours *self = [OrgJodaTimeHours alloc];
  OrgJodaTimeHours_initWithInt_(self, hours);
  return self;
}

OrgJodaTimeHours *create_OrgJodaTimeHours_initWithInt_(jint hours) {
  OrgJodaTimeHours *self = [[OrgJodaTimeHours alloc] autorelease];
  OrgJodaTimeHours_initWithInt_(self, hours);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeHours)
