//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/northropo/Projects/paco/Shared/src/com/pacoapp/paco/shared/model2/Feedback.java
//

#include "Feedback.h"
#include "J2ObjC_source.h"
#include "ModelBase.h"
#include "Validator.h"
#include "java/lang/Integer.h"

@interface PAFeedback () {
 @public
  NSString *text_;
  JavaLangInteger *type_;
}

@end

J2OBJC_FIELD_SETTER(PAFeedback, text_, NSString *)
J2OBJC_FIELD_SETTER(PAFeedback, type_, JavaLangInteger *)

NSString *PAFeedback_DEFAULT_FEEDBACK_MSG = @"Thanks for Participating!";

@implementation PAFeedback

- (instancetype)initWithNSString:(NSString *)text {
  PAFeedback_initWithNSString_(self, text);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  PAFeedback_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getText {
  return text_;
}

- (void)setTextWithNSString:(NSString *)text {
  self->text_ = text;
}

- (void)validateWithWithPAValidator:(id<PAValidator>)validator {
  [((id<PAValidator>) nil_chk(validator)) isNotNullWithId:type_ withNSString:@"feedback type should be set"];
  if ([self getType] != nil && ![((JavaLangInteger *) nil_chk([self getType])) isEqual:JavaLangInteger_valueOfWithInt_(PAFeedback_FEEDBACK_TYPE_RETROSPECTIVE)] && ![((JavaLangInteger *) nil_chk([self getType])) isEqual:JavaLangInteger_valueOfWithInt_(PAFeedback_FEEDBACK_TYPE_HIDE_FEEDBACK)]) {
    if (text_ != nil && ((jint) [text_ length]) > 0) {
      [validator isValidHtmlOrJavascriptWithNSString:text_ withNSString:@"text should be valid html or javascript"];
    }
  }
}

- (JavaLangInteger *)getType {
  return type_;
}

- (void)setTypeWithJavaLangInteger:(JavaLangInteger *)type {
  self->type_ = type;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "Feedback", NULL, 0x1, NULL, NULL },
    { "init", "Feedback", NULL, 0x1, NULL, NULL },
    { "getText", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setTextWithNSString:", "setText", "V", 0x1, NULL, NULL },
    { "validateWithWithPAValidator:", "validateWith", "V", 0x1, NULL, NULL },
    { "getType", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setTypeWithJavaLangInteger:", "setType", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FEEDBACK_TYPE_STATIC_MESSAGE", "FEEDBACK_TYPE_STATIC_MESSAGE", 0x19, "I", NULL, NULL, .constantValue.asInt = PAFeedback_FEEDBACK_TYPE_STATIC_MESSAGE },
    { "FEEDBACK_TYPE_RETROSPECTIVE", "FEEDBACK_TYPE_RETROSPECTIVE", 0x19, "I", NULL, NULL, .constantValue.asInt = PAFeedback_FEEDBACK_TYPE_RETROSPECTIVE },
    { "FEEDBACK_TYPE_RESPONSIVE", "FEEDBACK_TYPE_RESPONSIVE", 0x19, "I", NULL, NULL, .constantValue.asInt = PAFeedback_FEEDBACK_TYPE_RESPONSIVE },
    { "FEEDBACK_TYPE_CUSTOM", "FEEDBACK_TYPE_CUSTOM", 0x19, "I", NULL, NULL, .constantValue.asInt = PAFeedback_FEEDBACK_TYPE_CUSTOM },
    { "FEEDBACK_TYPE_HIDE_FEEDBACK", "FEEDBACK_TYPE_HIDE_FEEDBACK", 0x19, "I", NULL, NULL, .constantValue.asInt = PAFeedback_FEEDBACK_TYPE_HIDE_FEEDBACK },
    { "DEFAULT_FEEDBACK_MSG", "DEFAULT_FEEDBACK_MSG", 0x19, "Ljava.lang.String;", &PAFeedback_DEFAULT_FEEDBACK_MSG, NULL, .constantValue.asLong = 0 },
    { "text_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "type_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _PAFeedback = { 2, "Feedback", "com.pacoapp.paco.shared.model2", NULL, 0x1, 7, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_PAFeedback;
}

@end

void PAFeedback_initWithNSString_(PAFeedback *self, NSString *text) {
  PAModelBase_init(self);
  self->type_ = JavaLangInteger_valueOfWithInt_(PAFeedback_FEEDBACK_TYPE_STATIC_MESSAGE);
  self->text_ = text;
}

PAFeedback *new_PAFeedback_initWithNSString_(NSString *text) {
  PAFeedback *self = [PAFeedback alloc];
  PAFeedback_initWithNSString_(self, text);
  return self;
}

PAFeedback *create_PAFeedback_initWithNSString_(NSString *text) {
  return new_PAFeedback_initWithNSString_(text);
}

void PAFeedback_init(PAFeedback *self) {
  PAModelBase_init(self);
  self->type_ = JavaLangInteger_valueOfWithInt_(PAFeedback_FEEDBACK_TYPE_STATIC_MESSAGE);
  self->text_ = PAFeedback_DEFAULT_FEEDBACK_MSG;
}

PAFeedback *new_PAFeedback_init() {
  PAFeedback *self = [PAFeedback alloc];
  PAFeedback_init(self);
  return self;
}

PAFeedback *create_PAFeedback_init() {
  return new_PAFeedback_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PAFeedback)
