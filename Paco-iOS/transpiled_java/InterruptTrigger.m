//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/northropo/Projects/paco/Shared/src/com/pacoapp/paco/shared/model2/InterruptTrigger.java
//

#include "ActionTrigger.h"
#include "InterruptCue.h"
#include "InterruptTrigger.h"
#include "J2ObjC_source.h"
#include "MinimumBufferable.h"
#include "PacoAction.h"
#include "PacoNotificationAction.h"
#include "Validator.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface PAInterruptTrigger () {
 @public
  id<JavaUtilList> cues_;
}

@end

J2OBJC_FIELD_SETTER(PAInterruptTrigger, cues_, id<JavaUtilList>)

@implementation PAInterruptTrigger

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  PAInterruptTrigger_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilList>)getCues {
  return cues_;
}

- (void)setCuesWithJavaUtilList:(id<JavaUtilList>)cues {
  self->cues_ = cues;
}

- (JavaLangInteger *)getMinimumBuffer {
  return minimumBuffer_;
}

- (void)setMinimumBufferWithJavaLangInteger:(JavaLangInteger *)minimumBuffer {
  self->minimumBuffer_ = minimumBuffer;
}

- (JavaLangInteger *)getDefaultMinimumBuffer {
  jint longestMinimum = 0;
  for (PAPacoAction * __strong action in nil_chk(actions_)) {
    if ([action isKindOfClass:[PAPacoNotificationAction class]]) {
      longestMinimum = JavaLangMath_maxWithInt_withInt_(longestMinimum, [((JavaLangInteger *) nil_chk([((PAPacoNotificationAction *) nil_chk(((PAPacoNotificationAction *) cast_chk(action, [PAPacoNotificationAction class])))) getTimeout])) intValue]);
    }
  }
  if (longestMinimum == 0) {
    return JreLoadStatic(PAMinimumBufferable, DEFAULT_MIN_BUFFER);
  }
  else {
    return JavaLangInteger_valueOfWithInt_(longestMinimum);
  }
}

- (void)validateWithWithPAValidator:(id<PAValidator>)validator {
  [super validateWithWithPAValidator:validator];
  [((id<PAValidator>) nil_chk(validator)) isNotNullWithId:minimumBuffer_ withNSString:@"minimumBuffer is not properly initialized"];
  [validator isNotNullAndNonEmptyCollectionWithJavaUtilCollection:cues_ withNSString:@"InterruptTrigger needs at least one cue"];
  for (PAInterruptCue * __strong cue in nil_chk(cues_)) {
    [((PAInterruptCue *) nil_chk(cue)) validateWithWithPAValidator:validator];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "InterruptTrigger", NULL, 0x1, NULL, NULL },
    { "getCues", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lcom/pacoapp/paco/shared/model2/InterruptCue;>;" },
    { "setCuesWithJavaUtilList:", "setCues", "V", 0x1, NULL, "(Ljava/util/List<Lcom/pacoapp/paco/shared/model2/InterruptCue;>;)V" },
    { "getMinimumBuffer", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setMinimumBufferWithJavaLangInteger:", "setMinimumBuffer", "V", 0x1, NULL, NULL },
    { "getDefaultMinimumBuffer", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "validateWithWithPAValidator:", "validateWith", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cues_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/pacoapp/paco/shared/model2/InterruptCue;>;", .constantValue.asLong = 0 },
    { "minimumBuffer_", NULL, 0x4, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _PAInterruptTrigger = { 2, "InterruptTrigger", "com.pacoapp.paco.shared.model2", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_PAInterruptTrigger;
}

@end

void PAInterruptTrigger_init(PAInterruptTrigger *self) {
  PAActionTrigger_init(self);
  self->minimumBuffer_ = JavaLangInteger_valueOfWithInt_(0);
  self->type_ = PAActionTrigger_INTERRUPT_TRIGGER_TYPE_SPECIFIER;
  self->cues_ = new_JavaUtilArrayList_init();
}

PAInterruptTrigger *new_PAInterruptTrigger_init() {
  PAInterruptTrigger *self = [PAInterruptTrigger alloc];
  PAInterruptTrigger_init(self);
  return self;
}

PAInterruptTrigger *create_PAInterruptTrigger_init() {
  return new_PAInterruptTrigger_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PAInterruptTrigger)
