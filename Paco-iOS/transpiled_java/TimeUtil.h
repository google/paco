//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/northropo/Projects/paco/Shared/src/com/pacoapp/paco/shared/util/TimeUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("TimeUtil_INCLUDE_ALL")
#ifdef TimeUtil_RESTRICT
#define TimeUtil_INCLUDE_ALL 0
#else
#define TimeUtil_INCLUDE_ALL 1
#endif
#undef TimeUtil_RESTRICT

#if !defined (PATimeUtil_) && (TimeUtil_INCLUDE_ALL || defined(PATimeUtil_INCLUDE))
#define PATimeUtil_

@class OrgJodaTimeDateMidnight;
@class OrgJodaTimeDateTime;
@class OrgJodaTimeFormatDateTimeFormatter;

@interface PATimeUtil : NSObject

#pragma mark Public

+ (NSString *)formatDateWithLong:(jlong)dateTimeMillis;

+ (NSString *)formatDateLongWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)dateTime;

+ (NSString *)formatDateTimeWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)dateTime;

+ (NSString *)formatDateTimeWithLong:(jlong)dateTimeMillis;

+ (NSString *)formatDateTimeShortNoZoneWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)dateTime;

+ (NSString *)formatDateWithZoneWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)dateTime;

+ (NSString *)formatDateWithZoneWithLong:(jlong)dateTimeMillis;

+ (NSString *)formatTimeWithLong:(jlong)dateTimeMillis;

+ (OrgJodaTimeDateMidnight *)getMondayOfWeekWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)now;

+ (jboolean)isWeekendWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)dateTime;

+ (jboolean)isWeekendWithInt:(jint)dayOfWeek;

+ (OrgJodaTimeDateTime *)parseDateTimeWithNSString:(NSString *)dateTimeStr;

+ (OrgJodaTimeDateTime *)parseDateWithZoneWithNSString:(NSString *)dateTimeStr;

+ (OrgJodaTimeDateTime *)skipWeekendsWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)plusDays;

+ (OrgJodaTimeDateTime *)unformatDateWithNSString:(NSString *)dateStr;

+ (OrgJodaTimeDateTime *)unformatDateWithZoneWithNSString:(NSString *)dateStr;

@end

J2OBJC_STATIC_INIT(PATimeUtil)

inline NSString *PATimeUtil_get_DATETIME_FORMAT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *PATimeUtil_DATETIME_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PATimeUtil, DATETIME_FORMAT, NSString *)

inline NSString *PATimeUtil_get_DATE_LONG_FORMAT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *PATimeUtil_DATE_LONG_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PATimeUtil, DATE_LONG_FORMAT, NSString *)

inline NSString *PATimeUtil_get_DATETIME_NOZONE_FORMAT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *PATimeUtil_DATETIME_NOZONE_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PATimeUtil, DATETIME_NOZONE_FORMAT, NSString *)

inline OrgJodaTimeFormatDateTimeFormatter *PATimeUtil_get_dateTimeNoZoneFormatter();
inline OrgJodaTimeFormatDateTimeFormatter *PATimeUtil_set_dateTimeNoZoneFormatter(OrgJodaTimeFormatDateTimeFormatter *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *PATimeUtil_dateTimeNoZoneFormatter;
J2OBJC_STATIC_FIELD_OBJ(PATimeUtil, dateTimeNoZoneFormatter, OrgJodaTimeFormatDateTimeFormatter *)

inline NSString *PATimeUtil_get_DATETIME_NOZONE_SHORT_FORMAT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *PATimeUtil_DATETIME_NOZONE_SHORT_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PATimeUtil, DATETIME_NOZONE_SHORT_FORMAT, NSString *)

inline OrgJodaTimeFormatDateTimeFormatter *PATimeUtil_get_dateTimeNoZoneShortFormatter();
inline OrgJodaTimeFormatDateTimeFormatter *PATimeUtil_set_dateTimeNoZoneShortFormatter(OrgJodaTimeFormatDateTimeFormatter *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *PATimeUtil_dateTimeNoZoneShortFormatter;
J2OBJC_STATIC_FIELD_OBJ(PATimeUtil, dateTimeNoZoneShortFormatter, OrgJodaTimeFormatDateTimeFormatter *)

inline NSString *PATimeUtil_get_DATE_FORMAT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *PATimeUtil_DATE_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PATimeUtil, DATE_FORMAT, NSString *)

inline NSString *PATimeUtil_get_DATE_WITH_ZONE_FORMAT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *PATimeUtil_DATE_WITH_ZONE_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PATimeUtil, DATE_WITH_ZONE_FORMAT, NSString *)

inline OrgJodaTimeFormatDateTimeFormatter *PATimeUtil_get_hourFormatter();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *PATimeUtil_hourFormatter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PATimeUtil, hourFormatter, OrgJodaTimeFormatDateTimeFormatter *)

FOUNDATION_EXPORT NSString *PATimeUtil_formatTimeWithLong_(jlong dateTimeMillis);

FOUNDATION_EXPORT NSString *PATimeUtil_formatDateTimeWithLong_(jlong dateTimeMillis);

FOUNDATION_EXPORT NSString *PATimeUtil_formatDateTimeWithOrgJodaTimeDateTime_(OrgJodaTimeDateTime *dateTime);

FOUNDATION_EXPORT NSString *PATimeUtil_formatDateLongWithOrgJodaTimeDateTime_(OrgJodaTimeDateTime *dateTime);

FOUNDATION_EXPORT NSString *PATimeUtil_formatDateTimeShortNoZoneWithOrgJodaTimeDateTime_(OrgJodaTimeDateTime *dateTime);

FOUNDATION_EXPORT OrgJodaTimeDateTime *PATimeUtil_parseDateTimeWithNSString_(NSString *dateTimeStr);

FOUNDATION_EXPORT OrgJodaTimeDateTime *PATimeUtil_parseDateWithZoneWithNSString_(NSString *dateTimeStr);

FOUNDATION_EXPORT NSString *PATimeUtil_formatDateWithLong_(jlong dateTimeMillis);

FOUNDATION_EXPORT OrgJodaTimeDateTime *PATimeUtil_unformatDateWithNSString_(NSString *dateStr);

FOUNDATION_EXPORT NSString *PATimeUtil_formatDateWithZoneWithOrgJodaTimeDateTime_(OrgJodaTimeDateTime *dateTime);

FOUNDATION_EXPORT NSString *PATimeUtil_formatDateWithZoneWithLong_(jlong dateTimeMillis);

FOUNDATION_EXPORT OrgJodaTimeDateTime *PATimeUtil_unformatDateWithZoneWithNSString_(NSString *dateStr);

FOUNDATION_EXPORT OrgJodaTimeDateMidnight *PATimeUtil_getMondayOfWeekWithOrgJodaTimeDateTime_(OrgJodaTimeDateTime *now);

FOUNDATION_EXPORT jboolean PATimeUtil_isWeekendWithInt_(jint dayOfWeek);

FOUNDATION_EXPORT jboolean PATimeUtil_isWeekendWithOrgJodaTimeDateTime_(OrgJodaTimeDateTime *dateTime);

FOUNDATION_EXPORT OrgJodaTimeDateTime *PATimeUtil_skipWeekendsWithOrgJodaTimeDateTime_(OrgJodaTimeDateTime *plusDays);

J2OBJC_TYPE_LITERAL_HEADER(PATimeUtil)

@compatibility_alias ComPacoappPacoSharedUtilTimeUtil PATimeUtil;

#endif

#pragma pop_macro("TimeUtil_INCLUDE_ALL")
