//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/northropo/Projects/paco/Shared/src/com/pacoapp/paco/shared/model2/ScheduleTrigger.java
//

#include "ActionTrigger.h"
#include "J2ObjC_source.h"
#include "Schedule.h"
#include "ScheduleTrigger.h"
#include "Validator.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface PAScheduleTrigger () {
 @public
  id<JavaUtilList> schedules_;
}

@end

J2OBJC_FIELD_SETTER(PAScheduleTrigger, schedules_, id<JavaUtilList>)

@implementation PAScheduleTrigger

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  PAScheduleTrigger_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)schedules {
  PAScheduleTrigger_initWithJavaUtilList_(self, schedules);
  return self;
}

- (id<JavaUtilList>)getSchedules {
  return schedules_;
}

- (void)setSchedulesWithJavaUtilList:(id<JavaUtilList>)schedules {
  self->schedules_ = schedules;
}

- (void)validateWithWithPAValidator:(id<PAValidator>)validator {
  [super validateWithWithPAValidator:validator];
  [((id<PAValidator>) nil_chk(validator)) isNotNullAndNonEmptyCollectionWithJavaUtilCollection:schedules_ withNSString:@"ScheduleTrigger needs at least one schedule"];
  for (PASchedule * __strong schedule in nil_chk(schedules_)) {
    [((PASchedule *) nil_chk(schedule)) validateWithWithPAValidator:validator];
  }
}

- (PASchedule *)getSchedulesByIdWithJavaLangLong:(JavaLangLong *)scheduleId {
  for (PASchedule * __strong schedule in nil_chk(schedules_)) {
    if ([((JavaLangLong *) nil_chk([((PASchedule *) nil_chk(schedule)) getId])) isEqual:scheduleId]) {
      return schedule;
    }
  }
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ScheduleTrigger", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilList:", "ScheduleTrigger", NULL, 0x1, NULL, "(Ljava/util/List<Lcom/pacoapp/paco/shared/model2/Schedule;>;)V" },
    { "getSchedules", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lcom/pacoapp/paco/shared/model2/Schedule;>;" },
    { "setSchedulesWithJavaUtilList:", "setSchedules", "V", 0x1, NULL, "(Ljava/util/List<Lcom/pacoapp/paco/shared/model2/Schedule;>;)V" },
    { "validateWithWithPAValidator:", "validateWith", "V", 0x1, NULL, NULL },
    { "getSchedulesByIdWithJavaLangLong:", "getSchedulesById", "Lcom.pacoapp.paco.shared.model2.Schedule;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "schedules_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/pacoapp/paco/shared/model2/Schedule;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _PAScheduleTrigger = { 2, "ScheduleTrigger", "com.pacoapp.paco.shared.model2", NULL, 0x1, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_PAScheduleTrigger;
}

@end

void PAScheduleTrigger_init(PAScheduleTrigger *self) {
  PAActionTrigger_init(self);
  self->type_ = PAActionTrigger_SCHEDULE_TRIGGER_TYPE_SPECIFIER;
  self->schedules_ = new_JavaUtilArrayList_init();
}

PAScheduleTrigger *new_PAScheduleTrigger_init() {
  PAScheduleTrigger *self = [PAScheduleTrigger alloc];
  PAScheduleTrigger_init(self);
  return self;
}

PAScheduleTrigger *create_PAScheduleTrigger_init() {
  return new_PAScheduleTrigger_init();
}

void PAScheduleTrigger_initWithJavaUtilList_(PAScheduleTrigger *self, id<JavaUtilList> schedules) {
  PAActionTrigger_init(self);
  self->type_ = PAActionTrigger_SCHEDULE_TRIGGER_TYPE_SPECIFIER;
  if (schedules != nil) {
    self->schedules_ = schedules;
  }
  else {
    self->schedules_ = new_JavaUtilArrayList_init();
  }
}

PAScheduleTrigger *new_PAScheduleTrigger_initWithJavaUtilList_(id<JavaUtilList> schedules) {
  PAScheduleTrigger *self = [PAScheduleTrigger alloc];
  PAScheduleTrigger_initWithJavaUtilList_(self, schedules);
  return self;
}

PAScheduleTrigger *create_PAScheduleTrigger_initWithJavaUtilList_(id<JavaUtilList> schedules) {
  return new_PAScheduleTrigger_initWithJavaUtilList_(schedules);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PAScheduleTrigger)
