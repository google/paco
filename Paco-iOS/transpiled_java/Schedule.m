//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/northropo/Projects/paco/Shared/src/com/pacoapp/paco/shared/model2/Schedule.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ModelBase.h"
#include "PacoNotificationAction.h"
#include "Schedule.h"
#include "SignalTime.h"
#include "Validator.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface PASchedule () {
 @public
  JavaLangInteger *scheduleType_;
  JavaLangInteger *esmFrequency_;
  JavaLangInteger *esmPeriodInDays_;
  JavaLangLong *esmStartHour_;
  JavaLangLong *esmEndHour_;
  id<JavaUtilList> signalTimes_;
  JavaLangInteger *repeatRate_;
  JavaLangInteger *weekDaysScheduled_;
  JavaLangInteger *nthOfMonth_;
  JavaLangBoolean *byDayOfMonth_;
  JavaLangInteger *dayOfMonth_;
  JavaLangBoolean *esmWeekends_;
  jlong joinDateMillis_;
  JavaLangLong *beginDate_;
  JavaLangLong *id__;
  JavaLangBoolean *onlyEditableOnJoin_;
  JavaLangBoolean *userEditable_;
}

@end

J2OBJC_FIELD_SETTER(PASchedule, scheduleType_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(PASchedule, esmFrequency_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(PASchedule, esmPeriodInDays_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(PASchedule, esmStartHour_, JavaLangLong *)
J2OBJC_FIELD_SETTER(PASchedule, esmEndHour_, JavaLangLong *)
J2OBJC_FIELD_SETTER(PASchedule, signalTimes_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(PASchedule, repeatRate_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(PASchedule, weekDaysScheduled_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(PASchedule, nthOfMonth_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(PASchedule, byDayOfMonth_, JavaLangBoolean *)
J2OBJC_FIELD_SETTER(PASchedule, dayOfMonth_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(PASchedule, esmWeekends_, JavaLangBoolean *)
J2OBJC_FIELD_SETTER(PASchedule, beginDate_, JavaLangLong *)
J2OBJC_FIELD_SETTER(PASchedule, id__, JavaLangLong *)
J2OBJC_FIELD_SETTER(PASchedule, onlyEditableOnJoin_, JavaLangBoolean *)
J2OBJC_FIELD_SETTER(PASchedule, userEditable_, JavaLangBoolean *)

J2OBJC_INITIALIZED_DEFN(PASchedule)

IOSIntArray *PASchedule_SCHEDULE_TYPES;
IOSObjectArray *PASchedule_SCHEDULE_TYPES_NAMES;
IOSObjectArray *PASchedule_ESM_PERIODS_NAMES;
JavaLangInteger *PASchedule_DEFAULT_REPEAT_RATE;
IOSIntArray *PASchedule_DAYS_OF_WEEK;
IOSIntArray *PASchedule_ESM_PERIODS;

@implementation PASchedule

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)scheduleType
                    withJavaLangBoolean:(JavaLangBoolean *)byDayOfMonth
                    withJavaLangInteger:(JavaLangInteger *)dayOfMonth
                       withJavaLangLong:(JavaLangLong *)esmEndHour
                    withJavaLangInteger:(JavaLangInteger *)esmFrequency
                    withJavaLangInteger:(JavaLangInteger *)esmPeriodInDays
                       withJavaLangLong:(JavaLangLong *)esmStartHour
                    withJavaLangInteger:(JavaLangInteger *)nthOfMonth
                    withJavaLangInteger:(JavaLangInteger *)repeatRate
                       withJavaUtilList:(id<JavaUtilList>)times
                    withJavaLangInteger:(JavaLangInteger *)weekDaysScheduled
                    withJavaLangBoolean:(JavaLangBoolean *)esmWeekends
                    withJavaLangInteger:(JavaLangInteger *)timeout
                    withJavaLangInteger:(JavaLangInteger *)minimumBuffer
                    withJavaLangInteger:(JavaLangInteger *)snoozeCount
                    withJavaLangInteger:(JavaLangInteger *)snoozeTime {
  PASchedule_initWithJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaUtilList_withJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(self, scheduleType, byDayOfMonth, dayOfMonth, esmEndHour, esmFrequency, esmPeriodInDays, esmStartHour, nthOfMonth, repeatRate, times, weekDaysScheduled, esmWeekends, timeout, minimumBuffer, snoozeCount, snoozeTime);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  PASchedule_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangInteger *)getScheduleType {
  return scheduleType_;
}

- (void)setScheduleTypeWithJavaLangInteger:(JavaLangInteger *)scheduleType {
  self->scheduleType_ = scheduleType;
}

- (JavaLangInteger *)getEsmFrequency {
  return esmFrequency_;
}

- (void)setEsmFrequencyWithJavaLangInteger:(JavaLangInteger *)esmFrequency {
  self->esmFrequency_ = esmFrequency;
}

- (JavaLangInteger *)getEsmPeriodInDays {
  return esmPeriodInDays_;
}

- (void)setEsmPeriodInDaysWithJavaLangInteger:(JavaLangInteger *)esmPeriodInDays {
  self->esmPeriodInDays_ = esmPeriodInDays;
}

- (JavaLangLong *)getEsmStartHour {
  return esmStartHour_;
}

- (void)setEsmStartHourWithJavaLangLong:(JavaLangLong *)esmStartHour {
  self->esmStartHour_ = esmStartHour;
}

- (JavaLangLong *)getEsmEndHour {
  return esmEndHour_;
}

- (void)setEsmEndHourWithJavaLangLong:(JavaLangLong *)esmEndHour {
  self->esmEndHour_ = esmEndHour;
}

- (id<JavaUtilList>)getSignalTimes {
  return signalTimes_;
}

- (void)setSignalTimesWithJavaUtilList:(id<JavaUtilList>)times {
  self->signalTimes_ = times;
}

- (JavaLangInteger *)getRepeatRate {
  return repeatRate_ == nil ? PASchedule_DEFAULT_REPEAT_RATE : repeatRate_;
}

- (void)setRepeatRateWithJavaLangInteger:(JavaLangInteger *)repeatRate {
  self->repeatRate_ = repeatRate;
}

- (void)setWeekDaysScheduledWithJavaLangInteger:(JavaLangInteger *)selected {
  self->weekDaysScheduled_ = selected;
}

- (JavaLangInteger *)getWeekDaysScheduled {
  return weekDaysScheduled_;
}

- (JavaLangInteger *)getNthOfMonth {
  return nthOfMonth_;
}

- (void)setNthOfMonthWithJavaLangInteger:(JavaLangInteger *)nthOfMonth {
  self->nthOfMonth_ = nthOfMonth;
}

- (JavaLangBoolean *)getByDayOfMonth {
  return byDayOfMonth_;
}

- (JavaLangInteger *)getDayOfMonth {
  return dayOfMonth_;
}

- (void)setByDayOfMonthWithJavaLangBoolean:(JavaLangBoolean *)byDayOfMonth {
  self->byDayOfMonth_ = byDayOfMonth;
}

- (void)setDayOfMonthWithJavaLangInteger:(JavaLangInteger *)dayOfMonth {
  self->dayOfMonth_ = dayOfMonth;
}

- (JavaLangBoolean *)getEsmWeekends {
  return esmWeekends_;
}

- (void)setEsmWeekendsWithJavaLangBoolean:(JavaLangBoolean *)esmWeekends {
  self->esmWeekends_ = esmWeekends;
}

- (JavaLangInteger *)getMinimumBuffer {
  return minimumBuffer_;
}

- (void)setMinimumBufferWithJavaLangInteger:(JavaLangInteger *)minimumBuffer {
  self->minimumBuffer_ = minimumBuffer;
}

- (void)validateWithWithPAValidator:(id<PAValidator>)validator {
  [((id<PAValidator>) nil_chk(validator)) isNotNullWithId:scheduleType_ withNSString:@"scheduleType is not properly initialized"];
  [validator isNotNullWithId:onlyEditableOnJoin_ withNSString:@"onlyEditableOnJoin is not properly initialized"];
  [validator isNotNullWithId:userEditable_ withNSString:@"userEditable is not properly initialized"];
  switch ([((JavaLangInteger *) nil_chk(scheduleType_)) intValue]) {
    case PASchedule_DAILY:
    case PASchedule_WEEKDAY:
    break;
    case PASchedule_WEEKLY:
    [validator isNotNullWithId:weekDaysScheduled_ withNSString:@"weekdaysSchedule is not properly initialized"];
    break;
    case PASchedule_MONTHLY:
    [validator isNotNullWithId:byDayOfMonth_ withNSString:@"byDayOfMonth is not properly initialized"];
    if ([((JavaLangBoolean *) nil_chk(byDayOfMonth_)) booleanValue]) {
      [validator isNotNullWithId:dayOfMonth_ withNSString:@"dayOfMonth is not properly initialized"];
    }
    else {
      [validator isNotNullWithId:nthOfMonth_ withNSString:@"nthOfMonth is not properly initialized"];
      [validator isNotNullWithId:weekDaysScheduled_ withNSString:@"weekdaysSchedule is not properly initialized"];
    }
    break;
    case PASchedule_ESM:
    [validator isNotNullWithId:esmFrequency_ withNSString:@"esm frequency is not properly initialized"];
    [validator isNotNullWithId:esmPeriodInDays_ withNSString:@"esm period is not properly initialized"];
    [validator isNotNullWithId:esmWeekends_ withNSString:@"esm weekends is not properly initialized"];
    [validator isNotNullWithId:esmStartHour_ withNSString:@"esm startHour is not properly initialized"];
    [validator isNotNullWithId:esmEndHour_ withNSString:@"esm endHour is not properly initialized"];
    [validator isNotNullWithId:minimumBuffer_ withNSString:@"minimumBuffer for esm signals is not properly initialized"];
    break;
    default:
    ;
  }
  if (scheduleType_ != nil && ![scheduleType_ isEqual:JavaLangInteger_valueOfWithInt_(PASchedule_ESM)] && ![scheduleType_ isEqual:JavaLangInteger_valueOfWithInt_(PASchedule_SELF_REPORT)] && ![scheduleType_ isEqual:JavaLangInteger_valueOfWithInt_(PASchedule_ADVANCED)]) {
    [validator isNotNullWithId:repeatRate_ withNSString:@"repeatRate is not properly initialized"];
    [validator isNotNullAndNonEmptyCollectionWithJavaUtilCollection:signalTimes_ withNSString:@"For the schedule type, there must be at least one signal Time"];
    for (PASignalTime * __strong signalTime in nil_chk(signalTimes_)) {
      [((PASignalTime *) nil_chk(signalTime)) validateWithWithPAValidator:validator];
    }
  }
}

- (jlong)getJoinDateMillis {
  return joinDateMillis_;
}

- (void)setJoinDateMillisWithLong:(jlong)joinDateMillis {
  self->joinDateMillis_ = joinDateMillis;
}

- (jint)convertEsmPeriodToDays {
  switch ([((JavaLangInteger *) nil_chk([self getEsmPeriodInDays])) intValue]) {
    case PASchedule_ESM_PERIOD_DAY:
    return 1;
    case PASchedule_ESM_PERIOD_WEEK:
    return 7;
    case PASchedule_ESM_PERIOD_MONTH:
    return 30;
    default:
    return 1;
  }
}

- (JavaLangLong *)getBeginDate {
  return beginDate_;
}

- (void)setBeginDateWithJavaLangLong:(JavaLangLong *)beginDate {
  self->beginDate_ = beginDate;
}

- (void)addWeekDayToScheduleWithJavaLangInteger:(JavaLangInteger *)day {
  (void) JreBoxedBitOrAssignStrongInt(&weekDaysScheduled_, [((JavaLangInteger *) nil_chk(day)) intValue]);
}

- (void)removeWeekDayFromScheduleWithJavaLangInteger:(JavaLangInteger *)day {
  (void) JreBoxedBitAndAssignStrongInt(&weekDaysScheduled_, (~[((JavaLangInteger *) nil_chk(day)) intValue]));
}

- (void)removeAllWeekDaysScheduled {
  self->weekDaysScheduled_ = JavaLangInteger_valueOfWithInt_(0);
}

- (jboolean)isWeekDayScheduledWithJavaLangInteger:(JavaLangInteger *)day {
  return ([((JavaLangInteger *) nil_chk(weekDaysScheduled_)) intValue] & [((JavaLangInteger *) nil_chk(day)) intValue]) != 0;
}

- (JavaLangLong *)getId {
  return id__;
}

- (void)setIdWithJavaLangLong:(JavaLangLong *)id_ {
  self->id__ = id_;
}

- (JavaLangBoolean *)getOnlyEditableOnJoin {
  return onlyEditableOnJoin_;
}

- (JavaLangBoolean *)getUserEditable {
  return userEditable_;
}

- (void)setOnlyEditableOnJoinWithJavaLangBoolean:(JavaLangBoolean *)value {
  self->onlyEditableOnJoin_ = value;
}

- (void)setUserEditableWithJavaLangBoolean:(JavaLangBoolean *)userEditable {
  self->userEditable_ = userEditable;
}

+ (void)initialize {
  if (self == [PASchedule class]) {
    PASchedule_SCHEDULE_TYPES = [IOSIntArray newArrayWithInts:(jint[]){ PASchedule_DAILY, PASchedule_WEEKDAY, PASchedule_WEEKLY, PASchedule_MONTHLY, PASchedule_ESM, PASchedule_SELF_REPORT, PASchedule_ADVANCED } count:7];
    PASchedule_SCHEDULE_TYPES_NAMES = [IOSObjectArray newArrayWithObjects:(id[]){ @"Daily", @"Weekdays", @"Weekly", @"Monthly", @"Random sampling (ESM)", @"Self report only", @"Advanced" } count:7 type:NSString_class_()];
    PASchedule_ESM_PERIODS_NAMES = [IOSObjectArray newArrayWithObjects:(id[]){ @"Day", @"Week", @"Month" } count:3 type:NSString_class_()];
    PASchedule_DEFAULT_REPEAT_RATE = JavaLangInteger_valueOfWithInt_(1);
    PASchedule_DAYS_OF_WEEK = [IOSIntArray newArrayWithInts:(jint[]){ 1, 2, 4, 8, 16, 32, 64 } count:7];
    PASchedule_ESM_PERIODS = [IOSIntArray newArrayWithInts:(jint[]){ PASchedule_ESM_PERIOD_DAY, PASchedule_ESM_PERIOD_WEEK, PASchedule_ESM_PERIOD_MONTH } count:3];
    J2OBJC_SET_INITIALIZED(PASchedule)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaLangInteger:withJavaLangBoolean:withJavaLangInteger:withJavaLangLong:withJavaLangInteger:withJavaLangInteger:withJavaLangLong:withJavaLangInteger:withJavaLangInteger:withJavaUtilList:withJavaLangInteger:withJavaLangBoolean:withJavaLangInteger:withJavaLangInteger:withJavaLangInteger:withJavaLangInteger:", "Schedule", NULL, 0x1, NULL, "(Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/List<Lcom/pacoapp/paco/shared/model2/SignalTime;>;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V" },
    { "init", "Schedule", NULL, 0x1, NULL, NULL },
    { "getScheduleType", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setScheduleTypeWithJavaLangInteger:", "setScheduleType", "V", 0x1, NULL, NULL },
    { "getEsmFrequency", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setEsmFrequencyWithJavaLangInteger:", "setEsmFrequency", "V", 0x1, NULL, NULL },
    { "getEsmPeriodInDays", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setEsmPeriodInDaysWithJavaLangInteger:", "setEsmPeriodInDays", "V", 0x1, NULL, NULL },
    { "getEsmStartHour", NULL, "Ljava.lang.Long;", 0x1, NULL, NULL },
    { "setEsmStartHourWithJavaLangLong:", "setEsmStartHour", "V", 0x1, NULL, NULL },
    { "getEsmEndHour", NULL, "Ljava.lang.Long;", 0x1, NULL, NULL },
    { "setEsmEndHourWithJavaLangLong:", "setEsmEndHour", "V", 0x1, NULL, NULL },
    { "getSignalTimes", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lcom/pacoapp/paco/shared/model2/SignalTime;>;" },
    { "setSignalTimesWithJavaUtilList:", "setSignalTimes", "V", 0x1, NULL, "(Ljava/util/List<Lcom/pacoapp/paco/shared/model2/SignalTime;>;)V" },
    { "getRepeatRate", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setRepeatRateWithJavaLangInteger:", "setRepeatRate", "V", 0x1, NULL, NULL },
    { "setWeekDaysScheduledWithJavaLangInteger:", "setWeekDaysScheduled", "V", 0x1, NULL, NULL },
    { "getWeekDaysScheduled", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "getNthOfMonth", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setNthOfMonthWithJavaLangInteger:", "setNthOfMonth", "V", 0x1, NULL, NULL },
    { "getByDayOfMonth", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "getDayOfMonth", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setByDayOfMonthWithJavaLangBoolean:", "setByDayOfMonth", "V", 0x1, NULL, NULL },
    { "setDayOfMonthWithJavaLangInteger:", "setDayOfMonth", "V", 0x1, NULL, NULL },
    { "getEsmWeekends", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setEsmWeekendsWithJavaLangBoolean:", "setEsmWeekends", "V", 0x1, NULL, NULL },
    { "getMinimumBuffer", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setMinimumBufferWithJavaLangInteger:", "setMinimumBuffer", "V", 0x1, NULL, NULL },
    { "validateWithWithPAValidator:", "validateWith", "V", 0x1, NULL, NULL },
    { "getJoinDateMillis", NULL, "J", 0x1, NULL, NULL },
    { "setJoinDateMillisWithLong:", "setJoinDateMillis", "V", 0x1, NULL, NULL },
    { "convertEsmPeriodToDays", NULL, "I", 0x1, NULL, NULL },
    { "getBeginDate", NULL, "Ljava.lang.Long;", 0x1, NULL, NULL },
    { "setBeginDateWithJavaLangLong:", "setBeginDate", "V", 0x1, NULL, NULL },
    { "addWeekDayToScheduleWithJavaLangInteger:", "addWeekDayToSchedule", "V", 0x1, NULL, NULL },
    { "removeWeekDayFromScheduleWithJavaLangInteger:", "removeWeekDayFromSchedule", "V", 0x1, NULL, NULL },
    { "removeAllWeekDaysScheduled", NULL, "V", 0x1, NULL, NULL },
    { "isWeekDayScheduledWithJavaLangInteger:", "isWeekDayScheduled", "Z", 0x1, NULL, NULL },
    { "getId", NULL, "Ljava.lang.Long;", 0x1, NULL, NULL },
    { "setIdWithJavaLangLong:", "setId", "V", 0x1, NULL, NULL },
    { "getOnlyEditableOnJoin", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "getUserEditable", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setOnlyEditableOnJoinWithJavaLangBoolean:", "setOnlyEditableOnJoin", "V", 0x1, NULL, NULL },
    { "setUserEditableWithJavaLangBoolean:", "setUserEditable", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "SATURDAY", "SATURDAY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_SATURDAY },
    { "FRIDAY", "FRIDAY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_FRIDAY },
    { "THURSDAY", "THURSDAY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_THURSDAY },
    { "WEDNESDAY", "WEDNESDAY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_WEDNESDAY },
    { "TUESDAY", "TUESDAY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_TUESDAY },
    { "MONDAY", "MONDAY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_MONDAY },
    { "SUNDAY", "SUNDAY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_SUNDAY },
    { "DAILY", "DAILY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_DAILY },
    { "WEEKDAY", "WEEKDAY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_WEEKDAY },
    { "WEEKLY", "WEEKLY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_WEEKLY },
    { "MONTHLY", "MONTHLY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_MONTHLY },
    { "ESM", "ESM", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_ESM },
    { "SELF_REPORT", "SELF_REPORT", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_SELF_REPORT },
    { "ADVANCED", "ADVANCED", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_ADVANCED },
    { "SCHEDULE_TYPES", "SCHEDULE_TYPES", 0x19, "[I", &PASchedule_SCHEDULE_TYPES, NULL, .constantValue.asLong = 0 },
    { "SCHEDULE_TYPES_NAMES", "SCHEDULE_TYPES_NAMES", 0x19, "[Ljava.lang.String;", &PASchedule_SCHEDULE_TYPES_NAMES, NULL, .constantValue.asLong = 0 },
    { "ESM_PERIOD_DAY", "ESM_PERIOD_DAY", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_ESM_PERIOD_DAY },
    { "ESM_PERIOD_WEEK", "ESM_PERIOD_WEEK", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_ESM_PERIOD_WEEK },
    { "ESM_PERIOD_MONTH", "ESM_PERIOD_MONTH", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_ESM_PERIOD_MONTH },
    { "DEFAULT_ESM_PERIOD", "DEFAULT_ESM_PERIOD", 0x19, "I", NULL, NULL, .constantValue.asInt = PASchedule_DEFAULT_ESM_PERIOD },
    { "ESM_PERIODS_NAMES", "ESM_PERIODS_NAMES", 0x19, "[Ljava.lang.String;", &PASchedule_ESM_PERIODS_NAMES, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_REPEAT_RATE", "DEFAULT_REPEAT_RATE", 0x19, "Ljava.lang.Integer;", &PASchedule_DEFAULT_REPEAT_RATE, NULL, .constantValue.asLong = 0 },
    { "DAYS_OF_WEEK", "DAYS_OF_WEEK", 0x19, "[I", &PASchedule_DAYS_OF_WEEK, NULL, .constantValue.asLong = 0 },
    { "ESM_PERIODS", "ESM_PERIODS", 0x9, "[I", &PASchedule_ESM_PERIODS, NULL, .constantValue.asLong = 0 },
    { "scheduleType_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "esmFrequency_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "esmPeriodInDays_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "esmStartHour_", NULL, 0x2, "Ljava.lang.Long;", NULL, NULL, .constantValue.asLong = 0 },
    { "esmEndHour_", NULL, 0x2, "Ljava.lang.Long;", NULL, NULL, .constantValue.asLong = 0 },
    { "signalTimes_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/pacoapp/paco/shared/model2/SignalTime;>;", .constantValue.asLong = 0 },
    { "repeatRate_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "weekDaysScheduled_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "nthOfMonth_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "byDayOfMonth_", NULL, 0x2, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "dayOfMonth_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "esmWeekends_", NULL, 0x2, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "minimumBuffer_", NULL, 0x4, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "joinDateMillis_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "beginDate_", NULL, 0x2, "Ljava.lang.Long;", NULL, NULL, .constantValue.asLong = 0 },
    { "id__", "id", 0x2, "Ljava.lang.Long;", NULL, NULL, .constantValue.asLong = 0 },
    { "onlyEditableOnJoin_", NULL, 0x2, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "userEditable_", NULL, 0x2, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _PASchedule = { 2, "Schedule", "com.pacoapp.paco.shared.model2", NULL, 0x1, 44, methods, 42, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_PASchedule;
}

@end

void PASchedule_initWithJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaUtilList_withJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(PASchedule *self, JavaLangInteger *scheduleType, JavaLangBoolean *byDayOfMonth, JavaLangInteger *dayOfMonth, JavaLangLong *esmEndHour, JavaLangInteger *esmFrequency, JavaLangInteger *esmPeriodInDays, JavaLangLong *esmStartHour, JavaLangInteger *nthOfMonth, JavaLangInteger *repeatRate, id<JavaUtilList> times, JavaLangInteger *weekDaysScheduled, JavaLangBoolean *esmWeekends, JavaLangInteger *timeout, JavaLangInteger *minimumBuffer, JavaLangInteger *snoozeCount, JavaLangInteger *snoozeTime) {
  PAModelBase_init(self);
  self->scheduleType_ = JavaLangInteger_valueOfWithInt_(PASchedule_DAILY);
  self->esmFrequency_ = JavaLangInteger_valueOfWithInt_(3);
  self->esmPeriodInDays_ = JavaLangInteger_valueOfWithInt_(PASchedule_ESM_PERIOD_DAY);
  self->esmStartHour_ = JavaLangLong_valueOfWithLong_(9 * 60 * 60 * 1000LL);
  self->esmEndHour_ = JavaLangLong_valueOfWithLong_(17 * 60 * 60 * 1000LL);
  self->repeatRate_ = JavaLangInteger_valueOfWithInt_(1);
  self->weekDaysScheduled_ = JavaLangInteger_valueOfWithInt_(0);
  self->nthOfMonth_ = JavaLangInteger_valueOfWithInt_(1);
  self->byDayOfMonth_ = JreLoadStatic(JavaLangBoolean, TRUE);
  self->dayOfMonth_ = JavaLangInteger_valueOfWithInt_(1);
  self->esmWeekends_ = JavaLangBoolean_valueOfWithBoolean_(false);
  self->minimumBuffer_ = JavaLangInteger_valueOfWithInt_(JavaLangInteger_parseIntWithNSString_(PAPacoNotificationAction_ESM_SIGNAL_TIMEOUT));
  self->onlyEditableOnJoin_ = JavaLangBoolean_valueOfWithBoolean_(false);
  self->userEditable_ = JavaLangBoolean_valueOfWithBoolean_(true);
  self->scheduleType_ = scheduleType;
  self->byDayOfMonth_ = byDayOfMonth;
  self->dayOfMonth_ = dayOfMonth;
  self->esmEndHour_ = esmEndHour;
  self->esmFrequency_ = esmFrequency;
  self->esmPeriodInDays_ = esmPeriodInDays;
  self->esmStartHour_ = esmStartHour;
  self->esmWeekends_ = esmWeekends;
  self->nthOfMonth_ = nthOfMonth;
  self->repeatRate_ = repeatRate;
  self->signalTimes_ = times;
  self->minimumBuffer_ = minimumBuffer;
  self->weekDaysScheduled_ = weekDaysScheduled;
}

PASchedule *new_PASchedule_initWithJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaUtilList_withJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(JavaLangInteger *scheduleType, JavaLangBoolean *byDayOfMonth, JavaLangInteger *dayOfMonth, JavaLangLong *esmEndHour, JavaLangInteger *esmFrequency, JavaLangInteger *esmPeriodInDays, JavaLangLong *esmStartHour, JavaLangInteger *nthOfMonth, JavaLangInteger *repeatRate, id<JavaUtilList> times, JavaLangInteger *weekDaysScheduled, JavaLangBoolean *esmWeekends, JavaLangInteger *timeout, JavaLangInteger *minimumBuffer, JavaLangInteger *snoozeCount, JavaLangInteger *snoozeTime) {
  PASchedule *self = [PASchedule alloc];
  PASchedule_initWithJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaUtilList_withJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(self, scheduleType, byDayOfMonth, dayOfMonth, esmEndHour, esmFrequency, esmPeriodInDays, esmStartHour, nthOfMonth, repeatRate, times, weekDaysScheduled, esmWeekends, timeout, minimumBuffer, snoozeCount, snoozeTime);
  return self;
}

PASchedule *create_PASchedule_initWithJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaUtilList_withJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(JavaLangInteger *scheduleType, JavaLangBoolean *byDayOfMonth, JavaLangInteger *dayOfMonth, JavaLangLong *esmEndHour, JavaLangInteger *esmFrequency, JavaLangInteger *esmPeriodInDays, JavaLangLong *esmStartHour, JavaLangInteger *nthOfMonth, JavaLangInteger *repeatRate, id<JavaUtilList> times, JavaLangInteger *weekDaysScheduled, JavaLangBoolean *esmWeekends, JavaLangInteger *timeout, JavaLangInteger *minimumBuffer, JavaLangInteger *snoozeCount, JavaLangInteger *snoozeTime) {
  return new_PASchedule_initWithJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaUtilList_withJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(scheduleType, byDayOfMonth, dayOfMonth, esmEndHour, esmFrequency, esmPeriodInDays, esmStartHour, nthOfMonth, repeatRate, times, weekDaysScheduled, esmWeekends, timeout, minimumBuffer, snoozeCount, snoozeTime);
}

void PASchedule_init(PASchedule *self) {
  PAModelBase_init(self);
  self->scheduleType_ = JavaLangInteger_valueOfWithInt_(PASchedule_DAILY);
  self->esmFrequency_ = JavaLangInteger_valueOfWithInt_(3);
  self->esmPeriodInDays_ = JavaLangInteger_valueOfWithInt_(PASchedule_ESM_PERIOD_DAY);
  self->esmStartHour_ = JavaLangLong_valueOfWithLong_(9 * 60 * 60 * 1000LL);
  self->esmEndHour_ = JavaLangLong_valueOfWithLong_(17 * 60 * 60 * 1000LL);
  self->repeatRate_ = JavaLangInteger_valueOfWithInt_(1);
  self->weekDaysScheduled_ = JavaLangInteger_valueOfWithInt_(0);
  self->nthOfMonth_ = JavaLangInteger_valueOfWithInt_(1);
  self->byDayOfMonth_ = JreLoadStatic(JavaLangBoolean, TRUE);
  self->dayOfMonth_ = JavaLangInteger_valueOfWithInt_(1);
  self->esmWeekends_ = JavaLangBoolean_valueOfWithBoolean_(false);
  self->minimumBuffer_ = JavaLangInteger_valueOfWithInt_(JavaLangInteger_parseIntWithNSString_(PAPacoNotificationAction_ESM_SIGNAL_TIMEOUT));
  self->onlyEditableOnJoin_ = JavaLangBoolean_valueOfWithBoolean_(false);
  self->userEditable_ = JavaLangBoolean_valueOfWithBoolean_(true);
  self->signalTimes_ = new_JavaUtilArrayList_init();
}

PASchedule *new_PASchedule_init() {
  PASchedule *self = [PASchedule alloc];
  PASchedule_init(self);
  return self;
}

PASchedule *create_PASchedule_init() {
  return new_PASchedule_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PASchedule)
