//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/MonthDay.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeMonthDay_INCLUDE_ALL")
#ifdef OrgJodaTimeMonthDay_RESTRICT
#define OrgJodaTimeMonthDay_INCLUDE_ALL 0
#else
#define OrgJodaTimeMonthDay_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeMonthDay_RESTRICT

#if !defined (OrgJodaTimeMonthDay_) && (OrgJodaTimeMonthDay_INCLUDE_ALL || defined(OrgJodaTimeMonthDay_INCLUDE))
#define OrgJodaTimeMonthDay_

#define OrgJodaTimeBaseBasePartial_RESTRICT 1
#define OrgJodaTimeBaseBasePartial_INCLUDE 1
#include "org/joda/time/base/BasePartial.h"

#define OrgJodaTimeReadablePartial_RESTRICT 1
#define OrgJodaTimeReadablePartial_INCLUDE 1
#include "org/joda/time/ReadablePartial.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilCalendar;
@class JavaUtilDate;
@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeDurationFieldType;
@class OrgJodaTimeFormatDateTimeFormatter;
@class OrgJodaTimeLocalDate;
@class OrgJodaTimeMonthDay_Property;
@protocol OrgJodaTimeReadablePeriod;

@interface OrgJodaTimeMonthDay : OrgJodaTimeBaseBasePartial < OrgJodaTimeReadablePartial, JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (instancetype)initWithInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth;

- (instancetype)initWithInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithLong:(jlong)instant;

- (instancetype)initWithLong:(jlong)instant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithId:(id)instant;

- (instancetype)initWithId:(id)instant
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (OrgJodaTimeMonthDay_Property *)dayOfMonth;

+ (OrgJodaTimeMonthDay *)fromCalendarFieldsWithJavaUtilCalendar:(JavaUtilCalendar *)calendar;

+ (OrgJodaTimeMonthDay *)fromDateFieldsWithJavaUtilDate:(JavaUtilDate *)date;

- (jint)getDayOfMonth;

- (OrgJodaTimeDateTimeFieldType *)getFieldTypeWithInt:(jint)index;

- (IOSObjectArray *)getFieldTypes;

- (jint)getMonthOfYear;

- (OrgJodaTimeMonthDay *)minusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (OrgJodaTimeMonthDay *)minusDaysWithInt:(jint)days;

- (OrgJodaTimeMonthDay *)minusMonthsWithInt:(jint)months;

- (OrgJodaTimeMonthDay_Property *)monthOfYear;

+ (OrgJodaTimeMonthDay *)now;

+ (OrgJodaTimeMonthDay *)nowWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

+ (OrgJodaTimeMonthDay *)nowWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

+ (OrgJodaTimeMonthDay *)parseWithNSString:(NSString *)str;

+ (OrgJodaTimeMonthDay *)parseWithNSString:(NSString *)str
    withOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)formatter;

- (OrgJodaTimeMonthDay *)plusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (OrgJodaTimeMonthDay *)plusDaysWithInt:(jint)days;

- (OrgJodaTimeMonthDay *)plusMonthsWithInt:(jint)months;

- (OrgJodaTimeMonthDay_Property *)propertyWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (jint)size;

- (OrgJodaTimeLocalDate *)toLocalDateWithInt:(jint)year;

- (NSString *)description;

- (NSString *)toStringWithNSString:(NSString *)pattern;

- (NSString *)toStringWithNSString:(NSString *)pattern
                withJavaUtilLocale:(JavaUtilLocale *)locale;

- (OrgJodaTimeMonthDay *)withChronologyRetainFieldsWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)newChronology;

- (OrgJodaTimeMonthDay *)withDayOfMonthWithInt:(jint)dayOfMonth;

- (OrgJodaTimeMonthDay *)withFieldWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                           withInt:(jint)value;

- (OrgJodaTimeMonthDay *)withFieldAddedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                                                withInt:(jint)amount;

- (OrgJodaTimeMonthDay *)withMonthOfYearWithInt:(jint)monthOfYear;

- (OrgJodaTimeMonthDay *)withPeriodAddedWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                              withInt:(jint)scalar;

#pragma mark Protected

- (OrgJodaTimeDateTimeField *)getFieldWithInt:(jint)index
                    withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeMonthDay:(OrgJodaTimeMonthDay *)partial
                  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

- (instancetype)initWithOrgJodaTimeMonthDay:(OrgJodaTimeMonthDay *)partial
                               withIntArray:(IOSIntArray *)values;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeMonthDay)

inline jint OrgJodaTimeMonthDay_get_MONTH_OF_YEAR();
#define OrgJodaTimeMonthDay_MONTH_OF_YEAR 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeMonthDay, MONTH_OF_YEAR, jint)

inline jint OrgJodaTimeMonthDay_get_DAY_OF_MONTH();
#define OrgJodaTimeMonthDay_DAY_OF_MONTH 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeMonthDay, DAY_OF_MONTH, jint)

FOUNDATION_EXPORT OrgJodaTimeMonthDay *OrgJodaTimeMonthDay_now();

FOUNDATION_EXPORT OrgJodaTimeMonthDay *OrgJodaTimeMonthDay_nowWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *OrgJodaTimeMonthDay_nowWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *OrgJodaTimeMonthDay_parseWithNSString_(NSString *str);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *OrgJodaTimeMonthDay_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_(NSString *str, OrgJodaTimeFormatDateTimeFormatter *formatter);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *OrgJodaTimeMonthDay_fromCalendarFieldsWithJavaUtilCalendar_(JavaUtilCalendar *calendar);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *OrgJodaTimeMonthDay_fromDateFieldsWithJavaUtilDate_(JavaUtilDate *date);

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_init(OrgJodaTimeMonthDay *self);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_init();

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeMonthDay *self, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_initWithOrgJodaTimeChronology_(OrgJodaTimeMonthDay *self, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_initWithLong_(OrgJodaTimeMonthDay *self, jlong instant);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_initWithLong_(jlong instant) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_initWithLong_(jlong instant);

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_initWithLong_withOrgJodaTimeChronology_(OrgJodaTimeMonthDay *self, jlong instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_initWithId_(OrgJodaTimeMonthDay *self, id instant);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_initWithId_(id instant) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_initWithId_(id instant);

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_initWithId_withOrgJodaTimeChronology_(OrgJodaTimeMonthDay *self, id instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_initWithInt_withInt_(OrgJodaTimeMonthDay *self, jint monthOfYear, jint dayOfMonth);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_initWithInt_withInt_(jint monthOfYear, jint dayOfMonth) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_initWithInt_withInt_(jint monthOfYear, jint dayOfMonth);

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_initWithInt_withInt_withOrgJodaTimeChronology_(OrgJodaTimeMonthDay *self, jint monthOfYear, jint dayOfMonth, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_initWithInt_withInt_withOrgJodaTimeChronology_(jint monthOfYear, jint dayOfMonth, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_initWithInt_withInt_withOrgJodaTimeChronology_(jint monthOfYear, jint dayOfMonth, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_initWithOrgJodaTimeMonthDay_withIntArray_(OrgJodaTimeMonthDay *self, OrgJodaTimeMonthDay *partial, IOSIntArray *values);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_initWithOrgJodaTimeMonthDay_withIntArray_(OrgJodaTimeMonthDay *partial, IOSIntArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_initWithOrgJodaTimeMonthDay_withIntArray_(OrgJodaTimeMonthDay *partial, IOSIntArray *values);

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_initWithOrgJodaTimeMonthDay_withOrgJodaTimeChronology_(OrgJodaTimeMonthDay *self, OrgJodaTimeMonthDay *partial, OrgJodaTimeChronology *chrono);

FOUNDATION_EXPORT OrgJodaTimeMonthDay *new_OrgJodaTimeMonthDay_initWithOrgJodaTimeMonthDay_withOrgJodaTimeChronology_(OrgJodaTimeMonthDay *partial, OrgJodaTimeChronology *chrono) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay *create_OrgJodaTimeMonthDay_initWithOrgJodaTimeMonthDay_withOrgJodaTimeChronology_(OrgJodaTimeMonthDay *partial, OrgJodaTimeChronology *chrono);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeMonthDay)

#endif

#if !defined (OrgJodaTimeMonthDay_Property_) && (OrgJodaTimeMonthDay_INCLUDE_ALL || defined(OrgJodaTimeMonthDay_Property_INCLUDE))
#define OrgJodaTimeMonthDay_Property_

#define OrgJodaTimeFieldAbstractPartialFieldProperty_RESTRICT 1
#define OrgJodaTimeFieldAbstractPartialFieldProperty_INCLUDE 1
#include "org/joda/time/field/AbstractPartialFieldProperty.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class JavaUtilLocale;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeMonthDay;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeMonthDay_Property : OrgJodaTimeFieldAbstractPartialFieldProperty < JavaIoSerializable >

#pragma mark Public

- (OrgJodaTimeMonthDay *)addToCopyWithInt:(jint)valueToAdd;

- (OrgJodaTimeMonthDay *)addWrapFieldToCopyWithInt:(jint)valueToAdd;

- (jint)get;

- (OrgJodaTimeDateTimeField *)getField;

- (OrgJodaTimeMonthDay *)getMonthDay;

- (OrgJodaTimeMonthDay *)setCopyWithInt:(jint)value;

- (OrgJodaTimeMonthDay *)setCopyWithNSString:(NSString *)text;

- (OrgJodaTimeMonthDay *)setCopyWithNSString:(NSString *)text
                          withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Protected

- (id<OrgJodaTimeReadablePartial>)getReadablePartial;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeMonthDay:(OrgJodaTimeMonthDay *)partial
                                    withInt:(jint)fieldIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeMonthDay_Property)

FOUNDATION_EXPORT void OrgJodaTimeMonthDay_Property_initWithOrgJodaTimeMonthDay_withInt_(OrgJodaTimeMonthDay_Property *self, OrgJodaTimeMonthDay *partial, jint fieldIndex);

FOUNDATION_EXPORT OrgJodaTimeMonthDay_Property *new_OrgJodaTimeMonthDay_Property_initWithOrgJodaTimeMonthDay_withInt_(OrgJodaTimeMonthDay *partial, jint fieldIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeMonthDay_Property *create_OrgJodaTimeMonthDay_Property_initWithOrgJodaTimeMonthDay_withInt_(OrgJodaTimeMonthDay *partial, jint fieldIndex);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeMonthDay_Property)

#endif

#pragma pop_macro("OrgJodaTimeMonthDay_INCLUDE_ALL")
