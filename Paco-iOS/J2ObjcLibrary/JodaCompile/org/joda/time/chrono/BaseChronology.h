//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/chrono/BaseChronology.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeChronoBaseChronology_INCLUDE_ALL")
#ifdef OrgJodaTimeChronoBaseChronology_RESTRICT
#define OrgJodaTimeChronoBaseChronology_INCLUDE_ALL 0
#else
#define OrgJodaTimeChronoBaseChronology_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeChronoBaseChronology_RESTRICT

#if !defined (OrgJodaTimeChronoBaseChronology_) && (OrgJodaTimeChronoBaseChronology_INCLUDE_ALL || defined(OrgJodaTimeChronoBaseChronology_INCLUDE))
#define OrgJodaTimeChronoBaseChronology_

#define OrgJodaTimeChronology_RESTRICT 1
#define OrgJodaTimeChronology_INCLUDE 1
#include "org/joda/time/Chronology.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class IOSIntArray;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeDurationField;
@protocol OrgJodaTimeReadablePartial;
@protocol OrgJodaTimeReadablePeriod;

@interface OrgJodaTimeChronoBaseChronology : OrgJodaTimeChronology < JavaIoSerializable >

#pragma mark Public

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)duration
             withInt:(jint)scalar;

- (jlong)addWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                 withLong:(jlong)instant
                                  withInt:(jint)scalar;

- (OrgJodaTimeDurationField *)centuries;

- (OrgJodaTimeDateTimeField *)centuryOfEra;

- (OrgJodaTimeDateTimeField *)clockhourOfDay;

- (OrgJodaTimeDateTimeField *)clockhourOfHalfday;

- (OrgJodaTimeDateTimeField *)dayOfMonth;

- (OrgJodaTimeDateTimeField *)dayOfWeek;

- (OrgJodaTimeDateTimeField *)dayOfYear;

- (OrgJodaTimeDurationField *)days;

- (OrgJodaTimeDateTimeField *)era;

- (OrgJodaTimeDurationField *)eras;

- (IOSIntArray *)getWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                          withLong:(jlong)instant;

- (IOSIntArray *)getWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                         withLong:(jlong)duration;

- (IOSIntArray *)getWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                         withLong:(jlong)startInstant
                                         withLong:(jlong)endInstant;

- (jlong)getDateTimeMillisWithInt:(jint)year
                          withInt:(jint)monthOfYear
                          withInt:(jint)dayOfMonth
                          withInt:(jint)millisOfDay;

- (jlong)getDateTimeMillisWithInt:(jint)year
                          withInt:(jint)monthOfYear
                          withInt:(jint)dayOfMonth
                          withInt:(jint)hourOfDay
                          withInt:(jint)minuteOfHour
                          withInt:(jint)secondOfMinute
                          withInt:(jint)millisOfSecond;

- (jlong)getDateTimeMillisWithLong:(jlong)instant
                           withInt:(jint)hourOfDay
                           withInt:(jint)minuteOfHour
                           withInt:(jint)secondOfMinute
                           withInt:(jint)millisOfSecond;

- (OrgJodaTimeDateTimeZone *)getZone;

- (OrgJodaTimeDateTimeField *)halfdayOfDay;

- (OrgJodaTimeDurationField *)halfdays;

- (OrgJodaTimeDateTimeField *)hourOfDay;

- (OrgJodaTimeDateTimeField *)hourOfHalfday;

- (OrgJodaTimeDurationField *)hours;

- (OrgJodaTimeDurationField *)millis;

- (OrgJodaTimeDateTimeField *)millisOfDay;

- (OrgJodaTimeDateTimeField *)millisOfSecond;

- (OrgJodaTimeDateTimeField *)minuteOfDay;

- (OrgJodaTimeDateTimeField *)minuteOfHour;

- (OrgJodaTimeDurationField *)minutes;

- (OrgJodaTimeDateTimeField *)monthOfYear;

- (OrgJodaTimeDurationField *)months;

- (OrgJodaTimeDateTimeField *)secondOfDay;

- (OrgJodaTimeDateTimeField *)secondOfMinute;

- (OrgJodaTimeDurationField *)seconds;

- (jlong)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                  withLong:(jlong)instant;

- (NSString *)description;

- (void)validateWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                  withIntArray:(IOSIntArray *)values;

- (OrgJodaTimeDateTimeField *)weekOfWeekyear;

- (OrgJodaTimeDurationField *)weeks;

- (OrgJodaTimeDateTimeField *)weekyear;

- (OrgJodaTimeDateTimeField *)weekyearOfCentury;

- (OrgJodaTimeDurationField *)weekyears;

- (OrgJodaTimeChronology *)withUTC;

- (OrgJodaTimeChronology *)withZoneWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (OrgJodaTimeDateTimeField *)year;

- (OrgJodaTimeDateTimeField *)yearOfCentury;

- (OrgJodaTimeDateTimeField *)yearOfEra;

- (OrgJodaTimeDurationField *)years;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoBaseChronology)

FOUNDATION_EXPORT void OrgJodaTimeChronoBaseChronology_init(OrgJodaTimeChronoBaseChronology *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoBaseChronology)

#endif

#pragma pop_macro("OrgJodaTimeChronoBaseChronology_INCLUDE_ALL")
