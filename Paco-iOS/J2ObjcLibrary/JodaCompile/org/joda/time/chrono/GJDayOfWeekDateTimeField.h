//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeChronoGJDayOfWeekDateTimeField_INCLUDE_ALL")
#ifdef OrgJodaTimeChronoGJDayOfWeekDateTimeField_RESTRICT
#define OrgJodaTimeChronoGJDayOfWeekDateTimeField_INCLUDE_ALL 0
#else
#define OrgJodaTimeChronoGJDayOfWeekDateTimeField_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeChronoGJDayOfWeekDateTimeField_RESTRICT

#if !defined (OrgJodaTimeChronoGJDayOfWeekDateTimeField_) && (OrgJodaTimeChronoGJDayOfWeekDateTimeField_INCLUDE_ALL || defined(OrgJodaTimeChronoGJDayOfWeekDateTimeField_INCLUDE))
#define OrgJodaTimeChronoGJDayOfWeekDateTimeField_

#define OrgJodaTimeFieldPreciseDurationDateTimeField_RESTRICT 1
#define OrgJodaTimeFieldPreciseDurationDateTimeField_INCLUDE 1
#include "org/joda/time/field/PreciseDurationDateTimeField.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronoBasicChronology;
@class OrgJodaTimeDurationField;

@interface OrgJodaTimeChronoGJDayOfWeekDateTimeField : OrgJodaTimeFieldPreciseDurationDateTimeField

#pragma mark Public

- (jint)getWithLong:(jlong)instant;

- (NSString *)getAsShortTextWithInt:(jint)fieldValue
                 withJavaUtilLocale:(JavaUtilLocale *)locale;

- (NSString *)getAsTextWithInt:(jint)fieldValue
            withJavaUtilLocale:(JavaUtilLocale *)locale;

- (jint)getMaximumShortTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (jint)getMaximumTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (jint)getMaximumValue;

- (jint)getMinimumValue;

- (OrgJodaTimeDurationField *)getRangeDurationField;

#pragma mark Protected

- (jint)convertTextWithNSString:(NSString *)text
             withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeChronoBasicChronology:(OrgJodaTimeChronoBasicChronology *)chronology
                            withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)days;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoGJDayOfWeekDateTimeField)

FOUNDATION_EXPORT void OrgJodaTimeChronoGJDayOfWeekDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoGJDayOfWeekDateTimeField *self, OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *days);

FOUNDATION_EXPORT OrgJodaTimeChronoGJDayOfWeekDateTimeField *new_OrgJodaTimeChronoGJDayOfWeekDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *days) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeChronoGJDayOfWeekDateTimeField *create_OrgJodaTimeChronoGJDayOfWeekDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *days);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoGJDayOfWeekDateTimeField)

#endif

#pragma pop_macro("OrgJodaTimeChronoGJDayOfWeekDateTimeField_INCLUDE_ALL")
