//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/Months.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/joda/convert/FromString.h"
#include "org/joda/convert/ToString.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTime.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/DurationField.h"
#include "org/joda/time/DurationFieldType.h"
#include "org/joda/time/LocalDate.h"
#include "org/joda/time/Months.h"
#include "org/joda/time/Period.h"
#include "org/joda/time/PeriodType.h"
#include "org/joda/time/ReadableInstant.h"
#include "org/joda/time/ReadableInterval.h"
#include "org/joda/time/ReadablePartial.h"
#include "org/joda/time/base/BaseSingleFieldPeriod.h"
#include "org/joda/time/field/FieldUtils.h"
#include "org/joda/time/format/ISOPeriodFormat.h"
#include "org/joda/time/format/PeriodFormatter.h"

@interface OrgJodaTimeMonths ()

- (instancetype)initWithInt:(jint)months;

- (id)readResolve;

@end

inline OrgJodaTimeFormatPeriodFormatter *OrgJodaTimeMonths_get_PARSER();
static OrgJodaTimeFormatPeriodFormatter *OrgJodaTimeMonths_PARSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeMonths, PARSER, OrgJodaTimeFormatPeriodFormatter *)

inline jlong OrgJodaTimeMonths_get_serialVersionUID();
#define OrgJodaTimeMonths_serialVersionUID 87525275727380867LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeMonths, serialVersionUID, jlong)

__attribute__((unused)) static void OrgJodaTimeMonths_initWithInt_(OrgJodaTimeMonths *self, jint months);

__attribute__((unused)) static OrgJodaTimeMonths *new_OrgJodaTimeMonths_initWithInt_(jint months) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeMonths *create_OrgJodaTimeMonths_initWithInt_(jint months);

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeMonths)

OrgJodaTimeMonths *OrgJodaTimeMonths_ZERO;
OrgJodaTimeMonths *OrgJodaTimeMonths_ONE;
OrgJodaTimeMonths *OrgJodaTimeMonths_TWO;
OrgJodaTimeMonths *OrgJodaTimeMonths_THREE;
OrgJodaTimeMonths *OrgJodaTimeMonths_FOUR;
OrgJodaTimeMonths *OrgJodaTimeMonths_FIVE;
OrgJodaTimeMonths *OrgJodaTimeMonths_SIX;
OrgJodaTimeMonths *OrgJodaTimeMonths_SEVEN;
OrgJodaTimeMonths *OrgJodaTimeMonths_EIGHT;
OrgJodaTimeMonths *OrgJodaTimeMonths_NINE;
OrgJodaTimeMonths *OrgJodaTimeMonths_TEN;
OrgJodaTimeMonths *OrgJodaTimeMonths_ELEVEN;
OrgJodaTimeMonths *OrgJodaTimeMonths_TWELVE;
OrgJodaTimeMonths *OrgJodaTimeMonths_MAX_VALUE;
OrgJodaTimeMonths *OrgJodaTimeMonths_MIN_VALUE;

@implementation OrgJodaTimeMonths

+ (OrgJodaTimeMonths *)monthsWithInt:(jint)months {
  return OrgJodaTimeMonths_monthsWithInt_(months);
}

+ (OrgJodaTimeMonths *)monthsBetweenWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                                    withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  return OrgJodaTimeMonths_monthsBetweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(start, end);
}

+ (OrgJodaTimeMonths *)monthsBetweenWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)start
                                    withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)end {
  return OrgJodaTimeMonths_monthsBetweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_(start, end);
}

+ (OrgJodaTimeMonths *)monthsInWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  return OrgJodaTimeMonths_monthsInWithOrgJodaTimeReadableInterval_(interval);
}

+ (OrgJodaTimeMonths *)parseMonthsWithNSString:(NSString *)periodStr {
  return OrgJodaTimeMonths_parseMonthsWithNSString_(periodStr);
}

- (instancetype)initWithInt:(jint)months {
  OrgJodaTimeMonths_initWithInt_(self, months);
  return self;
}

- (id)readResolve {
  return OrgJodaTimeMonths_monthsWithInt_([self getValue]);
}

- (OrgJodaTimeDurationFieldType *)getFieldType {
  return OrgJodaTimeDurationFieldType_months();
}

- (OrgJodaTimePeriodType *)getPeriodType {
  return OrgJodaTimePeriodType_months();
}

- (jint)getMonths {
  return [self getValue];
}

- (OrgJodaTimeMonths *)plusWithInt:(jint)months {
  if (months == 0) {
    return self;
  }
  return OrgJodaTimeMonths_monthsWithInt_(OrgJodaTimeFieldFieldUtils_safeAddWithInt_withInt_([self getValue], months));
}

- (OrgJodaTimeMonths *)plusWithOrgJodaTimeMonths:(OrgJodaTimeMonths *)months {
  if (months == nil) {
    return self;
  }
  return [self plusWithInt:[((OrgJodaTimeMonths *) nil_chk(months)) getValue]];
}

- (OrgJodaTimeMonths *)minusWithInt:(jint)months {
  return [self plusWithInt:OrgJodaTimeFieldFieldUtils_safeNegateWithInt_(months)];
}

- (OrgJodaTimeMonths *)minusWithOrgJodaTimeMonths:(OrgJodaTimeMonths *)months {
  if (months == nil) {
    return self;
  }
  return [self minusWithInt:[((OrgJodaTimeMonths *) nil_chk(months)) getValue]];
}

- (OrgJodaTimeMonths *)multipliedByWithInt:(jint)scalar {
  return OrgJodaTimeMonths_monthsWithInt_(OrgJodaTimeFieldFieldUtils_safeMultiplyWithInt_withInt_([self getValue], scalar));
}

- (OrgJodaTimeMonths *)dividedByWithInt:(jint)divisor {
  if (divisor == 1) {
    return self;
  }
  return OrgJodaTimeMonths_monthsWithInt_([self getValue] / divisor);
}

- (OrgJodaTimeMonths *)negated {
  return OrgJodaTimeMonths_monthsWithInt_(OrgJodaTimeFieldFieldUtils_safeNegateWithInt_([self getValue]));
}

- (jboolean)isGreaterThanWithOrgJodaTimeMonths:(OrgJodaTimeMonths *)other {
  if (other == nil) {
    return [self getValue] > 0;
  }
  return [self getValue] > [((OrgJodaTimeMonths *) nil_chk(other)) getValue];
}

- (jboolean)isLessThanWithOrgJodaTimeMonths:(OrgJodaTimeMonths *)other {
  if (other == nil) {
    return [self getValue] < 0;
  }
  return [self getValue] < [((OrgJodaTimeMonths *) nil_chk(other)) getValue];
}

- (NSString *)description {
  return JreStrcat("C$C", 'P', NSString_valueOfInt_([self getValue]), 'M');
}

+ (void)initialize {
  if (self == [OrgJodaTimeMonths class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_ZERO, new_OrgJodaTimeMonths_initWithInt_(0));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_ONE, new_OrgJodaTimeMonths_initWithInt_(1));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_TWO, new_OrgJodaTimeMonths_initWithInt_(2));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_THREE, new_OrgJodaTimeMonths_initWithInt_(3));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_FOUR, new_OrgJodaTimeMonths_initWithInt_(4));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_FIVE, new_OrgJodaTimeMonths_initWithInt_(5));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_SIX, new_OrgJodaTimeMonths_initWithInt_(6));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_SEVEN, new_OrgJodaTimeMonths_initWithInt_(7));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_EIGHT, new_OrgJodaTimeMonths_initWithInt_(8));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_NINE, new_OrgJodaTimeMonths_initWithInt_(9));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_TEN, new_OrgJodaTimeMonths_initWithInt_(10));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_ELEVEN, new_OrgJodaTimeMonths_initWithInt_(11));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_TWELVE, new_OrgJodaTimeMonths_initWithInt_(12));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_MAX_VALUE, new_OrgJodaTimeMonths_initWithInt_(JavaLangInteger_MAX_VALUE));
    JreStrongAssignAndConsume(&OrgJodaTimeMonths_MIN_VALUE, new_OrgJodaTimeMonths_initWithInt_(JavaLangInteger_MIN_VALUE));
    JreStrongAssign(&OrgJodaTimeMonths_PARSER, [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeFormatISOPeriodFormat_standard())) withParseTypeWithOrgJodaTimePeriodType:OrgJodaTimePeriodType_months()]);
    J2OBJC_SET_INITIALIZED(OrgJodaTimeMonths)
  }
}

+ (IOSObjectArray *)__annotations_parseMonthsWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertFromString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_toString {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertToString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "monthsWithInt:", "months", "Lorg.joda.time.Months;", 0x9, NULL, NULL },
    { "monthsBetweenWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "monthsBetween", "Lorg.joda.time.Months;", 0x9, NULL, NULL },
    { "monthsBetweenWithOrgJodaTimeReadablePartial:withOrgJodaTimeReadablePartial:", "monthsBetween", "Lorg.joda.time.Months;", 0x9, NULL, NULL },
    { "monthsInWithOrgJodaTimeReadableInterval:", "monthsIn", "Lorg.joda.time.Months;", 0x9, NULL, NULL },
    { "parseMonthsWithNSString:", "parseMonths", "Lorg.joda.time.Months;", 0x9, NULL, NULL },
    { "initWithInt:", "Months", NULL, 0x2, NULL, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL, NULL },
    { "getFieldType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL, NULL },
    { "getPeriodType", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL, NULL },
    { "getMonths", NULL, "I", 0x1, NULL, NULL },
    { "plusWithInt:", "plus", "Lorg.joda.time.Months;", 0x1, NULL, NULL },
    { "plusWithOrgJodaTimeMonths:", "plus", "Lorg.joda.time.Months;", 0x1, NULL, NULL },
    { "minusWithInt:", "minus", "Lorg.joda.time.Months;", 0x1, NULL, NULL },
    { "minusWithOrgJodaTimeMonths:", "minus", "Lorg.joda.time.Months;", 0x1, NULL, NULL },
    { "multipliedByWithInt:", "multipliedBy", "Lorg.joda.time.Months;", 0x1, NULL, NULL },
    { "dividedByWithInt:", "dividedBy", "Lorg.joda.time.Months;", 0x1, NULL, NULL },
    { "negated", NULL, "Lorg.joda.time.Months;", 0x1, NULL, NULL },
    { "isGreaterThanWithOrgJodaTimeMonths:", "isGreaterThan", "Z", 0x1, NULL, NULL },
    { "isLessThanWithOrgJodaTimeMonths:", "isLessThan", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "ZERO", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_ZERO, NULL, .constantValue.asLong = 0 },
    { "ONE", "ONE", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_ONE, NULL, .constantValue.asLong = 0 },
    { "TWO", "TWO", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_TWO, NULL, .constantValue.asLong = 0 },
    { "THREE", "THREE", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_THREE, NULL, .constantValue.asLong = 0 },
    { "FOUR", "FOUR", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_FOUR, NULL, .constantValue.asLong = 0 },
    { "FIVE", "FIVE", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_FIVE, NULL, .constantValue.asLong = 0 },
    { "SIX", "SIX", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_SIX, NULL, .constantValue.asLong = 0 },
    { "SEVEN", "SEVEN", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_SEVEN, NULL, .constantValue.asLong = 0 },
    { "EIGHT", "EIGHT", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_EIGHT, NULL, .constantValue.asLong = 0 },
    { "NINE", "NINE", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_NINE, NULL, .constantValue.asLong = 0 },
    { "TEN", "TEN", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_TEN, NULL, .constantValue.asLong = 0 },
    { "ELEVEN", "ELEVEN", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_ELEVEN, NULL, .constantValue.asLong = 0 },
    { "TWELVE", "TWELVE", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_TWELVE, NULL, .constantValue.asLong = 0 },
    { "MAX_VALUE", "MAX_VALUE", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_MAX_VALUE, NULL, .constantValue.asLong = 0 },
    { "MIN_VALUE", "MIN_VALUE", 0x19, "Lorg.joda.time.Months;", &OrgJodaTimeMonths_MIN_VALUE, NULL, .constantValue.asLong = 0 },
    { "PARSER", "PARSER", 0x1a, "Lorg.joda.time.format.PeriodFormatter;", &OrgJodaTimeMonths_PARSER, NULL, .constantValue.asLong = 0 },
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeMonths_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgJodaTimeMonths = { 2, "Months", "org.joda.time", NULL, 0x11, 20, methods, 17, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeMonths;
}

@end

OrgJodaTimeMonths *OrgJodaTimeMonths_monthsWithInt_(jint months) {
  OrgJodaTimeMonths_initialize();
  switch (months) {
    case 0:
    return OrgJodaTimeMonths_ZERO;
    case 1:
    return OrgJodaTimeMonths_ONE;
    case 2:
    return OrgJodaTimeMonths_TWO;
    case 3:
    return OrgJodaTimeMonths_THREE;
    case 4:
    return OrgJodaTimeMonths_FOUR;
    case 5:
    return OrgJodaTimeMonths_FIVE;
    case 6:
    return OrgJodaTimeMonths_SIX;
    case 7:
    return OrgJodaTimeMonths_SEVEN;
    case 8:
    return OrgJodaTimeMonths_EIGHT;
    case 9:
    return OrgJodaTimeMonths_NINE;
    case 10:
    return OrgJodaTimeMonths_TEN;
    case 11:
    return OrgJodaTimeMonths_ELEVEN;
    case 12:
    return OrgJodaTimeMonths_TWELVE;
    case JavaLangInteger_MAX_VALUE:
    return OrgJodaTimeMonths_MAX_VALUE;
    case JavaLangInteger_MIN_VALUE:
    return OrgJodaTimeMonths_MIN_VALUE;
    default:
    return create_OrgJodaTimeMonths_initWithInt_(months);
  }
}

OrgJodaTimeMonths *OrgJodaTimeMonths_monthsBetweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeMonths_initialize();
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_withOrgJodaTimeDurationFieldType_(start, end, OrgJodaTimeDurationFieldType_months());
  return OrgJodaTimeMonths_monthsWithInt_(amount);
}

OrgJodaTimeMonths *OrgJodaTimeMonths_monthsBetweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_(id<OrgJodaTimeReadablePartial> start, id<OrgJodaTimeReadablePartial> end) {
  OrgJodaTimeMonths_initialize();
  if ([start isKindOfClass:[OrgJodaTimeLocalDate class]] && [end isKindOfClass:[OrgJodaTimeLocalDate class]]) {
    OrgJodaTimeChronology *chrono = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_([((id<OrgJodaTimeReadablePartial>) nil_chk(start)) getChronology]);
    jint months = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk(chrono)) months])) getDifferenceWithLong:[((OrgJodaTimeLocalDate *) nil_chk(((OrgJodaTimeLocalDate *) cast_chk(end, [OrgJodaTimeLocalDate class])))) getLocalMillis] withLong:[((OrgJodaTimeLocalDate *) cast_chk(start, [OrgJodaTimeLocalDate class])) getLocalMillis]];
    return OrgJodaTimeMonths_monthsWithInt_(months);
  }
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePeriod_(start, end, OrgJodaTimeMonths_ZERO);
  return OrgJodaTimeMonths_monthsWithInt_(amount);
}

OrgJodaTimeMonths *OrgJodaTimeMonths_monthsInWithOrgJodaTimeReadableInterval_(id<OrgJodaTimeReadableInterval> interval) {
  OrgJodaTimeMonths_initialize();
  if (interval == nil) {
    return OrgJodaTimeMonths_ZERO;
  }
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_withOrgJodaTimeDurationFieldType_([((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStart], [interval getEnd], OrgJodaTimeDurationFieldType_months());
  return OrgJodaTimeMonths_monthsWithInt_(amount);
}

OrgJodaTimeMonths *OrgJodaTimeMonths_parseMonthsWithNSString_(NSString *periodStr) {
  OrgJodaTimeMonths_initialize();
  if (periodStr == nil) {
    return OrgJodaTimeMonths_ZERO;
  }
  OrgJodaTimePeriod *p = [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeMonths_PARSER)) parsePeriodWithNSString:periodStr];
  return OrgJodaTimeMonths_monthsWithInt_([((OrgJodaTimePeriod *) nil_chk(p)) getMonths]);
}

void OrgJodaTimeMonths_initWithInt_(OrgJodaTimeMonths *self, jint months) {
  OrgJodaTimeBaseBaseSingleFieldPeriod_initWithInt_(self, months);
}

OrgJodaTimeMonths *new_OrgJodaTimeMonths_initWithInt_(jint months) {
  OrgJodaTimeMonths *self = [OrgJodaTimeMonths alloc];
  OrgJodaTimeMonths_initWithInt_(self, months);
  return self;
}

OrgJodaTimeMonths *create_OrgJodaTimeMonths_initWithInt_(jint months) {
  OrgJodaTimeMonths *self = [[OrgJodaTimeMonths alloc] autorelease];
  OrgJodaTimeMonths_initWithInt_(self, months);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeMonths)
