//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/convert/ReadableInstantConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/DateTimeZone.h"
#include "org/joda/time/ReadableInstant.h"
#include "org/joda/time/chrono/ISOChronology.h"
#include "org/joda/time/convert/AbstractConverter.h"
#include "org/joda/time/convert/ReadableInstantConverter.h"

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeConvertReadableInstantConverter)

OrgJodaTimeConvertReadableInstantConverter *OrgJodaTimeConvertReadableInstantConverter_INSTANCE;

@implementation OrgJodaTimeConvertReadableInstantConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeConvertReadableInstantConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJodaTimeChronology *)getChronologyWithId:(id)object
                   withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone {
  OrgJodaTimeChronology *chrono = [((id<OrgJodaTimeReadableInstant>) nil_chk(((id<OrgJodaTimeReadableInstant>) cast_check(object, OrgJodaTimeReadableInstant_class_())))) getChronology];
  if (chrono == nil) {
    return OrgJodaTimeChronoISOChronology_getInstanceWithOrgJodaTimeDateTimeZone_(zone);
  }
  OrgJodaTimeDateTimeZone *chronoZone = [((OrgJodaTimeChronology *) nil_chk(chrono)) getZone];
  if (chronoZone != zone) {
    chrono = [chrono withZoneWithOrgJodaTimeDateTimeZone:zone];
    if (chrono == nil) {
      return OrgJodaTimeChronoISOChronology_getInstanceWithOrgJodaTimeDateTimeZone_(zone);
    }
  }
  return chrono;
}

- (OrgJodaTimeChronology *)getChronologyWithId:(id)object
                     withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  if (chrono == nil) {
    chrono = [((id<OrgJodaTimeReadableInstant>) nil_chk(((id<OrgJodaTimeReadableInstant>) cast_check(object, OrgJodaTimeReadableInstant_class_())))) getChronology];
    chrono = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(chrono);
  }
  return chrono;
}

- (jlong)getInstantMillisWithId:(id)object
      withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  return [((id<OrgJodaTimeReadableInstant>) nil_chk(((id<OrgJodaTimeReadableInstant>) cast_check(object, OrgJodaTimeReadableInstant_class_())))) getMillis];
}

- (IOSClass *)getSupportedType {
  return OrgJodaTimeReadableInstant_class_();
}

+ (void)initialize {
  if (self == [OrgJodaTimeConvertReadableInstantConverter class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeConvertReadableInstantConverter_INSTANCE, new_OrgJodaTimeConvertReadableInstantConverter_init());
    J2OBJC_SET_INITIALIZED(OrgJodaTimeConvertReadableInstantConverter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ReadableInstantConverter", NULL, 0x4, NULL, NULL },
    { "getChronologyWithId:withOrgJodaTimeDateTimeZone:", "getChronology", "Lorg.joda.time.Chronology;", 0x1, NULL, NULL },
    { "getChronologyWithId:withOrgJodaTimeChronology:", "getChronology", "Lorg.joda.time.Chronology;", 0x1, NULL, NULL },
    { "getInstantMillisWithId:withOrgJodaTimeChronology:", "getInstantMillis", "J", 0x1, NULL, NULL },
    { "getSupportedType", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<*>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "INSTANCE", 0x18, "Lorg.joda.time.convert.ReadableInstantConverter;", &OrgJodaTimeConvertReadableInstantConverter_INSTANCE, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeConvertReadableInstantConverter = { 2, "ReadableInstantConverter", "org.joda.time.convert", NULL, 0x0, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeConvertReadableInstantConverter;
}

@end

void OrgJodaTimeConvertReadableInstantConverter_init(OrgJodaTimeConvertReadableInstantConverter *self) {
  OrgJodaTimeConvertAbstractConverter_init(self);
}

OrgJodaTimeConvertReadableInstantConverter *new_OrgJodaTimeConvertReadableInstantConverter_init() {
  OrgJodaTimeConvertReadableInstantConverter *self = [OrgJodaTimeConvertReadableInstantConverter alloc];
  OrgJodaTimeConvertReadableInstantConverter_init(self);
  return self;
}

OrgJodaTimeConvertReadableInstantConverter *create_OrgJodaTimeConvertReadableInstantConverter_init() {
  OrgJodaTimeConvertReadableInstantConverter *self = [[OrgJodaTimeConvertReadableInstantConverter alloc] autorelease];
  OrgJodaTimeConvertReadableInstantConverter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeConvertReadableInstantConverter)
