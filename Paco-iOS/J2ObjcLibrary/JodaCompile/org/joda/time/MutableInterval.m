//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/MutableInterval.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InternalError.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/MutableInterval.h"
#include "org/joda/time/ReadableDuration.h"
#include "org/joda/time/ReadableInstant.h"
#include "org/joda/time/ReadableInterval.h"
#include "org/joda/time/ReadablePeriod.h"
#include "org/joda/time/base/BaseInterval.h"
#include "org/joda/time/field/FieldUtils.h"

inline jlong OrgJodaTimeMutableInterval_get_serialVersionUID();
#define OrgJodaTimeMutableInterval_serialVersionUID -5982824024992428470LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeMutableInterval, serialVersionUID, jlong)

@implementation OrgJodaTimeMutableInterval

+ (OrgJodaTimeMutableInterval *)parseWithNSString:(NSString *)str {
  return OrgJodaTimeMutableInterval_parseWithNSString_(str);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeMutableInterval_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithLong:(jlong)startInstant
                    withLong:(jlong)endInstant {
  OrgJodaTimeMutableInterval_initWithLong_withLong_(self, startInstant, endInstant);
  return self;
}

- (instancetype)initWithLong:(jlong)startInstant
                    withLong:(jlong)endInstant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeMutableInterval_initWithLong_withLong_withOrgJodaTimeChronology_(self, startInstant, endInstant, chronology);
  return self;
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                    withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(self, start, end);
  return self;
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                   withOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(self, start, duration);
  return self;
}

- (instancetype)initWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration
                     withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(self, duration, end);
  return self;
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                     withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(self, start, period);
  return self;
}

- (instancetype)initWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                   withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(self, period, end);
  return self;
}

- (instancetype)initWithId:(id)interval {
  OrgJodaTimeMutableInterval_initWithId_(self, interval);
  return self;
}

- (instancetype)initWithId:(id)interval
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeMutableInterval_initWithId_withOrgJodaTimeChronology_(self, interval, chronology);
  return self;
}

- (void)setIntervalWithLong:(jlong)startInstant
                   withLong:(jlong)endInstant {
  [super setIntervalWithLong:startInstant withLong:endInstant withOrgJodaTimeChronology:[self getChronology]];
}

- (void)setIntervalWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  if (interval == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Interval must not be null");
  }
  jlong startMillis = [((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStartMillis];
  jlong endMillis = [interval getEndMillis];
  OrgJodaTimeChronology *chrono = [interval getChronology];
  [super setIntervalWithLong:startMillis withLong:endMillis withOrgJodaTimeChronology:chrono];
}

- (void)setIntervalWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                   withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  if (start == nil && end == nil) {
    jlong now = OrgJodaTimeDateTimeUtils_currentTimeMillis();
    [self setIntervalWithLong:now withLong:now];
  }
  else {
    jlong startMillis = OrgJodaTimeDateTimeUtils_getInstantMillisWithOrgJodaTimeReadableInstant_(start);
    jlong endMillis = OrgJodaTimeDateTimeUtils_getInstantMillisWithOrgJodaTimeReadableInstant_(end);
    OrgJodaTimeChronology *chrono = OrgJodaTimeDateTimeUtils_getInstantChronologyWithOrgJodaTimeReadableInstant_(start);
    [super setIntervalWithLong:startMillis withLong:endMillis withOrgJodaTimeChronology:chrono];
  }
}

- (void)setChronologyWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  [super setIntervalWithLong:[self getStartMillis] withLong:[self getEndMillis] withOrgJodaTimeChronology:chrono];
}

- (void)setStartMillisWithLong:(jlong)startInstant {
  [super setIntervalWithLong:startInstant withLong:[self getEndMillis] withOrgJodaTimeChronology:[self getChronology]];
}

- (void)setStartWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start {
  jlong startMillis = OrgJodaTimeDateTimeUtils_getInstantMillisWithOrgJodaTimeReadableInstant_(start);
  [super setIntervalWithLong:startMillis withLong:[self getEndMillis] withOrgJodaTimeChronology:[self getChronology]];
}

- (void)setEndMillisWithLong:(jlong)endInstant {
  [super setIntervalWithLong:[self getStartMillis] withLong:endInstant withOrgJodaTimeChronology:[self getChronology]];
}

- (void)setEndWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  jlong endMillis = OrgJodaTimeDateTimeUtils_getInstantMillisWithOrgJodaTimeReadableInstant_(end);
  [super setIntervalWithLong:[self getStartMillis] withLong:endMillis withOrgJodaTimeChronology:[self getChronology]];
}

- (void)setDurationAfterStartWithLong:(jlong)duration {
  [self setEndMillisWithLong:OrgJodaTimeFieldFieldUtils_safeAddWithLong_withLong_([self getStartMillis], duration)];
}

- (void)setDurationBeforeEndWithLong:(jlong)duration {
  [self setStartMillisWithLong:OrgJodaTimeFieldFieldUtils_safeAddWithLong_withLong_([self getEndMillis], -duration)];
}

- (void)setDurationAfterStartWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  jlong durationMillis = OrgJodaTimeDateTimeUtils_getDurationMillisWithOrgJodaTimeReadableDuration_(duration);
  [self setEndMillisWithLong:OrgJodaTimeFieldFieldUtils_safeAddWithLong_withLong_([self getStartMillis], durationMillis)];
}

- (void)setDurationBeforeEndWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  jlong durationMillis = OrgJodaTimeDateTimeUtils_getDurationMillisWithOrgJodaTimeReadableDuration_(duration);
  [self setStartMillisWithLong:OrgJodaTimeFieldFieldUtils_safeAddWithLong_withLong_([self getEndMillis], -durationMillis)];
}

- (void)setPeriodAfterStartWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  if (period == nil) {
    [self setEndMillisWithLong:[self getStartMillis]];
  }
  else {
    [self setEndMillisWithLong:[((OrgJodaTimeChronology *) nil_chk([self getChronology])) addWithOrgJodaTimeReadablePeriod:period withLong:[self getStartMillis] withInt:1]];
  }
}

- (void)setPeriodBeforeEndWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  if (period == nil) {
    [self setStartMillisWithLong:[self getEndMillis]];
  }
  else {
    [self setStartMillisWithLong:[((OrgJodaTimeChronology *) nil_chk([self getChronology])) addWithOrgJodaTimeReadablePeriod:period withLong:[self getEndMillis] withInt:-1]];
  }
}

- (OrgJodaTimeMutableInterval *)copy__ {
  return (OrgJodaTimeMutableInterval *) cast_chk([self clone], [OrgJodaTimeMutableInterval class]);
}

- (id)clone {
  @try {
    return [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *ex) {
    @throw create_JavaLangInternalError_initWithNSString_(@"Clone error");
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self clone] retain];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "parseWithNSString:", "parse", "Lorg.joda.time.MutableInterval;", 0x9, NULL, NULL },
    { "init", "MutableInterval", NULL, 0x1, NULL, NULL },
    { "initWithLong:withLong:", "MutableInterval", NULL, 0x1, NULL, NULL },
    { "initWithLong:withLong:withOrgJodaTimeChronology:", "MutableInterval", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "MutableInterval", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableDuration:", "MutableInterval", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeReadableDuration:withOrgJodaTimeReadableInstant:", "MutableInterval", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadablePeriod:", "MutableInterval", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeReadablePeriod:withOrgJodaTimeReadableInstant:", "MutableInterval", NULL, 0x1, NULL, NULL },
    { "initWithId:", "MutableInterval", NULL, 0x1, NULL, NULL },
    { "initWithId:withOrgJodaTimeChronology:", "MutableInterval", NULL, 0x1, NULL, NULL },
    { "setIntervalWithLong:withLong:", "setInterval", "V", 0x1, NULL, NULL },
    { "setIntervalWithOrgJodaTimeReadableInterval:", "setInterval", "V", 0x1, NULL, NULL },
    { "setIntervalWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "setInterval", "V", 0x1, NULL, NULL },
    { "setChronologyWithOrgJodaTimeChronology:", "setChronology", "V", 0x1, NULL, NULL },
    { "setStartMillisWithLong:", "setStartMillis", "V", 0x1, NULL, NULL },
    { "setStartWithOrgJodaTimeReadableInstant:", "setStart", "V", 0x1, NULL, NULL },
    { "setEndMillisWithLong:", "setEndMillis", "V", 0x1, NULL, NULL },
    { "setEndWithOrgJodaTimeReadableInstant:", "setEnd", "V", 0x1, NULL, NULL },
    { "setDurationAfterStartWithLong:", "setDurationAfterStart", "V", 0x1, NULL, NULL },
    { "setDurationBeforeEndWithLong:", "setDurationBeforeEnd", "V", 0x1, NULL, NULL },
    { "setDurationAfterStartWithOrgJodaTimeReadableDuration:", "setDurationAfterStart", "V", 0x1, NULL, NULL },
    { "setDurationBeforeEndWithOrgJodaTimeReadableDuration:", "setDurationBeforeEnd", "V", 0x1, NULL, NULL },
    { "setPeriodAfterStartWithOrgJodaTimeReadablePeriod:", "setPeriodAfterStart", "V", 0x1, NULL, NULL },
    { "setPeriodBeforeEndWithOrgJodaTimeReadablePeriod:", "setPeriodBeforeEnd", "V", 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.joda.time.MutableInterval;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeMutableInterval_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgJodaTimeMutableInterval = { 2, "MutableInterval", "org.joda.time", NULL, 0x1, 27, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeMutableInterval;
}

@end

OrgJodaTimeMutableInterval *OrgJodaTimeMutableInterval_parseWithNSString_(NSString *str) {
  OrgJodaTimeMutableInterval_initialize();
  return create_OrgJodaTimeMutableInterval_initWithId_(str);
}

void OrgJodaTimeMutableInterval_init(OrgJodaTimeMutableInterval *self) {
  OrgJodaTimeBaseBaseInterval_initWithLong_withLong_withOrgJodaTimeChronology_(self, 0LL, 0LL, nil);
}

OrgJodaTimeMutableInterval *new_OrgJodaTimeMutableInterval_init() {
  OrgJodaTimeMutableInterval *self = [OrgJodaTimeMutableInterval alloc];
  OrgJodaTimeMutableInterval_init(self);
  return self;
}

OrgJodaTimeMutableInterval *create_OrgJodaTimeMutableInterval_init() {
  OrgJodaTimeMutableInterval *self = [[OrgJodaTimeMutableInterval alloc] autorelease];
  OrgJodaTimeMutableInterval_init(self);
  return self;
}

void OrgJodaTimeMutableInterval_initWithLong_withLong_(OrgJodaTimeMutableInterval *self, jlong startInstant, jlong endInstant) {
  OrgJodaTimeBaseBaseInterval_initWithLong_withLong_withOrgJodaTimeChronology_(self, startInstant, endInstant, nil);
}

OrgJodaTimeMutableInterval *new_OrgJodaTimeMutableInterval_initWithLong_withLong_(jlong startInstant, jlong endInstant) {
  OrgJodaTimeMutableInterval *self = [OrgJodaTimeMutableInterval alloc];
  OrgJodaTimeMutableInterval_initWithLong_withLong_(self, startInstant, endInstant);
  return self;
}

OrgJodaTimeMutableInterval *create_OrgJodaTimeMutableInterval_initWithLong_withLong_(jlong startInstant, jlong endInstant) {
  OrgJodaTimeMutableInterval *self = [[OrgJodaTimeMutableInterval alloc] autorelease];
  OrgJodaTimeMutableInterval_initWithLong_withLong_(self, startInstant, endInstant);
  return self;
}

void OrgJodaTimeMutableInterval_initWithLong_withLong_withOrgJodaTimeChronology_(OrgJodaTimeMutableInterval *self, jlong startInstant, jlong endInstant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBaseInterval_initWithLong_withLong_withOrgJodaTimeChronology_(self, startInstant, endInstant, chronology);
}

OrgJodaTimeMutableInterval *new_OrgJodaTimeMutableInterval_initWithLong_withLong_withOrgJodaTimeChronology_(jlong startInstant, jlong endInstant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeMutableInterval *self = [OrgJodaTimeMutableInterval alloc];
  OrgJodaTimeMutableInterval_initWithLong_withLong_withOrgJodaTimeChronology_(self, startInstant, endInstant, chronology);
  return self;
}

OrgJodaTimeMutableInterval *create_OrgJodaTimeMutableInterval_initWithLong_withLong_withOrgJodaTimeChronology_(jlong startInstant, jlong endInstant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeMutableInterval *self = [[OrgJodaTimeMutableInterval alloc] autorelease];
  OrgJodaTimeMutableInterval_initWithLong_withLong_withOrgJodaTimeChronology_(self, startInstant, endInstant, chronology);
  return self;
}

void OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(OrgJodaTimeMutableInterval *self, id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeBaseBaseInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(self, start, end);
}

OrgJodaTimeMutableInterval *new_OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeMutableInterval *self = [OrgJodaTimeMutableInterval alloc];
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(self, start, end);
  return self;
}

OrgJodaTimeMutableInterval *create_OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeMutableInterval *self = [[OrgJodaTimeMutableInterval alloc] autorelease];
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(self, start, end);
  return self;
}

void OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(OrgJodaTimeMutableInterval *self, id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableDuration> duration) {
  OrgJodaTimeBaseBaseInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(self, start, duration);
}

OrgJodaTimeMutableInterval *new_OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableDuration> duration) {
  OrgJodaTimeMutableInterval *self = [OrgJodaTimeMutableInterval alloc];
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(self, start, duration);
  return self;
}

OrgJodaTimeMutableInterval *create_OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableDuration> duration) {
  OrgJodaTimeMutableInterval *self = [[OrgJodaTimeMutableInterval alloc] autorelease];
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(self, start, duration);
  return self;
}

void OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(OrgJodaTimeMutableInterval *self, id<OrgJodaTimeReadableDuration> duration, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeBaseBaseInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(self, duration, end);
}

OrgJodaTimeMutableInterval *new_OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableDuration> duration, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeMutableInterval *self = [OrgJodaTimeMutableInterval alloc];
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(self, duration, end);
  return self;
}

OrgJodaTimeMutableInterval *create_OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableDuration> duration, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeMutableInterval *self = [[OrgJodaTimeMutableInterval alloc] autorelease];
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(self, duration, end);
  return self;
}

void OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(OrgJodaTimeMutableInterval *self, id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadablePeriod> period) {
  OrgJodaTimeBaseBaseInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(self, start, period);
}

OrgJodaTimeMutableInterval *new_OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadablePeriod> period) {
  OrgJodaTimeMutableInterval *self = [OrgJodaTimeMutableInterval alloc];
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(self, start, period);
  return self;
}

OrgJodaTimeMutableInterval *create_OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadablePeriod> period) {
  OrgJodaTimeMutableInterval *self = [[OrgJodaTimeMutableInterval alloc] autorelease];
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(self, start, period);
  return self;
}

void OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(OrgJodaTimeMutableInterval *self, id<OrgJodaTimeReadablePeriod> period, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeBaseBaseInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(self, period, end);
}

OrgJodaTimeMutableInterval *new_OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadablePeriod> period, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeMutableInterval *self = [OrgJodaTimeMutableInterval alloc];
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(self, period, end);
  return self;
}

OrgJodaTimeMutableInterval *create_OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadablePeriod> period, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeMutableInterval *self = [[OrgJodaTimeMutableInterval alloc] autorelease];
  OrgJodaTimeMutableInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(self, period, end);
  return self;
}

void OrgJodaTimeMutableInterval_initWithId_(OrgJodaTimeMutableInterval *self, id interval) {
  OrgJodaTimeBaseBaseInterval_initWithId_withOrgJodaTimeChronology_(self, interval, nil);
}

OrgJodaTimeMutableInterval *new_OrgJodaTimeMutableInterval_initWithId_(id interval) {
  OrgJodaTimeMutableInterval *self = [OrgJodaTimeMutableInterval alloc];
  OrgJodaTimeMutableInterval_initWithId_(self, interval);
  return self;
}

OrgJodaTimeMutableInterval *create_OrgJodaTimeMutableInterval_initWithId_(id interval) {
  OrgJodaTimeMutableInterval *self = [[OrgJodaTimeMutableInterval alloc] autorelease];
  OrgJodaTimeMutableInterval_initWithId_(self, interval);
  return self;
}

void OrgJodaTimeMutableInterval_initWithId_withOrgJodaTimeChronology_(OrgJodaTimeMutableInterval *self, id interval, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBaseInterval_initWithId_withOrgJodaTimeChronology_(self, interval, chronology);
}

OrgJodaTimeMutableInterval *new_OrgJodaTimeMutableInterval_initWithId_withOrgJodaTimeChronology_(id interval, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeMutableInterval *self = [OrgJodaTimeMutableInterval alloc];
  OrgJodaTimeMutableInterval_initWithId_withOrgJodaTimeChronology_(self, interval, chronology);
  return self;
}

OrgJodaTimeMutableInterval *create_OrgJodaTimeMutableInterval_initWithId_withOrgJodaTimeChronology_(id interval, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeMutableInterval *self = [[OrgJodaTimeMutableInterval alloc] autorelease];
  OrgJodaTimeMutableInterval_initWithId_withOrgJodaTimeChronology_(self, interval, chronology);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeMutableInterval)
