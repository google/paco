//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/base/BasePartial.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeBaseBasePartial_INCLUDE_ALL")
#ifdef OrgJodaTimeBaseBasePartial_RESTRICT
#define OrgJodaTimeBaseBasePartial_INCLUDE_ALL 0
#else
#define OrgJodaTimeBaseBasePartial_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeBaseBasePartial_RESTRICT

#if !defined (OrgJodaTimeBaseBasePartial_) && (OrgJodaTimeBaseBasePartial_INCLUDE_ALL || defined(OrgJodaTimeBaseBasePartial_INCLUDE))
#define OrgJodaTimeBaseBasePartial_

#define OrgJodaTimeBaseAbstractPartial_RESTRICT 1
#define OrgJodaTimeBaseAbstractPartial_INCLUDE 1
#include "org/joda/time/base/AbstractPartial.h"

#define OrgJodaTimeReadablePartial_RESTRICT 1
#define OrgJodaTimeReadablePartial_INCLUDE 1
#include "org/joda/time/ReadablePartial.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class IOSIntArray;
@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeFormatDateTimeFormatter;

@interface OrgJodaTimeBaseBasePartial : OrgJodaTimeBaseAbstractPartial < OrgJodaTimeReadablePartial, JavaIoSerializable >

#pragma mark Public

- (OrgJodaTimeChronology *)getChronology;

- (jint)getValueWithInt:(jint)index;

- (IOSIntArray *)getValues;

- (NSString *)toStringWithNSString:(NSString *)pattern;

- (NSString *)toStringWithNSString:(NSString *)pattern
                withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Protected

- (instancetype)init;

- (instancetype)initWithOrgJodaTimeBaseBasePartial:(OrgJodaTimeBaseBasePartial *)base
                         withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

- (instancetype)initWithOrgJodaTimeBaseBasePartial:(OrgJodaTimeBaseBasePartial *)base
                                      withIntArray:(IOSIntArray *)values;

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithIntArray:(IOSIntArray *)values
       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithLong:(jlong)instant;

- (instancetype)initWithLong:(jlong)instant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithId:(id)instant
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithId:(id)instant
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology
withOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)parser;

- (void)setValueWithInt:(jint)index
                withInt:(jint)value;

- (void)setValuesWithIntArray:(IOSIntArray *)values;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeBaseBasePartial)

FOUNDATION_EXPORT void OrgJodaTimeBaseBasePartial_init(OrgJodaTimeBaseBasePartial *self);

FOUNDATION_EXPORT void OrgJodaTimeBaseBasePartial_initWithOrgJodaTimeChronology_(OrgJodaTimeBaseBasePartial *self, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeBaseBasePartial_initWithLong_(OrgJodaTimeBaseBasePartial *self, jlong instant);

FOUNDATION_EXPORT void OrgJodaTimeBaseBasePartial_initWithLong_withOrgJodaTimeChronology_(OrgJodaTimeBaseBasePartial *self, jlong instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeBaseBasePartial_initWithId_withOrgJodaTimeChronology_(OrgJodaTimeBaseBasePartial *self, id instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeBaseBasePartial_initWithId_withOrgJodaTimeChronology_withOrgJodaTimeFormatDateTimeFormatter_(OrgJodaTimeBaseBasePartial *self, id instant, OrgJodaTimeChronology *chronology, OrgJodaTimeFormatDateTimeFormatter *parser);

FOUNDATION_EXPORT void OrgJodaTimeBaseBasePartial_initWithIntArray_withOrgJodaTimeChronology_(OrgJodaTimeBaseBasePartial *self, IOSIntArray *values, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeBaseBasePartial_initWithOrgJodaTimeBaseBasePartial_withIntArray_(OrgJodaTimeBaseBasePartial *self, OrgJodaTimeBaseBasePartial *base, IOSIntArray *values);

FOUNDATION_EXPORT void OrgJodaTimeBaseBasePartial_initWithOrgJodaTimeBaseBasePartial_withOrgJodaTimeChronology_(OrgJodaTimeBaseBasePartial *self, OrgJodaTimeBaseBasePartial *base, OrgJodaTimeChronology *chrono);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeBaseBasePartial)

#endif

#pragma pop_macro("OrgJodaTimeBaseBasePartial_INCLUDE_ALL")
