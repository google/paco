//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/chrono/BasicChronology.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeChronoBasicChronology_INCLUDE_ALL")
#ifdef OrgJodaTimeChronoBasicChronology_RESTRICT
#define OrgJodaTimeChronoBasicChronology_INCLUDE_ALL 0
#else
#define OrgJodaTimeChronoBasicChronology_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeChronoBasicChronology_RESTRICT

#if !defined (OrgJodaTimeChronoBasicChronology_) && (OrgJodaTimeChronoBasicChronology_INCLUDE_ALL || defined(OrgJodaTimeChronoBasicChronology_INCLUDE))
#define OrgJodaTimeChronoBasicChronology_

#define OrgJodaTimeChronoAssembledChronology_RESTRICT 1
#define OrgJodaTimeChronoAssembledChronology_INCLUDE 1
#include "org/joda/time/chrono/AssembledChronology.h"

@class OrgJodaTimeChronoAssembledChronology_Fields;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;

@interface OrgJodaTimeChronoBasicChronology : OrgJodaTimeChronoAssembledChronology

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (jlong)getDateTimeMillisWithInt:(jint)year
                          withInt:(jint)monthOfYear
                          withInt:(jint)dayOfMonth
                          withInt:(jint)millisOfDay;

- (jlong)getDateTimeMillisWithInt:(jint)year
                          withInt:(jint)monthOfYear
                          withInt:(jint)dayOfMonth
                          withInt:(jint)hourOfDay
                          withInt:(jint)minuteOfHour
                          withInt:(jint)secondOfMinute
                          withInt:(jint)millisOfSecond;

- (jint)getMinimumDaysInFirstWeek;

- (OrgJodaTimeDateTimeZone *)getZone;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Protected

- (void)assembleWithOrgJodaTimeChronoAssembledChronology_Fields:(OrgJodaTimeChronoAssembledChronology_Fields *)fields;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base
                                       withId:(id)param
                                      withInt:(jint)minDaysInFirstWeek;

- (jlong)calculateFirstDayOfYearMillisWithInt:(jint)year;

- (jlong)getApproxMillisAtEpochDividedByTwo;

- (jlong)getAverageMillisPerMonth;

- (jlong)getAverageMillisPerYear;

- (jlong)getAverageMillisPerYearDividedByTwo;

- (jlong)getDateMidnightMillisWithInt:(jint)year
                              withInt:(jint)monthOfYear
                              withInt:(jint)dayOfMonth;

- (jint)getDayOfMonthWithLong:(jlong)millis;

- (jint)getDayOfMonthWithLong:(jlong)millis
                      withInt:(jint)year;

- (jint)getDayOfMonthWithLong:(jlong)millis
                      withInt:(jint)year
                      withInt:(jint)month;

- (jint)getDayOfWeekWithLong:(jlong)instant;

- (jint)getDayOfYearWithLong:(jlong)instant;

- (jint)getDayOfYearWithLong:(jlong)instant
                     withInt:(jint)year;

- (jint)getDaysInMonthMax;

- (jint)getDaysInMonthMaxWithInt:(jint)month;

- (jint)getDaysInMonthMaxWithLong:(jlong)instant;

- (jint)getDaysInMonthMaxForSetWithLong:(jlong)instant
                                withInt:(jint)value;

- (jint)getDaysInYearWithInt:(jint)year;

- (jint)getDaysInYearMax;

- (jint)getDaysInYearMonthWithInt:(jint)year
                          withInt:(jint)month;

- (jlong)getFirstWeekOfYearMillisWithInt:(jint)year;

- (jint)getMaxMonth;

- (jint)getMaxMonthWithInt:(jint)year;

- (jint)getMaxYear;

- (jint)getMillisOfDayWithLong:(jlong)instant;

- (jint)getMinYear;

- (jint)getMonthOfYearWithLong:(jlong)millis;

- (jint)getMonthOfYearWithLong:(jlong)millis
                       withInt:(jint)year;

- (jlong)getTotalMillisByYearMonthWithInt:(jint)year
                                  withInt:(jint)month;

- (jint)getWeekOfWeekyearWithLong:(jlong)instant;

- (jint)getWeekOfWeekyearWithLong:(jlong)instant
                          withInt:(jint)year;

- (jint)getWeeksInYearWithInt:(jint)year;

- (jint)getWeekyearWithLong:(jlong)instant;

- (jint)getYearWithLong:(jlong)instant;

- (jlong)getYearDifferenceWithLong:(jlong)minuendInstant
                          withLong:(jlong)subtrahendInstant;

- (jlong)getYearMillisWithInt:(jint)year;

- (jlong)getYearMonthDayMillisWithInt:(jint)year
                              withInt:(jint)month
                              withInt:(jint)dayOfMonth;

- (jlong)getYearMonthMillisWithInt:(jint)year
                           withInt:(jint)month;

- (jboolean)isLeapDayWithLong:(jlong)instant;

- (jboolean)isLeapYearWithInt:(jint)year;

- (jlong)setYearWithLong:(jlong)instant
                 withInt:(jint)year;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeChronoBasicChronology)

FOUNDATION_EXPORT void OrgJodaTimeChronoBasicChronology_initWithOrgJodaTimeChronology_withId_withInt_(OrgJodaTimeChronoBasicChronology *self, OrgJodaTimeChronology *base, id param, jint minDaysInFirstWeek);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoBasicChronology)

#endif

#pragma pop_macro("OrgJodaTimeChronoBasicChronology_INCLUDE_ALL")
