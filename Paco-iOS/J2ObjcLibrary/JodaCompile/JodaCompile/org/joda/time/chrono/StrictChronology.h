//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/chrono/StrictChronology.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeChronoStrictChronology_INCLUDE_ALL")
#ifdef OrgJodaTimeChronoStrictChronology_RESTRICT
#define OrgJodaTimeChronoStrictChronology_INCLUDE_ALL 0
#else
#define OrgJodaTimeChronoStrictChronology_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeChronoStrictChronology_RESTRICT

#if !defined (OrgJodaTimeChronoStrictChronology_) && (OrgJodaTimeChronoStrictChronology_INCLUDE_ALL || defined(OrgJodaTimeChronoStrictChronology_INCLUDE))
#define OrgJodaTimeChronoStrictChronology_

#define OrgJodaTimeChronoAssembledChronology_RESTRICT 1
#define OrgJodaTimeChronoAssembledChronology_INCLUDE 1
#include "org/joda/time/chrono/AssembledChronology.h"

@class OrgJodaTimeChronoAssembledChronology_Fields;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;

@interface OrgJodaTimeChronoStrictChronology : OrgJodaTimeChronoAssembledChronology

#pragma mark Public

- (jboolean)isEqual:(id)obj;

+ (OrgJodaTimeChronoStrictChronology *)getInstanceWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base;

- (NSUInteger)hash;

- (NSString *)description;

- (OrgJodaTimeChronology *)withUTC;

- (OrgJodaTimeChronology *)withZoneWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

#pragma mark Protected

- (void)assembleWithOrgJodaTimeChronoAssembledChronology_Fields:(OrgJodaTimeChronoAssembledChronology_Fields *)fields;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoStrictChronology)

FOUNDATION_EXPORT OrgJodaTimeChronoStrictChronology *OrgJodaTimeChronoStrictChronology_getInstanceWithOrgJodaTimeChronology_(OrgJodaTimeChronology *base);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoStrictChronology)

#endif

#pragma pop_macro("OrgJodaTimeChronoStrictChronology_INCLUDE_ALL")
