//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/Days.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/joda/convert/FromString.h"
#include "org/joda/convert/ToString.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTime.h"
#include "org/joda/time/DateTimeConstants.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/Days.h"
#include "org/joda/time/Duration.h"
#include "org/joda/time/DurationField.h"
#include "org/joda/time/DurationFieldType.h"
#include "org/joda/time/Hours.h"
#include "org/joda/time/LocalDate.h"
#include "org/joda/time/Minutes.h"
#include "org/joda/time/Period.h"
#include "org/joda/time/PeriodType.h"
#include "org/joda/time/ReadableInstant.h"
#include "org/joda/time/ReadableInterval.h"
#include "org/joda/time/ReadablePartial.h"
#include "org/joda/time/ReadablePeriod.h"
#include "org/joda/time/Seconds.h"
#include "org/joda/time/Weeks.h"
#include "org/joda/time/base/BaseSingleFieldPeriod.h"
#include "org/joda/time/field/FieldUtils.h"
#include "org/joda/time/format/ISOPeriodFormat.h"
#include "org/joda/time/format/PeriodFormatter.h"

@interface OrgJodaTimeDays ()

- (instancetype)initWithInt:(jint)days;

- (id)readResolve;

@end

inline OrgJodaTimeFormatPeriodFormatter *OrgJodaTimeDays_get_PARSER();
static OrgJodaTimeFormatPeriodFormatter *OrgJodaTimeDays_PARSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDays, PARSER, OrgJodaTimeFormatPeriodFormatter *)

inline jlong OrgJodaTimeDays_get_serialVersionUID();
#define OrgJodaTimeDays_serialVersionUID 87525275727380865LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDays, serialVersionUID, jlong)

__attribute__((unused)) static void OrgJodaTimeDays_initWithInt_(OrgJodaTimeDays *self, jint days);

__attribute__((unused)) static OrgJodaTimeDays *new_OrgJodaTimeDays_initWithInt_(jint days) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeDays *create_OrgJodaTimeDays_initWithInt_(jint days);

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeDays)

OrgJodaTimeDays *OrgJodaTimeDays_ZERO;
OrgJodaTimeDays *OrgJodaTimeDays_ONE;
OrgJodaTimeDays *OrgJodaTimeDays_TWO;
OrgJodaTimeDays *OrgJodaTimeDays_THREE;
OrgJodaTimeDays *OrgJodaTimeDays_FOUR;
OrgJodaTimeDays *OrgJodaTimeDays_FIVE;
OrgJodaTimeDays *OrgJodaTimeDays_SIX;
OrgJodaTimeDays *OrgJodaTimeDays_SEVEN;
OrgJodaTimeDays *OrgJodaTimeDays_MAX_VALUE;
OrgJodaTimeDays *OrgJodaTimeDays_MIN_VALUE;

@implementation OrgJodaTimeDays

+ (OrgJodaTimeDays *)daysWithInt:(jint)days {
  return OrgJodaTimeDays_daysWithInt_(days);
}

+ (OrgJodaTimeDays *)daysBetweenWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                                withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  return OrgJodaTimeDays_daysBetweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(start, end);
}

+ (OrgJodaTimeDays *)daysBetweenWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)start
                                withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)end {
  return OrgJodaTimeDays_daysBetweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_(start, end);
}

+ (OrgJodaTimeDays *)daysInWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  return OrgJodaTimeDays_daysInWithOrgJodaTimeReadableInterval_(interval);
}

+ (OrgJodaTimeDays *)standardDaysInWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  return OrgJodaTimeDays_standardDaysInWithOrgJodaTimeReadablePeriod_(period);
}

+ (OrgJodaTimeDays *)parseDaysWithNSString:(NSString *)periodStr {
  return OrgJodaTimeDays_parseDaysWithNSString_(periodStr);
}

- (instancetype)initWithInt:(jint)days {
  OrgJodaTimeDays_initWithInt_(self, days);
  return self;
}

- (id)readResolve {
  return OrgJodaTimeDays_daysWithInt_([self getValue]);
}

- (OrgJodaTimeDurationFieldType *)getFieldType {
  return OrgJodaTimeDurationFieldType_days();
}

- (OrgJodaTimePeriodType *)getPeriodType {
  return OrgJodaTimePeriodType_days();
}

- (OrgJodaTimeWeeks *)toStandardWeeks {
  return OrgJodaTimeWeeks_weeksWithInt_([self getValue] / OrgJodaTimeDateTimeConstants_DAYS_PER_WEEK);
}

- (OrgJodaTimeHours *)toStandardHours {
  return OrgJodaTimeHours_hoursWithInt_(OrgJodaTimeFieldFieldUtils_safeMultiplyWithInt_withInt_([self getValue], OrgJodaTimeDateTimeConstants_HOURS_PER_DAY));
}

- (OrgJodaTimeMinutes *)toStandardMinutes {
  return OrgJodaTimeMinutes_minutesWithInt_(OrgJodaTimeFieldFieldUtils_safeMultiplyWithInt_withInt_([self getValue], OrgJodaTimeDateTimeConstants_MINUTES_PER_DAY));
}

- (OrgJodaTimeSeconds *)toStandardSeconds {
  return OrgJodaTimeSeconds_secondsWithInt_(OrgJodaTimeFieldFieldUtils_safeMultiplyWithInt_withInt_([self getValue], OrgJodaTimeDateTimeConstants_SECONDS_PER_DAY));
}

- (OrgJodaTimeDuration *)toStandardDuration {
  jlong days = [self getValue];
  return create_OrgJodaTimeDuration_initWithLong_(days * OrgJodaTimeDateTimeConstants_MILLIS_PER_DAY);
}

- (jint)getDays {
  return [self getValue];
}

- (OrgJodaTimeDays *)plusWithInt:(jint)days {
  if (days == 0) {
    return self;
  }
  return OrgJodaTimeDays_daysWithInt_(OrgJodaTimeFieldFieldUtils_safeAddWithInt_withInt_([self getValue], days));
}

- (OrgJodaTimeDays *)plusWithOrgJodaTimeDays:(OrgJodaTimeDays *)days {
  if (days == nil) {
    return self;
  }
  return [self plusWithInt:[((OrgJodaTimeDays *) nil_chk(days)) getValue]];
}

- (OrgJodaTimeDays *)minusWithInt:(jint)days {
  return [self plusWithInt:OrgJodaTimeFieldFieldUtils_safeNegateWithInt_(days)];
}

- (OrgJodaTimeDays *)minusWithOrgJodaTimeDays:(OrgJodaTimeDays *)days {
  if (days == nil) {
    return self;
  }
  return [self minusWithInt:[((OrgJodaTimeDays *) nil_chk(days)) getValue]];
}

- (OrgJodaTimeDays *)multipliedByWithInt:(jint)scalar {
  return OrgJodaTimeDays_daysWithInt_(OrgJodaTimeFieldFieldUtils_safeMultiplyWithInt_withInt_([self getValue], scalar));
}

- (OrgJodaTimeDays *)dividedByWithInt:(jint)divisor {
  if (divisor == 1) {
    return self;
  }
  return OrgJodaTimeDays_daysWithInt_([self getValue] / divisor);
}

- (OrgJodaTimeDays *)negated {
  return OrgJodaTimeDays_daysWithInt_(OrgJodaTimeFieldFieldUtils_safeNegateWithInt_([self getValue]));
}

- (jboolean)isGreaterThanWithOrgJodaTimeDays:(OrgJodaTimeDays *)other {
  if (other == nil) {
    return [self getValue] > 0;
  }
  return [self getValue] > [((OrgJodaTimeDays *) nil_chk(other)) getValue];
}

- (jboolean)isLessThanWithOrgJodaTimeDays:(OrgJodaTimeDays *)other {
  if (other == nil) {
    return [self getValue] < 0;
  }
  return [self getValue] < [((OrgJodaTimeDays *) nil_chk(other)) getValue];
}

- (NSString *)description {
  return JreStrcat("C$C", 'P', NSString_valueOfInt_([self getValue]), 'D');
}

+ (void)initialize {
  if (self == [OrgJodaTimeDays class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeDays_ZERO, new_OrgJodaTimeDays_initWithInt_(0));
    JreStrongAssignAndConsume(&OrgJodaTimeDays_ONE, new_OrgJodaTimeDays_initWithInt_(1));
    JreStrongAssignAndConsume(&OrgJodaTimeDays_TWO, new_OrgJodaTimeDays_initWithInt_(2));
    JreStrongAssignAndConsume(&OrgJodaTimeDays_THREE, new_OrgJodaTimeDays_initWithInt_(3));
    JreStrongAssignAndConsume(&OrgJodaTimeDays_FOUR, new_OrgJodaTimeDays_initWithInt_(4));
    JreStrongAssignAndConsume(&OrgJodaTimeDays_FIVE, new_OrgJodaTimeDays_initWithInt_(5));
    JreStrongAssignAndConsume(&OrgJodaTimeDays_SIX, new_OrgJodaTimeDays_initWithInt_(6));
    JreStrongAssignAndConsume(&OrgJodaTimeDays_SEVEN, new_OrgJodaTimeDays_initWithInt_(7));
    JreStrongAssignAndConsume(&OrgJodaTimeDays_MAX_VALUE, new_OrgJodaTimeDays_initWithInt_(JavaLangInteger_MAX_VALUE));
    JreStrongAssignAndConsume(&OrgJodaTimeDays_MIN_VALUE, new_OrgJodaTimeDays_initWithInt_(JavaLangInteger_MIN_VALUE));
    JreStrongAssign(&OrgJodaTimeDays_PARSER, [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeFormatISOPeriodFormat_standard())) withParseTypeWithOrgJodaTimePeriodType:OrgJodaTimePeriodType_days()]);
    J2OBJC_SET_INITIALIZED(OrgJodaTimeDays)
  }
}

+ (IOSObjectArray *)__annotations_parseDaysWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertFromString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_toString {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertToString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "daysWithInt:", "days", "Lorg.joda.time.Days;", 0x9, NULL, NULL },
    { "daysBetweenWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "daysBetween", "Lorg.joda.time.Days;", 0x9, NULL, NULL },
    { "daysBetweenWithOrgJodaTimeReadablePartial:withOrgJodaTimeReadablePartial:", "daysBetween", "Lorg.joda.time.Days;", 0x9, NULL, NULL },
    { "daysInWithOrgJodaTimeReadableInterval:", "daysIn", "Lorg.joda.time.Days;", 0x9, NULL, NULL },
    { "standardDaysInWithOrgJodaTimeReadablePeriod:", "standardDaysIn", "Lorg.joda.time.Days;", 0x9, NULL, NULL },
    { "parseDaysWithNSString:", "parseDays", "Lorg.joda.time.Days;", 0x9, NULL, NULL },
    { "initWithInt:", "Days", NULL, 0x2, NULL, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL, NULL },
    { "getFieldType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL, NULL },
    { "getPeriodType", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL, NULL },
    { "toStandardWeeks", NULL, "Lorg.joda.time.Weeks;", 0x1, NULL, NULL },
    { "toStandardHours", NULL, "Lorg.joda.time.Hours;", 0x1, NULL, NULL },
    { "toStandardMinutes", NULL, "Lorg.joda.time.Minutes;", 0x1, NULL, NULL },
    { "toStandardSeconds", NULL, "Lorg.joda.time.Seconds;", 0x1, NULL, NULL },
    { "toStandardDuration", NULL, "Lorg.joda.time.Duration;", 0x1, NULL, NULL },
    { "getDays", NULL, "I", 0x1, NULL, NULL },
    { "plusWithInt:", "plus", "Lorg.joda.time.Days;", 0x1, NULL, NULL },
    { "plusWithOrgJodaTimeDays:", "plus", "Lorg.joda.time.Days;", 0x1, NULL, NULL },
    { "minusWithInt:", "minus", "Lorg.joda.time.Days;", 0x1, NULL, NULL },
    { "minusWithOrgJodaTimeDays:", "minus", "Lorg.joda.time.Days;", 0x1, NULL, NULL },
    { "multipliedByWithInt:", "multipliedBy", "Lorg.joda.time.Days;", 0x1, NULL, NULL },
    { "dividedByWithInt:", "dividedBy", "Lorg.joda.time.Days;", 0x1, NULL, NULL },
    { "negated", NULL, "Lorg.joda.time.Days;", 0x1, NULL, NULL },
    { "isGreaterThanWithOrgJodaTimeDays:", "isGreaterThan", "Z", 0x1, NULL, NULL },
    { "isLessThanWithOrgJodaTimeDays:", "isLessThan", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "ZERO", 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_ZERO, NULL, .constantValue.asLong = 0 },
    { "ONE", "ONE", 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_ONE, NULL, .constantValue.asLong = 0 },
    { "TWO", "TWO", 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_TWO, NULL, .constantValue.asLong = 0 },
    { "THREE", "THREE", 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_THREE, NULL, .constantValue.asLong = 0 },
    { "FOUR", "FOUR", 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_FOUR, NULL, .constantValue.asLong = 0 },
    { "FIVE", "FIVE", 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_FIVE, NULL, .constantValue.asLong = 0 },
    { "SIX", "SIX", 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_SIX, NULL, .constantValue.asLong = 0 },
    { "SEVEN", "SEVEN", 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_SEVEN, NULL, .constantValue.asLong = 0 },
    { "MAX_VALUE", "MAX_VALUE", 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_MAX_VALUE, NULL, .constantValue.asLong = 0 },
    { "MIN_VALUE", "MIN_VALUE", 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_MIN_VALUE, NULL, .constantValue.asLong = 0 },
    { "PARSER", "PARSER", 0x1a, "Lorg.joda.time.format.PeriodFormatter;", &OrgJodaTimeDays_PARSER, NULL, .constantValue.asLong = 0 },
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeDays_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgJodaTimeDays = { 2, "Days", "org.joda.time", NULL, 0x11, 26, methods, 12, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeDays;
}

@end

OrgJodaTimeDays *OrgJodaTimeDays_daysWithInt_(jint days) {
  OrgJodaTimeDays_initialize();
  switch (days) {
    case 0:
    return OrgJodaTimeDays_ZERO;
    case 1:
    return OrgJodaTimeDays_ONE;
    case 2:
    return OrgJodaTimeDays_TWO;
    case 3:
    return OrgJodaTimeDays_THREE;
    case 4:
    return OrgJodaTimeDays_FOUR;
    case 5:
    return OrgJodaTimeDays_FIVE;
    case 6:
    return OrgJodaTimeDays_SIX;
    case 7:
    return OrgJodaTimeDays_SEVEN;
    case JavaLangInteger_MAX_VALUE:
    return OrgJodaTimeDays_MAX_VALUE;
    case JavaLangInteger_MIN_VALUE:
    return OrgJodaTimeDays_MIN_VALUE;
    default:
    return create_OrgJodaTimeDays_initWithInt_(days);
  }
}

OrgJodaTimeDays *OrgJodaTimeDays_daysBetweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeDays_initialize();
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_withOrgJodaTimeDurationFieldType_(start, end, OrgJodaTimeDurationFieldType_days());
  return OrgJodaTimeDays_daysWithInt_(amount);
}

OrgJodaTimeDays *OrgJodaTimeDays_daysBetweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_(id<OrgJodaTimeReadablePartial> start, id<OrgJodaTimeReadablePartial> end) {
  OrgJodaTimeDays_initialize();
  if ([start isKindOfClass:[OrgJodaTimeLocalDate class]] && [end isKindOfClass:[OrgJodaTimeLocalDate class]]) {
    OrgJodaTimeChronology *chrono = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_([((id<OrgJodaTimeReadablePartial>) nil_chk(start)) getChronology]);
    jint days = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk(chrono)) days])) getDifferenceWithLong:[((OrgJodaTimeLocalDate *) nil_chk(((OrgJodaTimeLocalDate *) cast_chk(end, [OrgJodaTimeLocalDate class])))) getLocalMillis] withLong:[((OrgJodaTimeLocalDate *) cast_chk(start, [OrgJodaTimeLocalDate class])) getLocalMillis]];
    return OrgJodaTimeDays_daysWithInt_(days);
  }
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePeriod_(start, end, OrgJodaTimeDays_ZERO);
  return OrgJodaTimeDays_daysWithInt_(amount);
}

OrgJodaTimeDays *OrgJodaTimeDays_daysInWithOrgJodaTimeReadableInterval_(id<OrgJodaTimeReadableInterval> interval) {
  OrgJodaTimeDays_initialize();
  if (interval == nil) {
    return OrgJodaTimeDays_ZERO;
  }
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_withOrgJodaTimeDurationFieldType_([((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStart], [interval getEnd], OrgJodaTimeDurationFieldType_days());
  return OrgJodaTimeDays_daysWithInt_(amount);
}

OrgJodaTimeDays *OrgJodaTimeDays_standardDaysInWithOrgJodaTimeReadablePeriod_(id<OrgJodaTimeReadablePeriod> period) {
  OrgJodaTimeDays_initialize();
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_standardPeriodInWithOrgJodaTimeReadablePeriod_withLong_(period, OrgJodaTimeDateTimeConstants_MILLIS_PER_DAY);
  return OrgJodaTimeDays_daysWithInt_(amount);
}

OrgJodaTimeDays *OrgJodaTimeDays_parseDaysWithNSString_(NSString *periodStr) {
  OrgJodaTimeDays_initialize();
  if (periodStr == nil) {
    return OrgJodaTimeDays_ZERO;
  }
  OrgJodaTimePeriod *p = [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeDays_PARSER)) parsePeriodWithNSString:periodStr];
  return OrgJodaTimeDays_daysWithInt_([((OrgJodaTimePeriod *) nil_chk(p)) getDays]);
}

void OrgJodaTimeDays_initWithInt_(OrgJodaTimeDays *self, jint days) {
  OrgJodaTimeBaseBaseSingleFieldPeriod_initWithInt_(self, days);
}

OrgJodaTimeDays *new_OrgJodaTimeDays_initWithInt_(jint days) {
  OrgJodaTimeDays *self = [OrgJodaTimeDays alloc];
  OrgJodaTimeDays_initWithInt_(self, days);
  return self;
}

OrgJodaTimeDays *create_OrgJodaTimeDays_initWithInt_(jint days) {
  OrgJodaTimeDays *self = [[OrgJodaTimeDays alloc] autorelease];
  OrgJodaTimeDays_initWithInt_(self, days);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeDays)
