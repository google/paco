//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/Seconds.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/joda/convert/FromString.h"
#include "org/joda/convert/ToString.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTime.h"
#include "org/joda/time/DateTimeConstants.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/Days.h"
#include "org/joda/time/Duration.h"
#include "org/joda/time/DurationField.h"
#include "org/joda/time/DurationFieldType.h"
#include "org/joda/time/Hours.h"
#include "org/joda/time/LocalTime.h"
#include "org/joda/time/Minutes.h"
#include "org/joda/time/Period.h"
#include "org/joda/time/PeriodType.h"
#include "org/joda/time/ReadableInstant.h"
#include "org/joda/time/ReadableInterval.h"
#include "org/joda/time/ReadablePartial.h"
#include "org/joda/time/ReadablePeriod.h"
#include "org/joda/time/Seconds.h"
#include "org/joda/time/Weeks.h"
#include "org/joda/time/base/BaseSingleFieldPeriod.h"
#include "org/joda/time/field/FieldUtils.h"
#include "org/joda/time/format/ISOPeriodFormat.h"
#include "org/joda/time/format/PeriodFormatter.h"

@interface OrgJodaTimeSeconds ()

- (instancetype)initWithInt:(jint)seconds;

- (id)readResolve;

@end

inline OrgJodaTimeFormatPeriodFormatter *OrgJodaTimeSeconds_get_PARSER();
static OrgJodaTimeFormatPeriodFormatter *OrgJodaTimeSeconds_PARSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeSeconds, PARSER, OrgJodaTimeFormatPeriodFormatter *)

inline jlong OrgJodaTimeSeconds_get_serialVersionUID();
#define OrgJodaTimeSeconds_serialVersionUID 87525275727380862LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeSeconds, serialVersionUID, jlong)

__attribute__((unused)) static void OrgJodaTimeSeconds_initWithInt_(OrgJodaTimeSeconds *self, jint seconds);

__attribute__((unused)) static OrgJodaTimeSeconds *new_OrgJodaTimeSeconds_initWithInt_(jint seconds) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeSeconds *create_OrgJodaTimeSeconds_initWithInt_(jint seconds);

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeSeconds)

OrgJodaTimeSeconds *OrgJodaTimeSeconds_ZERO;
OrgJodaTimeSeconds *OrgJodaTimeSeconds_ONE;
OrgJodaTimeSeconds *OrgJodaTimeSeconds_TWO;
OrgJodaTimeSeconds *OrgJodaTimeSeconds_THREE;
OrgJodaTimeSeconds *OrgJodaTimeSeconds_MAX_VALUE;
OrgJodaTimeSeconds *OrgJodaTimeSeconds_MIN_VALUE;

@implementation OrgJodaTimeSeconds

+ (OrgJodaTimeSeconds *)secondsWithInt:(jint)seconds {
  return OrgJodaTimeSeconds_secondsWithInt_(seconds);
}

+ (OrgJodaTimeSeconds *)secondsBetweenWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                                      withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  return OrgJodaTimeSeconds_secondsBetweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(start, end);
}

+ (OrgJodaTimeSeconds *)secondsBetweenWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)start
                                      withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)end {
  return OrgJodaTimeSeconds_secondsBetweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_(start, end);
}

+ (OrgJodaTimeSeconds *)secondsInWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  return OrgJodaTimeSeconds_secondsInWithOrgJodaTimeReadableInterval_(interval);
}

+ (OrgJodaTimeSeconds *)standardSecondsInWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  return OrgJodaTimeSeconds_standardSecondsInWithOrgJodaTimeReadablePeriod_(period);
}

+ (OrgJodaTimeSeconds *)parseSecondsWithNSString:(NSString *)periodStr {
  return OrgJodaTimeSeconds_parseSecondsWithNSString_(periodStr);
}

- (instancetype)initWithInt:(jint)seconds {
  OrgJodaTimeSeconds_initWithInt_(self, seconds);
  return self;
}

- (id)readResolve {
  return OrgJodaTimeSeconds_secondsWithInt_([self getValue]);
}

- (OrgJodaTimeDurationFieldType *)getFieldType {
  return OrgJodaTimeDurationFieldType_seconds();
}

- (OrgJodaTimePeriodType *)getPeriodType {
  return OrgJodaTimePeriodType_seconds();
}

- (OrgJodaTimeWeeks *)toStandardWeeks {
  return OrgJodaTimeWeeks_weeksWithInt_([self getValue] / OrgJodaTimeDateTimeConstants_SECONDS_PER_WEEK);
}

- (OrgJodaTimeDays *)toStandardDays {
  return OrgJodaTimeDays_daysWithInt_([self getValue] / OrgJodaTimeDateTimeConstants_SECONDS_PER_DAY);
}

- (OrgJodaTimeHours *)toStandardHours {
  return OrgJodaTimeHours_hoursWithInt_([self getValue] / OrgJodaTimeDateTimeConstants_SECONDS_PER_HOUR);
}

- (OrgJodaTimeMinutes *)toStandardMinutes {
  return OrgJodaTimeMinutes_minutesWithInt_([self getValue] / OrgJodaTimeDateTimeConstants_SECONDS_PER_MINUTE);
}

- (OrgJodaTimeDuration *)toStandardDuration {
  jlong seconds = [self getValue];
  return create_OrgJodaTimeDuration_initWithLong_(seconds * OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND);
}

- (jint)getSeconds {
  return [self getValue];
}

- (OrgJodaTimeSeconds *)plusWithInt:(jint)seconds {
  if (seconds == 0) {
    return self;
  }
  return OrgJodaTimeSeconds_secondsWithInt_(OrgJodaTimeFieldFieldUtils_safeAddWithInt_withInt_([self getValue], seconds));
}

- (OrgJodaTimeSeconds *)plusWithOrgJodaTimeSeconds:(OrgJodaTimeSeconds *)seconds {
  if (seconds == nil) {
    return self;
  }
  return [self plusWithInt:[((OrgJodaTimeSeconds *) nil_chk(seconds)) getValue]];
}

- (OrgJodaTimeSeconds *)minusWithInt:(jint)seconds {
  return [self plusWithInt:OrgJodaTimeFieldFieldUtils_safeNegateWithInt_(seconds)];
}

- (OrgJodaTimeSeconds *)minusWithOrgJodaTimeSeconds:(OrgJodaTimeSeconds *)seconds {
  if (seconds == nil) {
    return self;
  }
  return [self minusWithInt:[((OrgJodaTimeSeconds *) nil_chk(seconds)) getValue]];
}

- (OrgJodaTimeSeconds *)multipliedByWithInt:(jint)scalar {
  return OrgJodaTimeSeconds_secondsWithInt_(OrgJodaTimeFieldFieldUtils_safeMultiplyWithInt_withInt_([self getValue], scalar));
}

- (OrgJodaTimeSeconds *)dividedByWithInt:(jint)divisor {
  if (divisor == 1) {
    return self;
  }
  return OrgJodaTimeSeconds_secondsWithInt_([self getValue] / divisor);
}

- (OrgJodaTimeSeconds *)negated {
  return OrgJodaTimeSeconds_secondsWithInt_(OrgJodaTimeFieldFieldUtils_safeNegateWithInt_([self getValue]));
}

- (jboolean)isGreaterThanWithOrgJodaTimeSeconds:(OrgJodaTimeSeconds *)other {
  if (other == nil) {
    return [self getValue] > 0;
  }
  return [self getValue] > [((OrgJodaTimeSeconds *) nil_chk(other)) getValue];
}

- (jboolean)isLessThanWithOrgJodaTimeSeconds:(OrgJodaTimeSeconds *)other {
  if (other == nil) {
    return [self getValue] < 0;
  }
  return [self getValue] < [((OrgJodaTimeSeconds *) nil_chk(other)) getValue];
}

- (NSString *)description {
  return JreStrcat("$$C", @"PT", NSString_valueOfInt_([self getValue]), 'S');
}

+ (void)initialize {
  if (self == [OrgJodaTimeSeconds class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeSeconds_ZERO, new_OrgJodaTimeSeconds_initWithInt_(0));
    JreStrongAssignAndConsume(&OrgJodaTimeSeconds_ONE, new_OrgJodaTimeSeconds_initWithInt_(1));
    JreStrongAssignAndConsume(&OrgJodaTimeSeconds_TWO, new_OrgJodaTimeSeconds_initWithInt_(2));
    JreStrongAssignAndConsume(&OrgJodaTimeSeconds_THREE, new_OrgJodaTimeSeconds_initWithInt_(3));
    JreStrongAssignAndConsume(&OrgJodaTimeSeconds_MAX_VALUE, new_OrgJodaTimeSeconds_initWithInt_(JavaLangInteger_MAX_VALUE));
    JreStrongAssignAndConsume(&OrgJodaTimeSeconds_MIN_VALUE, new_OrgJodaTimeSeconds_initWithInt_(JavaLangInteger_MIN_VALUE));
    JreStrongAssign(&OrgJodaTimeSeconds_PARSER, [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeFormatISOPeriodFormat_standard())) withParseTypeWithOrgJodaTimePeriodType:OrgJodaTimePeriodType_seconds()]);
    J2OBJC_SET_INITIALIZED(OrgJodaTimeSeconds)
  }
}

+ (IOSObjectArray *)__annotations_parseSecondsWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertFromString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_toString {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertToString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "secondsWithInt:", "seconds", "Lorg.joda.time.Seconds;", 0x9, NULL, NULL },
    { "secondsBetweenWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "secondsBetween", "Lorg.joda.time.Seconds;", 0x9, NULL, NULL },
    { "secondsBetweenWithOrgJodaTimeReadablePartial:withOrgJodaTimeReadablePartial:", "secondsBetween", "Lorg.joda.time.Seconds;", 0x9, NULL, NULL },
    { "secondsInWithOrgJodaTimeReadableInterval:", "secondsIn", "Lorg.joda.time.Seconds;", 0x9, NULL, NULL },
    { "standardSecondsInWithOrgJodaTimeReadablePeriod:", "standardSecondsIn", "Lorg.joda.time.Seconds;", 0x9, NULL, NULL },
    { "parseSecondsWithNSString:", "parseSeconds", "Lorg.joda.time.Seconds;", 0x9, NULL, NULL },
    { "initWithInt:", "Seconds", NULL, 0x2, NULL, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL, NULL },
    { "getFieldType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL, NULL },
    { "getPeriodType", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL, NULL },
    { "toStandardWeeks", NULL, "Lorg.joda.time.Weeks;", 0x1, NULL, NULL },
    { "toStandardDays", NULL, "Lorg.joda.time.Days;", 0x1, NULL, NULL },
    { "toStandardHours", NULL, "Lorg.joda.time.Hours;", 0x1, NULL, NULL },
    { "toStandardMinutes", NULL, "Lorg.joda.time.Minutes;", 0x1, NULL, NULL },
    { "toStandardDuration", NULL, "Lorg.joda.time.Duration;", 0x1, NULL, NULL },
    { "getSeconds", NULL, "I", 0x1, NULL, NULL },
    { "plusWithInt:", "plus", "Lorg.joda.time.Seconds;", 0x1, NULL, NULL },
    { "plusWithOrgJodaTimeSeconds:", "plus", "Lorg.joda.time.Seconds;", 0x1, NULL, NULL },
    { "minusWithInt:", "minus", "Lorg.joda.time.Seconds;", 0x1, NULL, NULL },
    { "minusWithOrgJodaTimeSeconds:", "minus", "Lorg.joda.time.Seconds;", 0x1, NULL, NULL },
    { "multipliedByWithInt:", "multipliedBy", "Lorg.joda.time.Seconds;", 0x1, NULL, NULL },
    { "dividedByWithInt:", "dividedBy", "Lorg.joda.time.Seconds;", 0x1, NULL, NULL },
    { "negated", NULL, "Lorg.joda.time.Seconds;", 0x1, NULL, NULL },
    { "isGreaterThanWithOrgJodaTimeSeconds:", "isGreaterThan", "Z", 0x1, NULL, NULL },
    { "isLessThanWithOrgJodaTimeSeconds:", "isLessThan", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "ZERO", 0x19, "Lorg.joda.time.Seconds;", &OrgJodaTimeSeconds_ZERO, NULL, .constantValue.asLong = 0 },
    { "ONE", "ONE", 0x19, "Lorg.joda.time.Seconds;", &OrgJodaTimeSeconds_ONE, NULL, .constantValue.asLong = 0 },
    { "TWO", "TWO", 0x19, "Lorg.joda.time.Seconds;", &OrgJodaTimeSeconds_TWO, NULL, .constantValue.asLong = 0 },
    { "THREE", "THREE", 0x19, "Lorg.joda.time.Seconds;", &OrgJodaTimeSeconds_THREE, NULL, .constantValue.asLong = 0 },
    { "MAX_VALUE", "MAX_VALUE", 0x19, "Lorg.joda.time.Seconds;", &OrgJodaTimeSeconds_MAX_VALUE, NULL, .constantValue.asLong = 0 },
    { "MIN_VALUE", "MIN_VALUE", 0x19, "Lorg.joda.time.Seconds;", &OrgJodaTimeSeconds_MIN_VALUE, NULL, .constantValue.asLong = 0 },
    { "PARSER", "PARSER", 0x1a, "Lorg.joda.time.format.PeriodFormatter;", &OrgJodaTimeSeconds_PARSER, NULL, .constantValue.asLong = 0 },
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeSeconds_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgJodaTimeSeconds = { 2, "Seconds", "org.joda.time", NULL, 0x11, 26, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeSeconds;
}

@end

OrgJodaTimeSeconds *OrgJodaTimeSeconds_secondsWithInt_(jint seconds) {
  OrgJodaTimeSeconds_initialize();
  switch (seconds) {
    case 0:
    return OrgJodaTimeSeconds_ZERO;
    case 1:
    return OrgJodaTimeSeconds_ONE;
    case 2:
    return OrgJodaTimeSeconds_TWO;
    case 3:
    return OrgJodaTimeSeconds_THREE;
    case JavaLangInteger_MAX_VALUE:
    return OrgJodaTimeSeconds_MAX_VALUE;
    case JavaLangInteger_MIN_VALUE:
    return OrgJodaTimeSeconds_MIN_VALUE;
    default:
    return create_OrgJodaTimeSeconds_initWithInt_(seconds);
  }
}

OrgJodaTimeSeconds *OrgJodaTimeSeconds_secondsBetweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeSeconds_initialize();
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_withOrgJodaTimeDurationFieldType_(start, end, OrgJodaTimeDurationFieldType_seconds());
  return OrgJodaTimeSeconds_secondsWithInt_(amount);
}

OrgJodaTimeSeconds *OrgJodaTimeSeconds_secondsBetweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_(id<OrgJodaTimeReadablePartial> start, id<OrgJodaTimeReadablePartial> end) {
  OrgJodaTimeSeconds_initialize();
  if ([start isKindOfClass:[OrgJodaTimeLocalTime class]] && [end isKindOfClass:[OrgJodaTimeLocalTime class]]) {
    OrgJodaTimeChronology *chrono = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_([((id<OrgJodaTimeReadablePartial>) nil_chk(start)) getChronology]);
    jint seconds = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk(chrono)) seconds])) getDifferenceWithLong:[((OrgJodaTimeLocalTime *) nil_chk(((OrgJodaTimeLocalTime *) cast_chk(end, [OrgJodaTimeLocalTime class])))) getLocalMillis] withLong:[((OrgJodaTimeLocalTime *) cast_chk(start, [OrgJodaTimeLocalTime class])) getLocalMillis]];
    return OrgJodaTimeSeconds_secondsWithInt_(seconds);
  }
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePartial_withOrgJodaTimeReadablePeriod_(start, end, OrgJodaTimeSeconds_ZERO);
  return OrgJodaTimeSeconds_secondsWithInt_(amount);
}

OrgJodaTimeSeconds *OrgJodaTimeSeconds_secondsInWithOrgJodaTimeReadableInterval_(id<OrgJodaTimeReadableInterval> interval) {
  OrgJodaTimeSeconds_initialize();
  if (interval == nil) {
    return OrgJodaTimeSeconds_ZERO;
  }
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_betweenWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_withOrgJodaTimeDurationFieldType_([((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStart], [interval getEnd], OrgJodaTimeDurationFieldType_seconds());
  return OrgJodaTimeSeconds_secondsWithInt_(amount);
}

OrgJodaTimeSeconds *OrgJodaTimeSeconds_standardSecondsInWithOrgJodaTimeReadablePeriod_(id<OrgJodaTimeReadablePeriod> period) {
  OrgJodaTimeSeconds_initialize();
  jint amount = OrgJodaTimeBaseBaseSingleFieldPeriod_standardPeriodInWithOrgJodaTimeReadablePeriod_withLong_(period, OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND);
  return OrgJodaTimeSeconds_secondsWithInt_(amount);
}

OrgJodaTimeSeconds *OrgJodaTimeSeconds_parseSecondsWithNSString_(NSString *periodStr) {
  OrgJodaTimeSeconds_initialize();
  if (periodStr == nil) {
    return OrgJodaTimeSeconds_ZERO;
  }
  OrgJodaTimePeriod *p = [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeSeconds_PARSER)) parsePeriodWithNSString:periodStr];
  return OrgJodaTimeSeconds_secondsWithInt_([((OrgJodaTimePeriod *) nil_chk(p)) getSeconds]);
}

void OrgJodaTimeSeconds_initWithInt_(OrgJodaTimeSeconds *self, jint seconds) {
  OrgJodaTimeBaseBaseSingleFieldPeriod_initWithInt_(self, seconds);
}

OrgJodaTimeSeconds *new_OrgJodaTimeSeconds_initWithInt_(jint seconds) {
  OrgJodaTimeSeconds *self = [OrgJodaTimeSeconds alloc];
  OrgJodaTimeSeconds_initWithInt_(self, seconds);
  return self;
}

OrgJodaTimeSeconds *create_OrgJodaTimeSeconds_initWithInt_(jint seconds) {
  OrgJodaTimeSeconds *self = [[OrgJodaTimeSeconds alloc] autorelease];
  OrgJodaTimeSeconds_initWithInt_(self, seconds);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeSeconds)
