//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/DateTime.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeDateTime_INCLUDE_ALL")
#ifdef OrgJodaTimeDateTime_RESTRICT
#define OrgJodaTimeDateTime_INCLUDE_ALL 0
#else
#define OrgJodaTimeDateTime_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeDateTime_RESTRICT

#if !defined (OrgJodaTimeDateTime_) && (OrgJodaTimeDateTime_INCLUDE_ALL || defined(OrgJodaTimeDateTime_INCLUDE))
#define OrgJodaTimeDateTime_

#define OrgJodaTimeBaseBaseDateTime_RESTRICT 1
#define OrgJodaTimeBaseBaseDateTime_INCLUDE 1
#include "org/joda/time/base/BaseDateTime.h"


#define OrgJodaTimeReadableDateTime_RESTRICT 1
#define OrgJodaTimeReadableDateTime_INCLUDE 1
#include "org/joda/time/ReadableDateTime.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class OrgJodaTimeChronology;
@class OrgJodaTimeDateMidnight;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeDateTime_Property;
@class OrgJodaTimeDurationFieldType;
@class OrgJodaTimeFormatDateTimeFormatter;
@class OrgJodaTimeLocalDate;
@class OrgJodaTimeLocalDateTime;
@class OrgJodaTimeLocalTime;
@class OrgJodaTimeTimeOfDay;
@class OrgJodaTimeYearMonthDay;
@protocol OrgJodaTimeReadableDuration;
@protocol OrgJodaTimeReadablePartial;
@protocol OrgJodaTimeReadablePeriod;

@interface OrgJodaTimeDateTime : OrgJodaTimeBaseBaseDateTime < OrgJodaTimeReadableDateTime, JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute
  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute
withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute
                    withInt:(jint)millisOfSecond;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute
                    withInt:(jint)millisOfSecond
  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
                    withInt:(jint)hourOfDay
                    withInt:(jint)minuteOfHour
                    withInt:(jint)secondOfMinute
                    withInt:(jint)millisOfSecond
withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (instancetype)initWithLong:(jlong)instant;

- (instancetype)initWithLong:(jlong)instant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithLong:(jlong)instant
 withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (instancetype)initWithId:(id)instant;

- (instancetype)initWithId:(id)instant
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithId:(id)instant
withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (OrgJodaTimeDateTime_Property *)centuryOfEra;

- (OrgJodaTimeDateTime_Property *)dayOfMonth;

- (OrgJodaTimeDateTime_Property *)dayOfWeek;

- (OrgJodaTimeDateTime_Property *)dayOfYear;

- (OrgJodaTimeDateTime_Property *)era;

- (OrgJodaTimeDateTime_Property *)hourOfDay;

- (OrgJodaTimeDateTime_Property *)millisOfDay;

- (OrgJodaTimeDateTime_Property *)millisOfSecond;

- (OrgJodaTimeDateTime *)minusWithLong:(jlong)duration;

- (OrgJodaTimeDateTime *)minusWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration;

- (OrgJodaTimeDateTime *)minusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (OrgJodaTimeDateTime *)minusDaysWithInt:(jint)days;

- (OrgJodaTimeDateTime *)minusHoursWithInt:(jint)hours;

- (OrgJodaTimeDateTime *)minusMillisWithInt:(jint)millis;

- (OrgJodaTimeDateTime *)minusMinutesWithInt:(jint)minutes;

- (OrgJodaTimeDateTime *)minusMonthsWithInt:(jint)months;

- (OrgJodaTimeDateTime *)minusSecondsWithInt:(jint)seconds;

- (OrgJodaTimeDateTime *)minusWeeksWithInt:(jint)weeks;

- (OrgJodaTimeDateTime *)minusYearsWithInt:(jint)years;

- (OrgJodaTimeDateTime_Property *)minuteOfDay;

- (OrgJodaTimeDateTime_Property *)minuteOfHour;

- (OrgJodaTimeDateTime_Property *)monthOfYear;

+ (OrgJodaTimeDateTime *)now;

+ (OrgJodaTimeDateTime *)nowWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

+ (OrgJodaTimeDateTime *)nowWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

+ (OrgJodaTimeDateTime *)parseWithNSString:(NSString *)str;

+ (OrgJodaTimeDateTime *)parseWithNSString:(NSString *)str
    withOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)formatter;

- (OrgJodaTimeDateTime *)plusWithLong:(jlong)duration;

- (OrgJodaTimeDateTime *)plusWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration;

- (OrgJodaTimeDateTime *)plusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (OrgJodaTimeDateTime *)plusDaysWithInt:(jint)days;

- (OrgJodaTimeDateTime *)plusHoursWithInt:(jint)hours;

- (OrgJodaTimeDateTime *)plusMillisWithInt:(jint)millis;

- (OrgJodaTimeDateTime *)plusMinutesWithInt:(jint)minutes;

- (OrgJodaTimeDateTime *)plusMonthsWithInt:(jint)months;

- (OrgJodaTimeDateTime *)plusSecondsWithInt:(jint)seconds;

- (OrgJodaTimeDateTime *)plusWeeksWithInt:(jint)weeks;

- (OrgJodaTimeDateTime *)plusYearsWithInt:(jint)years;

- (OrgJodaTimeDateTime_Property *)propertyWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (OrgJodaTimeDateTime_Property *)secondOfDay;

- (OrgJodaTimeDateTime_Property *)secondOfMinute;

- (OrgJodaTimeDateMidnight *)toDateMidnight;

- (OrgJodaTimeDateTime *)toDateTime;

- (OrgJodaTimeDateTime *)toDateTimeWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (OrgJodaTimeDateTime *)toDateTimeWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (OrgJodaTimeDateTime *)toDateTimeISO;

- (OrgJodaTimeLocalDate *)toLocalDate;

- (OrgJodaTimeLocalDateTime *)toLocalDateTime;

- (OrgJodaTimeLocalTime *)toLocalTime;

- (OrgJodaTimeTimeOfDay *)toTimeOfDay;

- (OrgJodaTimeYearMonthDay *)toYearMonthDay;

- (OrgJodaTimeDateTime_Property *)weekOfWeekyear;

- (OrgJodaTimeDateTime_Property *)weekyear;

- (OrgJodaTimeDateTime *)withCenturyOfEraWithInt:(jint)centuryOfEra;

- (OrgJodaTimeDateTime *)withChronologyWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)newChronology;

- (OrgJodaTimeDateTime *)withDateWithInt:(jint)year
                                 withInt:(jint)monthOfYear
                                 withInt:(jint)dayOfMonth;

- (OrgJodaTimeDateTime *)withDateWithOrgJodaTimeLocalDate:(OrgJodaTimeLocalDate *)date;

- (OrgJodaTimeDateTime *)withDayOfMonthWithInt:(jint)dayOfMonth;

- (OrgJodaTimeDateTime *)withDayOfWeekWithInt:(jint)dayOfWeek;

- (OrgJodaTimeDateTime *)withDayOfYearWithInt:(jint)dayOfYear;

- (OrgJodaTimeDateTime *)withDurationAddedWithLong:(jlong)durationToAdd
                                           withInt:(jint)scalar;

- (OrgJodaTimeDateTime *)withDurationAddedWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)durationToAdd
                                                                  withInt:(jint)scalar;

- (OrgJodaTimeDateTime *)withEarlierOffsetAtOverlap;

- (OrgJodaTimeDateTime *)withEraWithInt:(jint)era;

- (OrgJodaTimeDateTime *)withFieldWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                           withInt:(jint)value;

- (OrgJodaTimeDateTime *)withFieldAddedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                                                withInt:(jint)amount;

- (OrgJodaTimeDateTime *)withFieldsWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial;

- (OrgJodaTimeDateTime *)withHourOfDayWithInt:(jint)hour;

- (OrgJodaTimeDateTime *)withLaterOffsetAtOverlap;

- (OrgJodaTimeDateTime *)withMillisWithLong:(jlong)newMillis;

- (OrgJodaTimeDateTime *)withMillisOfDayWithInt:(jint)millis;

- (OrgJodaTimeDateTime *)withMillisOfSecondWithInt:(jint)millis;

- (OrgJodaTimeDateTime *)withMinuteOfHourWithInt:(jint)minute;

- (OrgJodaTimeDateTime *)withMonthOfYearWithInt:(jint)monthOfYear;

- (OrgJodaTimeDateTime *)withPeriodAddedWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                              withInt:(jint)scalar;

- (OrgJodaTimeDateTime *)withSecondOfMinuteWithInt:(jint)second;

- (OrgJodaTimeDateTime *)withTimeWithInt:(jint)hourOfDay
                                 withInt:(jint)minuteOfHour
                                 withInt:(jint)secondOfMinute
                                 withInt:(jint)millisOfSecond;

- (OrgJodaTimeDateTime *)withTimeWithOrgJodaTimeLocalTime:(OrgJodaTimeLocalTime *)time;

- (OrgJodaTimeDateTime *)withTimeAtStartOfDay;

- (OrgJodaTimeDateTime *)withWeekOfWeekyearWithInt:(jint)weekOfWeekyear;

- (OrgJodaTimeDateTime *)withWeekyearWithInt:(jint)weekyear;

- (OrgJodaTimeDateTime *)withYearWithInt:(jint)year;

- (OrgJodaTimeDateTime *)withYearOfCenturyWithInt:(jint)yearOfCentury;

- (OrgJodaTimeDateTime *)withYearOfEraWithInt:(jint)yearOfEra;

- (OrgJodaTimeDateTime *)withZoneWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)newZone;

- (OrgJodaTimeDateTime *)withZoneRetainFieldsWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)newZone;

- (OrgJodaTimeDateTime_Property *)year;

- (OrgJodaTimeDateTime_Property *)yearOfCentury;

- (OrgJodaTimeDateTime_Property *)yearOfEra;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeDateTime)

FOUNDATION_EXPORT OrgJodaTimeDateTime *OrgJodaTimeDateTime_now();

FOUNDATION_EXPORT OrgJodaTimeDateTime *OrgJodaTimeDateTime_nowWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeDateTime *OrgJodaTimeDateTime_nowWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeDateTime *OrgJodaTimeDateTime_parseWithNSString_(NSString *str);

FOUNDATION_EXPORT OrgJodaTimeDateTime *OrgJodaTimeDateTime_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_(NSString *str, OrgJodaTimeFormatDateTimeFormatter *formatter);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_init(OrgJodaTimeDateTime *self);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_init();

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTime *self, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithOrgJodaTimeChronology_(OrgJodaTimeDateTime *self, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithLong_(OrgJodaTimeDateTime *self, jlong instant);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithLong_(jlong instant) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithLong_(jlong instant);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithLong_withOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTime *self, jlong instant, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithLong_withOrgJodaTimeDateTimeZone_(jlong instant, OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithLong_withOrgJodaTimeDateTimeZone_(jlong instant, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithLong_withOrgJodaTimeChronology_(OrgJodaTimeDateTime *self, jlong instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithId_(OrgJodaTimeDateTime *self, id instant);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithId_(id instant) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithId_(id instant);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithId_withOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTime *self, id instant, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithId_withOrgJodaTimeDateTimeZone_(id instant, OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithId_withOrgJodaTimeDateTimeZone_(id instant, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithId_withOrgJodaTimeChronology_(OrgJodaTimeDateTime *self, id instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_(OrgJodaTimeDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(OrgJodaTimeDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_(OrgJodaTimeDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(OrgJodaTimeDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(OrgJodaTimeDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(OrgJodaTimeDateTime *self, jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeDateTime *new_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime *create_OrgJodaTimeDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, jint dayOfMonth, jint hourOfDay, jint minuteOfHour, jint secondOfMinute, jint millisOfSecond, OrgJodaTimeChronology *chronology);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTime)

#endif

#if !defined (OrgJodaTimeDateTime_Property_) && (OrgJodaTimeDateTime_INCLUDE_ALL || defined(OrgJodaTimeDateTime_Property_INCLUDE))
#define OrgJodaTimeDateTime_Property_

#define OrgJodaTimeFieldAbstractReadableInstantFieldProperty_RESTRICT 1
#define OrgJodaTimeFieldAbstractReadableInstantFieldProperty_INCLUDE 1
#include "org/joda/time/field/AbstractReadableInstantFieldProperty.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTime;
@class OrgJodaTimeDateTimeField;

@interface OrgJodaTimeDateTime_Property : OrgJodaTimeFieldAbstractReadableInstantFieldProperty

#pragma mark Public

- (OrgJodaTimeDateTime *)addToCopyWithInt:(jint)value;

- (OrgJodaTimeDateTime *)addToCopyWithLong:(jlong)value;

- (OrgJodaTimeDateTime *)addWrapFieldToCopyWithInt:(jint)value;

- (OrgJodaTimeDateTime *)getDateTime;

- (OrgJodaTimeDateTimeField *)getField;

- (OrgJodaTimeDateTime *)roundCeilingCopy;

- (OrgJodaTimeDateTime *)roundFloorCopy;

- (OrgJodaTimeDateTime *)roundHalfCeilingCopy;

- (OrgJodaTimeDateTime *)roundHalfEvenCopy;

- (OrgJodaTimeDateTime *)roundHalfFloorCopy;

- (OrgJodaTimeDateTime *)setCopyWithInt:(jint)value;

- (OrgJodaTimeDateTime *)setCopyWithNSString:(NSString *)text;

- (OrgJodaTimeDateTime *)setCopyWithNSString:(NSString *)text
                          withJavaUtilLocale:(JavaUtilLocale *)locale;

- (OrgJodaTimeDateTime *)withMaximumValue;

- (OrgJodaTimeDateTime *)withMinimumValue;

#pragma mark Protected

- (OrgJodaTimeChronology *)getChronology;

- (jlong)getMillis;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)instant
               withOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeDateTime_Property)

FOUNDATION_EXPORT void OrgJodaTimeDateTime_Property_initWithOrgJodaTimeDateTime_withOrgJodaTimeDateTimeField_(OrgJodaTimeDateTime_Property *self, OrgJodaTimeDateTime *instant, OrgJodaTimeDateTimeField *field);

FOUNDATION_EXPORT OrgJodaTimeDateTime_Property *new_OrgJodaTimeDateTime_Property_initWithOrgJodaTimeDateTime_withOrgJodaTimeDateTimeField_(OrgJodaTimeDateTime *instant, OrgJodaTimeDateTimeField *field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTime_Property *create_OrgJodaTimeDateTime_Property_initWithOrgJodaTimeDateTime_withOrgJodaTimeDateTimeField_(OrgJodaTimeDateTime *instant, OrgJodaTimeDateTimeField *field);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTime_Property)

#endif

#pragma pop_macro("OrgJodaTimeDateTime_INCLUDE_ALL")
