//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/base/AbstractInstant.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeBaseAbstractInstant_INCLUDE_ALL")
#ifdef OrgJodaTimeBaseAbstractInstant_RESTRICT
#define OrgJodaTimeBaseAbstractInstant_INCLUDE_ALL 0
#else
#define OrgJodaTimeBaseAbstractInstant_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeBaseAbstractInstant_RESTRICT

#if !defined (OrgJodaTimeBaseAbstractInstant_) && (OrgJodaTimeBaseAbstractInstant_INCLUDE_ALL || defined(OrgJodaTimeBaseAbstractInstant_INCLUDE))
#define OrgJodaTimeBaseAbstractInstant_

#define OrgJodaTimeReadableInstant_RESTRICT 1
#define OrgJodaTimeReadableInstant_INCLUDE 1
#include "org/joda/time/ReadableInstant.h"

@class JavaUtilDate;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTime;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeFormatter;
@class OrgJodaTimeInstant;
@class OrgJodaTimeMutableDateTime;

@interface OrgJodaTimeBaseAbstractInstant : NSObject < OrgJodaTimeReadableInstant >

#pragma mark Public

- (jint)compareToWithId:(id<OrgJodaTimeReadableInstant>)other;

- (jboolean)isEqual:(id)readableInstant;

- (jint)getWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field;

- (jint)getWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (OrgJodaTimeDateTimeZone *)getZone;

- (NSUInteger)hash;

- (jboolean)isAfterWithLong:(jlong)instant;

- (jboolean)isAfterWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

- (jboolean)isAfterNow;

- (jboolean)isBeforeWithLong:(jlong)instant;

- (jboolean)isBeforeWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

- (jboolean)isBeforeNow;

- (jboolean)isEqualWithLong:(jlong)instant;

- (jboolean)isEqualWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

- (jboolean)isEqualNow;

- (jboolean)isSupportedWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (JavaUtilDate *)toDate;

- (OrgJodaTimeDateTime *)toDateTime;

- (OrgJodaTimeDateTime *)toDateTimeWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (OrgJodaTimeDateTime *)toDateTimeWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (OrgJodaTimeDateTime *)toDateTimeISO;

- (OrgJodaTimeInstant *)toInstant;

- (OrgJodaTimeMutableDateTime *)toMutableDateTime;

- (OrgJodaTimeMutableDateTime *)toMutableDateTimeWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (OrgJodaTimeMutableDateTime *)toMutableDateTimeWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (OrgJodaTimeMutableDateTime *)toMutableDateTimeISO;

- (NSString *)description;

- (NSString *)toStringWithOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)formatter;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeBaseAbstractInstant)

FOUNDATION_EXPORT void OrgJodaTimeBaseAbstractInstant_init(OrgJodaTimeBaseAbstractInstant *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeBaseAbstractInstant)

#endif

#pragma pop_macro("OrgJodaTimeBaseAbstractInstant_INCLUDE_ALL")
