//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/base/AbstractInterval.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeBaseAbstractInterval_INCLUDE_ALL")
#ifdef OrgJodaTimeBaseAbstractInterval_RESTRICT
#define OrgJodaTimeBaseAbstractInterval_INCLUDE_ALL 0
#else
#define OrgJodaTimeBaseAbstractInterval_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeBaseAbstractInterval_RESTRICT

#if !defined (OrgJodaTimeBaseAbstractInterval_) && (OrgJodaTimeBaseAbstractInterval_INCLUDE_ALL || defined(OrgJodaTimeBaseAbstractInterval_INCLUDE))
#define OrgJodaTimeBaseAbstractInterval_

#define OrgJodaTimeReadableInterval_RESTRICT 1
#define OrgJodaTimeReadableInterval_INCLUDE 1
#include "org/joda/time/ReadableInterval.h"

@class OrgJodaTimeDateTime;
@class OrgJodaTimeDuration;
@class OrgJodaTimeInterval;
@class OrgJodaTimeMutableInterval;
@class OrgJodaTimePeriod;
@class OrgJodaTimePeriodType;
@protocol OrgJodaTimeReadableInstant;

@interface OrgJodaTimeBaseAbstractInterval : NSObject < OrgJodaTimeReadableInterval >

#pragma mark Public

- (jboolean)containsWithLong:(jlong)millisInstant;

- (jboolean)containsWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

- (jboolean)containsWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval;

- (jboolean)containsNow;

- (jboolean)isEqual:(id)readableInterval;

- (OrgJodaTimeDateTime *)getEnd;

- (OrgJodaTimeDateTime *)getStart;

- (NSUInteger)hash;

- (jboolean)isAfterWithLong:(jlong)millisInstant;

- (jboolean)isAfterWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

- (jboolean)isAfterWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval;

- (jboolean)isAfterNow;

- (jboolean)isBeforeWithLong:(jlong)millisInstant;

- (jboolean)isBeforeWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

- (jboolean)isBeforeWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval;

- (jboolean)isBeforeNow;

- (jboolean)isEqualWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)other;

- (jboolean)overlapsWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval;

- (OrgJodaTimeDuration *)toDuration;

- (jlong)toDurationMillis;

- (OrgJodaTimeInterval *)toInterval;

- (OrgJodaTimeMutableInterval *)toMutableInterval;

- (OrgJodaTimePeriod *)toPeriod;

- (OrgJodaTimePeriod *)toPeriodWithOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type;

- (NSString *)description;

#pragma mark Protected

- (instancetype)init;

- (void)checkIntervalWithLong:(jlong)start
                     withLong:(jlong)end;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeBaseAbstractInterval)

FOUNDATION_EXPORT void OrgJodaTimeBaseAbstractInterval_init(OrgJodaTimeBaseAbstractInterval *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeBaseAbstractInterval)

#endif

#pragma pop_macro("OrgJodaTimeBaseAbstractInterval_INCLUDE_ALL")
