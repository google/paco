//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/convert/ReadableDurationConverter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/ReadWritablePeriod.h"
#include "org/joda/time/ReadableDuration.h"
#include "org/joda/time/convert/AbstractConverter.h"
#include "org/joda/time/convert/ReadableDurationConverter.h"

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeConvertReadableDurationConverter)

OrgJodaTimeConvertReadableDurationConverter *OrgJodaTimeConvertReadableDurationConverter_INSTANCE;

@implementation OrgJodaTimeConvertReadableDurationConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeConvertReadableDurationConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jlong)getDurationMillisWithId:(id)object {
  return [((id<OrgJodaTimeReadableDuration>) nil_chk(((id<OrgJodaTimeReadableDuration>) cast_check(object, OrgJodaTimeReadableDuration_class_())))) getMillis];
}

- (void)setIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)writablePeriod
                                          withId:(id)object
                       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  id<OrgJodaTimeReadableDuration> dur = (id<OrgJodaTimeReadableDuration>) cast_check(object, OrgJodaTimeReadableDuration_class_());
  chrono = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(chrono);
  jlong duration = [((id<OrgJodaTimeReadableDuration>) nil_chk(dur)) getMillis];
  IOSIntArray *values = [((OrgJodaTimeChronology *) nil_chk(chrono)) getWithOrgJodaTimeReadablePeriod:writablePeriod withLong:duration];
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(values))->size_; i++) {
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(writablePeriod)) setValueWithInt:i withInt:IOSIntArray_Get(values, i)];
  }
}

- (IOSClass *)getSupportedType {
  return OrgJodaTimeReadableDuration_class_();
}

+ (void)initialize {
  if (self == [OrgJodaTimeConvertReadableDurationConverter class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeConvertReadableDurationConverter_INSTANCE, new_OrgJodaTimeConvertReadableDurationConverter_init());
    J2OBJC_SET_INITIALIZED(OrgJodaTimeConvertReadableDurationConverter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ReadableDurationConverter", NULL, 0x4, NULL, NULL },
    { "getDurationMillisWithId:", "getDurationMillis", "J", 0x1, NULL, NULL },
    { "setIntoWithOrgJodaTimeReadWritablePeriod:withId:withOrgJodaTimeChronology:", "setInto", "V", 0x1, NULL, NULL },
    { "getSupportedType", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<*>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "INSTANCE", 0x18, "Lorg.joda.time.convert.ReadableDurationConverter;", &OrgJodaTimeConvertReadableDurationConverter_INSTANCE, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeConvertReadableDurationConverter = { 2, "ReadableDurationConverter", "org.joda.time.convert", NULL, 0x0, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeConvertReadableDurationConverter;
}

@end

void OrgJodaTimeConvertReadableDurationConverter_init(OrgJodaTimeConvertReadableDurationConverter *self) {
  OrgJodaTimeConvertAbstractConverter_init(self);
}

OrgJodaTimeConvertReadableDurationConverter *new_OrgJodaTimeConvertReadableDurationConverter_init() {
  OrgJodaTimeConvertReadableDurationConverter *self = [OrgJodaTimeConvertReadableDurationConverter alloc];
  OrgJodaTimeConvertReadableDurationConverter_init(self);
  return self;
}

OrgJodaTimeConvertReadableDurationConverter *create_OrgJodaTimeConvertReadableDurationConverter_init() {
  OrgJodaTimeConvertReadableDurationConverter *self = [[OrgJodaTimeConvertReadableDurationConverter alloc] autorelease];
  OrgJodaTimeConvertReadableDurationConverter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeConvertReadableDurationConverter)
