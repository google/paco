//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/field/OffsetDateTimeField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeFieldOffsetDateTimeField_INCLUDE_ALL")
#ifdef OrgJodaTimeFieldOffsetDateTimeField_RESTRICT
#define OrgJodaTimeFieldOffsetDateTimeField_INCLUDE_ALL 0
#else
#define OrgJodaTimeFieldOffsetDateTimeField_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeFieldOffsetDateTimeField_RESTRICT

#if !defined (OrgJodaTimeFieldOffsetDateTimeField_) && (OrgJodaTimeFieldOffsetDateTimeField_INCLUDE_ALL || defined(OrgJodaTimeFieldOffsetDateTimeField_INCLUDE))
#define OrgJodaTimeFieldOffsetDateTimeField_

#define OrgJodaTimeFieldDecoratedDateTimeField_RESTRICT 1
#define OrgJodaTimeFieldDecoratedDateTimeField_INCLUDE 1
#include "org/joda/time/field/DecoratedDateTimeField.h"

@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDurationField;

@interface OrgJodaTimeFieldOffsetDateTimeField : OrgJodaTimeFieldDecoratedDateTimeField

#pragma mark Public

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                         withInt:(jint)offset;

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                         withInt:(jint)offset
                                         withInt:(jint)minValue
                                         withInt:(jint)maxValue;

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                                         withInt:(jint)offset;

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)amount;

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)amount;

- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)amount;

- (jint)getWithLong:(jlong)instant;

- (jint)getLeapAmountWithLong:(jlong)instant;

- (OrgJodaTimeDurationField *)getLeapDurationField;

- (jint)getMaximumValue;

- (jint)getMinimumValue;

- (jint)getOffset;

- (jboolean)isLeapWithLong:(jlong)instant;

- (jlong)remainderWithLong:(jlong)instant;

- (jlong)roundCeilingWithLong:(jlong)instant;

- (jlong)roundFloorWithLong:(jlong)instant;

- (jlong)roundHalfCeilingWithLong:(jlong)instant;

- (jlong)roundHalfEvenWithLong:(jlong)instant;

- (jlong)roundHalfFloorWithLong:(jlong)instant;

- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFieldOffsetDateTimeField)

FOUNDATION_EXPORT void OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withInt_(OrgJodaTimeFieldOffsetDateTimeField *self, OrgJodaTimeDateTimeField *field, jint offset);

FOUNDATION_EXPORT OrgJodaTimeFieldOffsetDateTimeField *new_OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withInt_(OrgJodaTimeDateTimeField *field, jint offset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFieldOffsetDateTimeField *create_OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withInt_(OrgJodaTimeDateTimeField *field, jint offset);

FOUNDATION_EXPORT void OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_withInt_(OrgJodaTimeFieldOffsetDateTimeField *self, OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type, jint offset);

FOUNDATION_EXPORT OrgJodaTimeFieldOffsetDateTimeField *new_OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_withInt_(OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type, jint offset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFieldOffsetDateTimeField *create_OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_withInt_(OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type, jint offset);

FOUNDATION_EXPORT void OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_withInt_withInt_withInt_(OrgJodaTimeFieldOffsetDateTimeField *self, OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type, jint offset, jint minValue, jint maxValue);

FOUNDATION_EXPORT OrgJodaTimeFieldOffsetDateTimeField *new_OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_withInt_withInt_withInt_(OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type, jint offset, jint minValue, jint maxValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFieldOffsetDateTimeField *create_OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_withInt_withInt_withInt_(OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type, jint offset, jint minValue, jint maxValue);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFieldOffsetDateTimeField)

#endif

#pragma pop_macro("OrgJodaTimeFieldOffsetDateTimeField_INCLUDE_ALL")
