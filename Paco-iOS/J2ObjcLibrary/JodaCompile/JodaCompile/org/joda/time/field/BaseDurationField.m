//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/field/BaseDurationField.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/joda/time/DurationField.h"
#include "org/joda/time/DurationFieldType.h"
#include "org/joda/time/field/BaseDurationField.h"
#include "org/joda/time/field/FieldUtils.h"

@interface OrgJodaTimeFieldBaseDurationField () {
 @public
  OrgJodaTimeDurationFieldType *iType_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldBaseDurationField, iType_, OrgJodaTimeDurationFieldType *)

inline jlong OrgJodaTimeFieldBaseDurationField_get_serialVersionUID();
#define OrgJodaTimeFieldBaseDurationField_serialVersionUID -2554245107589433218LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFieldBaseDurationField, serialVersionUID, jlong)

__attribute__((unused)) static NSString *OrgJodaTimeFieldBaseDurationField_getName(OrgJodaTimeFieldBaseDurationField *self);

@implementation OrgJodaTimeFieldBaseDurationField

- (instancetype)initWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  OrgJodaTimeFieldBaseDurationField_initWithOrgJodaTimeDurationFieldType_(self, type);
  return self;
}

- (OrgJodaTimeDurationFieldType *)getType {
  return iType_;
}

- (NSString *)getName {
  return OrgJodaTimeFieldBaseDurationField_getName(self);
}

- (jboolean)isSupported {
  return true;
}

- (jint)getValueWithLong:(jlong)duration {
  return OrgJodaTimeFieldFieldUtils_safeToIntWithLong_([self getValueAsLongWithLong:duration]);
}

- (jlong)getValueAsLongWithLong:(jlong)duration {
  return duration / [self getUnitMillis];
}

- (jint)getValueWithLong:(jlong)duration
                withLong:(jlong)instant {
  return OrgJodaTimeFieldFieldUtils_safeToIntWithLong_([self getValueAsLongWithLong:duration withLong:instant]);
}

- (jlong)getMillisWithInt:(jint)value {
  return value * [self getUnitMillis];
}

- (jlong)getMillisWithLong:(jlong)value {
  return OrgJodaTimeFieldFieldUtils_safeMultiplyWithLong_withLong_(value, [self getUnitMillis]);
}

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant {
  return OrgJodaTimeFieldFieldUtils_safeToIntWithLong_([self getDifferenceAsLongWithLong:minuendInstant withLong:subtrahendInstant]);
}

- (jint)compareToWithId:(OrgJodaTimeDurationField *)otherField {
  cast_chk(otherField, [OrgJodaTimeDurationField class]);
  jlong otherMillis = [((OrgJodaTimeDurationField *) nil_chk(otherField)) getUnitMillis];
  jlong thisMillis = [self getUnitMillis];
  if (thisMillis == otherMillis) {
    return 0;
  }
  if (thisMillis < otherMillis) {
    return -1;
  }
  else {
    return 1;
  }
}

- (NSString *)description {
  return JreStrcat("$$C", @"DurationField[", OrgJodaTimeFieldBaseDurationField_getName(self), ']');
}

- (void)dealloc {
  RELEASE_(iType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeDurationFieldType:", "BaseDurationField", NULL, 0x4, NULL, NULL },
    { "getType", NULL, "Lorg.joda.time.DurationFieldType;", 0x11, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "isSupported", NULL, "Z", 0x11, NULL, NULL },
    { "getValueWithLong:", "getValue", "I", 0x1, NULL, NULL },
    { "getValueAsLongWithLong:", "getValueAsLong", "J", 0x1, NULL, NULL },
    { "getValueWithLong:withLong:", "getValue", "I", 0x1, NULL, NULL },
    { "getMillisWithInt:", "getMillis", "J", 0x1, NULL, NULL },
    { "getMillisWithLong:", "getMillis", "J", 0x1, NULL, NULL },
    { "getDifferenceWithLong:withLong:", "getDifference", "I", 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeFieldBaseDurationField_serialVersionUID },
    { "iType_", NULL, 0x12, "Lorg.joda.time.DurationFieldType;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFieldBaseDurationField = { 2, "BaseDurationField", "org.joda.time.field", NULL, 0x401, 12, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFieldBaseDurationField;
}

@end

void OrgJodaTimeFieldBaseDurationField_initWithOrgJodaTimeDurationFieldType_(OrgJodaTimeFieldBaseDurationField *self, OrgJodaTimeDurationFieldType *type) {
  OrgJodaTimeDurationField_init(self);
  if (type == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The type must not be null");
  }
  JreStrongAssign(&self->iType_, type);
}

NSString *OrgJodaTimeFieldBaseDurationField_getName(OrgJodaTimeFieldBaseDurationField *self) {
  return [((OrgJodaTimeDurationFieldType *) nil_chk(self->iType_)) getName];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFieldBaseDurationField)
