//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/format/ISODateTimeFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "org/joda/time/DateTimeFieldType.h"
#include "org/joda/time/format/DateTimeFormatter.h"
#include "org/joda/time/format/DateTimeFormatterBuilder.h"
#include "org/joda/time/format/DateTimeParser.h"
#include "org/joda/time/format/ISODateTimeFormat.h"

@interface OrgJodaTimeFormatISODateTimeFormat ()

+ (jboolean)dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                              withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                         withBoolean:(jboolean)extended
                                                         withBoolean:(jboolean)strictISO;

+ (jboolean)dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                                withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                           withBoolean:(jboolean)extended
                                                           withBoolean:(jboolean)strictISO;

+ (jboolean)dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                             withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                        withBoolean:(jboolean)extended
                                                        withBoolean:(jboolean)strictISO;

+ (void)timeWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                   withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                              withBoolean:(jboolean)extended
                                              withBoolean:(jboolean)strictISO
                                              withBoolean:(jboolean)reducedPrec
                                              withBoolean:(jboolean)datePresent;

+ (void)checkNotStrictISOWithJavaUtilCollection:(id<JavaUtilCollection>)fields
                                    withBoolean:(jboolean)strictISO;

+ (void)appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                                         withBoolean:(jboolean)extended;

@end

__attribute__((unused)) static jboolean OrgJodaTimeFormatISODateTimeFormat_dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO);

__attribute__((unused)) static jboolean OrgJodaTimeFormatISODateTimeFormat_dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO);

__attribute__((unused)) static jboolean OrgJodaTimeFormatISODateTimeFormat_dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO);

__attribute__((unused)) static void OrgJodaTimeFormatISODateTimeFormat_timeWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO, jboolean reducedPrec, jboolean datePresent);

__attribute__((unused)) static void OrgJodaTimeFormatISODateTimeFormat_checkNotStrictISOWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> fields, jboolean strictISO);

__attribute__((unused)) static void OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, jboolean extended);

@interface OrgJodaTimeFormatISODateTimeFormat_Constants ()

+ (OrgJodaTimeFormatDateTimeFormatter *)dateParser;

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateParser;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateElementParser;

+ (OrgJodaTimeFormatDateTimeFormatter *)timeParser;

+ (OrgJodaTimeFormatDateTimeFormatter *)localTimeParser;

+ (OrgJodaTimeFormatDateTimeFormatter *)timeElementParser;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeParser;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateOptionalTimeParser;

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateOptionalTimeParser;

+ (OrgJodaTimeFormatDateTimeFormatter *)time;

+ (OrgJodaTimeFormatDateTimeFormatter *)timeNoMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)tTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)tTimeNoMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeNoMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDate;

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTimeNoMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTimeNoMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDate;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTimeNoMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTimeNoMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTimeNoMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDate;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTimeNoMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDate;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTimeNoMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonth;

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonthDay;

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeek;

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeekDay;

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinute;

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecond;

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondFraction;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHour;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinute;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecond;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondMillis;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondFraction;

+ (OrgJodaTimeFormatDateTimeFormatter *)yearElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)monthElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfMonthElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)weekElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfWeekElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfYearElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)literalTElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)hourElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)minuteElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)secondElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)fractionElement;

+ (OrgJodaTimeFormatDateTimeFormatter *)offsetElement;

@end

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_ye();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ye;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, ye, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_mye();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_mye;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, mye, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dme();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dme;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dme, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_we();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_we;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, we, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_wwe();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_wwe;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, wwe, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dwe();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dwe;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dwe, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dye();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dye;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dye, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_hde();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hde;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, hde, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_mhe();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_mhe;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, mhe, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_sme();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_sme;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, sme, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_fse();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_fse;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, fse, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_ze();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ze;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, ze, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_lte();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_lte;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, lte, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_ym();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ym;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, ym, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_ymd();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ymd;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, ymd, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_ww();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ww;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, ww, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_wwd();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_wwd;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, wwd, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_hm();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hm;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, hm, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_hms();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hms;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, hms, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_hmsl();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, hmsl, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_hmsf();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, hmsf, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dh();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dh;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dh, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhm();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dhm;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dhm, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhms();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dhms;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dhms, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhmsl();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dhmsl, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhmsf();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dhmsf, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_t();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_t;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, t, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_tx();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tx;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, tx, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_tt();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, tt, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_ttx();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ttx;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, ttx, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dt();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dt, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dtx();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dtx;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dtx, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_wdt();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_wdt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, wdt, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_wdtx();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, wdtx, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_od();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_od;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, od, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_odt();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_odt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, odt, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_odtx();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_odtx;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, odtx, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bd();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bd;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bd, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bt();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bt, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_btx();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_btx;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, btx, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_btt();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_btt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, btt, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bttx();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bttx;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bttx, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bdt();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bdt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bdt, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bdtx();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bdtx, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bod();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bod;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bod, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bodt();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bodt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bodt, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bodtx();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bodtx, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bwd();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bwd;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bwd, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bwdt();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bwdt, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_bwdtx();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, bwdtx, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dpe();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dpe;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dpe, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_tpe();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tpe;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, tpe, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dp();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dp, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_ldp();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ldp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, ldp, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_tp();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, tp, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_ltp();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ltp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, ltp, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dtp();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dtp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dtp, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_dotp();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dotp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, dotp, OrgJodaTimeFormatDateTimeFormatter *)

inline OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_get_ldotp();
static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFormatISODateTimeFormat_Constants, ldotp, OrgJodaTimeFormatDateTimeFormatter *)

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateParser();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localDateParser();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeParser();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localTimeParser();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeParser();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateOptionalTimeParser();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localDateOptionalTimeParser();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_time();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeNoMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tTime();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTime();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeNoMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTime();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTimeNoMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTime();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTimeNoMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTime();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTimeNoMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTime();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTimeNoMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTime();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTimeNoMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTime();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTimeNoMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonth();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonthDay();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeek();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeekDay();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinute();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHour();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinute();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecond();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondMillis();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondFraction();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_fractionElement();

__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement();

@implementation OrgJodaTimeFormatISODateTimeFormat

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeFormatISODateTimeFormat_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgJodaTimeFormatDateTimeFormatter *)forFieldsWithJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                            withBoolean:(jboolean)extended
                                                            withBoolean:(jboolean)strictISO {
  return OrgJodaTimeFormatISODateTimeFormat_forFieldsWithJavaUtilCollection_withBoolean_withBoolean_(fields, extended, strictISO);
}

+ (jboolean)dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                              withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                         withBoolean:(jboolean)extended
                                                         withBoolean:(jboolean)strictISO {
  return OrgJodaTimeFormatISODateTimeFormat_dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, fields, extended, strictISO);
}

+ (jboolean)dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                                withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                           withBoolean:(jboolean)extended
                                                           withBoolean:(jboolean)strictISO {
  return OrgJodaTimeFormatISODateTimeFormat_dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, fields, extended, strictISO);
}

+ (jboolean)dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                             withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                        withBoolean:(jboolean)extended
                                                        withBoolean:(jboolean)strictISO {
  return OrgJodaTimeFormatISODateTimeFormat_dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, fields, extended, strictISO);
}

+ (void)timeWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                   withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                              withBoolean:(jboolean)extended
                                              withBoolean:(jboolean)strictISO
                                              withBoolean:(jboolean)reducedPrec
                                              withBoolean:(jboolean)datePresent {
  OrgJodaTimeFormatISODateTimeFormat_timeWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_(bld, fields, extended, strictISO, reducedPrec, datePresent);
}

+ (void)checkNotStrictISOWithJavaUtilCollection:(id<JavaUtilCollection>)fields
                                    withBoolean:(jboolean)strictISO {
  OrgJodaTimeFormatISODateTimeFormat_checkNotStrictISOWithJavaUtilCollection_withBoolean_(fields, strictISO);
}

+ (void)appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                                         withBoolean:(jboolean)extended {
  OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateParser {
  return OrgJodaTimeFormatISODateTimeFormat_dateParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateParser {
  return OrgJodaTimeFormatISODateTimeFormat_localDateParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateElementParser {
  return OrgJodaTimeFormatISODateTimeFormat_dateElementParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeParser {
  return OrgJodaTimeFormatISODateTimeFormat_timeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_localTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeElementParser {
  return OrgJodaTimeFormatISODateTimeFormat_timeElementParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_dateTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateOptionalTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_dateOptionalTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateOptionalTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_localDateOptionalTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)date {
  return OrgJodaTimeFormatISODateTimeFormat_date();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)time {
  return OrgJodaTimeFormatISODateTimeFormat_time();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_timeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTime {
  return OrgJodaTimeFormatISODateTimeFormat_tTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_tTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTime {
  return OrgJodaTimeFormatISODateTimeFormat_dateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_dateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDate {
  return OrgJodaTimeFormatISODateTimeFormat_ordinalDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_ordinalDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_ordinalDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDate {
  return OrgJodaTimeFormatISODateTimeFormat_weekDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_weekDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_weekDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDate {
  return OrgJodaTimeFormatISODateTimeFormat_basicDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTime {
  return OrgJodaTimeFormatISODateTimeFormat_basicTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_basicTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTime {
  return OrgJodaTimeFormatISODateTimeFormat_basicTTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_basicTTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_basicDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_basicDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDate {
  return OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDate {
  return OrgJodaTimeFormatISODateTimeFormat_basicWeekDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_basicWeekDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_basicWeekDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)year {
  return OrgJodaTimeFormatISODateTimeFormat_year();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonth {
  return OrgJodaTimeFormatISODateTimeFormat_yearMonth();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonthDay {
  return OrgJodaTimeFormatISODateTimeFormat_yearMonthDay();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyear {
  return OrgJodaTimeFormatISODateTimeFormat_weekyear();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeek {
  return OrgJodaTimeFormatISODateTimeFormat_weekyearWeek();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeekDay {
  return OrgJodaTimeFormatISODateTimeFormat_weekyearWeekDay();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hour {
  return OrgJodaTimeFormatISODateTimeFormat_hour();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinute {
  return OrgJodaTimeFormatISODateTimeFormat_hourMinute();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecond {
  return OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecond();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondMillis {
  return OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecondMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondFraction {
  return OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecondFraction();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHour {
  return OrgJodaTimeFormatISODateTimeFormat_dateHour();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinute {
  return OrgJodaTimeFormatISODateTimeFormat_dateHourMinute();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecond {
  return OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecond();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondMillis {
  return OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecondMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondFraction {
  return OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecondFraction();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ISODateTimeFormat", NULL, 0x4, NULL, NULL },
    { "forFieldsWithJavaUtilCollection:withBoolean:withBoolean:", "forFields", "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, "(Ljava/util/Collection<Lorg/joda/time/DateTimeFieldType;>;ZZ)Lorg/joda/time/format/DateTimeFormatter;" },
    { "dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:", "dateByMonth", "Z", 0xa, NULL, "(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection<Lorg/joda/time/DateTimeFieldType;>;ZZ)Z" },
    { "dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:", "dateByOrdinal", "Z", 0xa, NULL, "(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection<Lorg/joda/time/DateTimeFieldType;>;ZZ)Z" },
    { "dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:", "dateByWeek", "Z", 0xa, NULL, "(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection<Lorg/joda/time/DateTimeFieldType;>;ZZ)Z" },
    { "timeWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:withBoolean:withBoolean:", "time", "V", 0xa, NULL, "(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection<Lorg/joda/time/DateTimeFieldType;>;ZZZZ)V" },
    { "checkNotStrictISOWithJavaUtilCollection:withBoolean:", "checkNotStrictISO", "V", 0xa, NULL, "(Ljava/util/Collection<Lorg/joda/time/DateTimeFieldType;>;Z)V" },
    { "appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:withBoolean:", "appendSeparator", "V", 0xa, NULL, NULL },
    { "dateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "localDateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "dateElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "timeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "localTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "timeElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "dateTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "dateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "localDateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "date", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "time", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "timeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "tTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "tTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "dateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "dateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "ordinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "ordinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "ordinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "weekDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "weekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "weekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicTTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicTTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicOrdinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicOrdinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicOrdinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicWeekDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicWeekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "basicWeekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "year", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "yearMonth", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "yearMonthDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "weekyear", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "weekyearWeek", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "weekyearWeekDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "hour", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "hourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "hourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "hourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "hourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "dateHour", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "dateHourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "dateHourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "dateHourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
    { "dateHourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lorg.joda.time.format.ISODateTimeFormat$Constants;"};
  static const J2ObjcClassInfo _OrgJodaTimeFormatISODateTimeFormat = { 2, "ISODateTimeFormat", "org.joda.time.format", NULL, 0x1, 59, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgJodaTimeFormatISODateTimeFormat;
}

@end

void OrgJodaTimeFormatISODateTimeFormat_init(OrgJodaTimeFormatISODateTimeFormat *self) {
  NSObject_init(self);
}

OrgJodaTimeFormatISODateTimeFormat *new_OrgJodaTimeFormatISODateTimeFormat_init() {
  OrgJodaTimeFormatISODateTimeFormat *self = [OrgJodaTimeFormatISODateTimeFormat alloc];
  OrgJodaTimeFormatISODateTimeFormat_init(self);
  return self;
}

OrgJodaTimeFormatISODateTimeFormat *create_OrgJodaTimeFormatISODateTimeFormat_init() {
  OrgJodaTimeFormatISODateTimeFormat *self = [[OrgJodaTimeFormatISODateTimeFormat alloc] autorelease];
  OrgJodaTimeFormatISODateTimeFormat_init(self);
  return self;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_forFieldsWithJavaUtilCollection_withBoolean_withBoolean_(id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO) {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  if (fields == nil || [fields size] == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The fields must not be null or empty");
  }
  id<JavaUtilSet> workingFields = create_JavaUtilHashSet_initWithJavaUtilCollection_(fields);
  jint inputSize = [workingFields size];
  jboolean reducedPrec = false;
  OrgJodaTimeFormatDateTimeFormatterBuilder *bld = create_OrgJodaTimeFormatDateTimeFormatterBuilder_init();
  if ([workingFields containsWithId:OrgJodaTimeDateTimeFieldType_monthOfYear()]) {
    reducedPrec = OrgJodaTimeFormatISODateTimeFormat_dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, workingFields, extended, strictISO);
  }
  else if ([workingFields containsWithId:OrgJodaTimeDateTimeFieldType_dayOfYear()]) {
    reducedPrec = OrgJodaTimeFormatISODateTimeFormat_dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, workingFields, extended, strictISO);
  }
  else if ([workingFields containsWithId:OrgJodaTimeDateTimeFieldType_weekOfWeekyear()]) {
    reducedPrec = OrgJodaTimeFormatISODateTimeFormat_dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, workingFields, extended, strictISO);
  }
  else if ([workingFields containsWithId:OrgJodaTimeDateTimeFieldType_dayOfMonth()]) {
    reducedPrec = OrgJodaTimeFormatISODateTimeFormat_dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, workingFields, extended, strictISO);
  }
  else if ([workingFields containsWithId:OrgJodaTimeDateTimeFieldType_dayOfWeek()]) {
    reducedPrec = OrgJodaTimeFormatISODateTimeFormat_dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, workingFields, extended, strictISO);
  }
  else if ([workingFields removeWithId:OrgJodaTimeDateTimeFieldType_year()]) {
    [bld appendWithOrgJodaTimeFormatDateTimeFormatter:JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ye)];
    reducedPrec = true;
  }
  else if ([workingFields removeWithId:OrgJodaTimeDateTimeFieldType_weekyear()]) {
    [bld appendWithOrgJodaTimeFormatDateTimeFormatter:JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, we)];
    reducedPrec = true;
  }
  jboolean datePresent = ([workingFields size] < inputSize);
  OrgJodaTimeFormatISODateTimeFormat_timeWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_(bld, workingFields, extended, strictISO, reducedPrec, datePresent);
  if ([bld canBuildFormatter] == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"No valid format for fields: ", fields));
  }
  @try {
    [((id<JavaUtilCollection>) nil_chk(fields)) retainAllWithJavaUtilCollection:workingFields];
  }
  @catch (JavaLangUnsupportedOperationException *ex) {
  }
  return [bld toFormatter];
}

jboolean OrgJodaTimeFormatISODateTimeFormat_dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO) {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  jboolean reducedPrec = false;
  if ([((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:OrgJodaTimeDateTimeFieldType_year()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendWithOrgJodaTimeFormatDateTimeFormatter:JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ye)];
    if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_monthOfYear()]) {
      if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfMonth()]) {
        OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
        [bld appendMonthOfYearWithInt:2];
        OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
        [bld appendDayOfMonthWithInt:2];
      }
      else {
        [bld appendLiteralWithChar:'-'];
        [bld appendMonthOfYearWithInt:2];
        reducedPrec = true;
      }
    }
    else {
      if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfMonth()]) {
        OrgJodaTimeFormatISODateTimeFormat_checkNotStrictISOWithJavaUtilCollection_withBoolean_(fields, strictISO);
        [bld appendLiteralWithChar:'-'];
        [bld appendLiteralWithChar:'-'];
        [bld appendDayOfMonthWithInt:2];
      }
      else {
        reducedPrec = true;
      }
    }
  }
  else if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_monthOfYear()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    [bld appendLiteralWithChar:'-'];
    [bld appendMonthOfYearWithInt:2];
    if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfMonth()]) {
      OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
      [bld appendDayOfMonthWithInt:2];
    }
    else {
      reducedPrec = true;
    }
  }
  else if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfMonth()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    [bld appendLiteralWithChar:'-'];
    [bld appendLiteralWithChar:'-'];
    [bld appendDayOfMonthWithInt:2];
  }
  return reducedPrec;
}

jboolean OrgJodaTimeFormatISODateTimeFormat_dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO) {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  jboolean reducedPrec = false;
  if ([((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:OrgJodaTimeDateTimeFieldType_year()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendWithOrgJodaTimeFormatDateTimeFormatter:JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ye)];
    if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfYear()]) {
      OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
      [bld appendDayOfYearWithInt:3];
    }
    else {
      reducedPrec = true;
    }
  }
  else if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfYear()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    [bld appendDayOfYearWithInt:3];
  }
  return reducedPrec;
}

jboolean OrgJodaTimeFormatISODateTimeFormat_dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO) {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  jboolean reducedPrec = false;
  if ([((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:OrgJodaTimeDateTimeFieldType_weekyear()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendWithOrgJodaTimeFormatDateTimeFormatter:JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, we)];
    if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_weekOfWeekyear()]) {
      OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
      [bld appendLiteralWithChar:'W'];
      [bld appendWeekOfWeekyearWithInt:2];
      if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfWeek()]) {
        OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
        [bld appendDayOfWeekWithInt:1];
      }
      else {
        reducedPrec = true;
      }
    }
    else {
      if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfWeek()]) {
        OrgJodaTimeFormatISODateTimeFormat_checkNotStrictISOWithJavaUtilCollection_withBoolean_(fields, strictISO);
        OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
        [bld appendLiteralWithChar:'W'];
        [bld appendLiteralWithChar:'-'];
        [bld appendDayOfWeekWithInt:1];
      }
      else {
        reducedPrec = true;
      }
    }
  }
  else if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_weekOfWeekyear()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    [bld appendLiteralWithChar:'W'];
    [bld appendWeekOfWeekyearWithInt:2];
    if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfWeek()]) {
      OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
      [bld appendDayOfWeekWithInt:1];
    }
    else {
      reducedPrec = true;
    }
  }
  else if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfWeek()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    [bld appendLiteralWithChar:'W'];
    [bld appendLiteralWithChar:'-'];
    [bld appendDayOfWeekWithInt:1];
  }
  return reducedPrec;
}

void OrgJodaTimeFormatISODateTimeFormat_timeWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO, jboolean reducedPrec, jboolean datePresent) {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  jboolean hour = [((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:OrgJodaTimeDateTimeFieldType_hourOfDay()];
  jboolean minute = [fields removeWithId:OrgJodaTimeDateTimeFieldType_minuteOfHour()];
  jboolean second = [fields removeWithId:OrgJodaTimeDateTimeFieldType_secondOfMinute()];
  jboolean milli = [fields removeWithId:OrgJodaTimeDateTimeFieldType_millisOfSecond()];
  if (!hour && !minute && !second && !milli) {
    return;
  }
  if (hour || minute || second || milli) {
    if (strictISO && reducedPrec) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"No valid ISO8601 format for fields because Date was reduced precision: ", fields));
    }
    if (datePresent) {
      [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'T'];
    }
  }
  if ((hour && minute && second) || (hour && !second && !milli)) {
  }
  else {
    if (strictISO && datePresent) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"No valid ISO8601 format for fields because Time was truncated: ", fields));
    }
    if (!hour && ((minute && second) || (minute && !milli) || second)) {
    }
    else {
      if (strictISO) {
        @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"No valid ISO8601 format for fields: ", fields));
      }
    }
  }
  if (hour) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendHourOfDayWithInt:2];
  }
  else if (minute || second || milli) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
  if (extended && hour && minute) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:':'];
  }
  if (minute) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendMinuteOfHourWithInt:2];
  }
  else if (second || milli) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
  if (extended && minute && second) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:':'];
  }
  if (second) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendSecondOfMinuteWithInt:2];
  }
  else if (milli) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
  if (milli) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'.'];
    [bld appendMillisOfSecondWithInt:3];
  }
}

void OrgJodaTimeFormatISODateTimeFormat_checkNotStrictISOWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> fields, jboolean strictISO) {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  if (strictISO) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"No valid ISO8601 format for fields: ", fields));
  }
}

void OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, jboolean extended) {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  if (extended) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateParser() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dp);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_localDateParser() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ldp);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateElementParser() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dpe);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_timeParser() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, tp);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_localTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ltp);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_timeElementParser() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, tpe);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dtp);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateOptionalTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dotp);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_localDateOptionalTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ldotp);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_date() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return OrgJodaTimeFormatISODateTimeFormat_yearMonthDay();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_time() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, t);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_timeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, tx);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_tTime() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, tt);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_tTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ttx);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateTime() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dt);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dtx);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_ordinalDate() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, od);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_ordinalDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, odt);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_ordinalDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, odtx);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekDate() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, wwd);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, wdt);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, wdtx);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicDate() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bd);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicTime() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bt);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, btx);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicTTime() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, btt);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicTTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bttx);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bdt);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bdtx);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDate() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bod);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bodt);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bodtx);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicWeekDate() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bwd);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicWeekDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bwdt);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicWeekDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, bwdtx);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_year() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ye);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_yearMonth() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ym);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_yearMonthDay() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ymd);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekyear() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, we);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekyearWeek() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, ww);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekyearWeekDay() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, wwd);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_hour() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, hde);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_hourMinute() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, hm);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecond() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, hms);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecondMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, hmsl);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecondFraction() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, hmsf);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateHour() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dh);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateHourMinute() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dhm);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecond() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dhms);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecondMillis() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dhmsl);
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecondFraction() {
  OrgJodaTimeFormatISODateTimeFormat_initialize();
  return JreLoadStatic(OrgJodaTimeFormatISODateTimeFormat_Constants, dhmsf);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatISODateTimeFormat)

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeFormatISODateTimeFormat_Constants)

@implementation OrgJodaTimeFormatISODateTimeFormat_Constants

+ (OrgJodaTimeFormatDateTimeFormatter *)dateParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_localDateParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateElementParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_timeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_localTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeElementParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateOptionalTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateOptionalTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateOptionalTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_localDateOptionalTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)time {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_time();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_timeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonth {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonth();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonthDay {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonthDay();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeek {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeek();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeekDay {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeekDay();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinute {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinute();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecond {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondFraction {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHour {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateHour();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinute {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinute();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecond {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecond();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondFraction {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondFraction();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)monthElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfMonthElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfWeekElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfYearElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)literalTElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)minuteElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)secondElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)fractionElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_fractionElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)offsetElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgJodaTimeFormatISODateTimeFormat_Constants class]) {
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ye, OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_mye, OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dme, OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_we, OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_wwe, OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dwe, OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dye, OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_hde, OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_mhe, OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_sme, OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_fse, OrgJodaTimeFormatISODateTimeFormat_Constants_fractionElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ze, OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_lte, OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ym, OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonth());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ymd, OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonthDay());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ww, OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeek());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_wwd, OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeekDay());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_hm, OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinute());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_hms, OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl, OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf, OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dh, OrgJodaTimeFormatISODateTimeFormat_Constants_dateHour());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dhm, OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinute());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dhms, OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecond());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl, OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf, OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondFraction());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_t, OrgJodaTimeFormatISODateTimeFormat_Constants_time());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_tx, OrgJodaTimeFormatISODateTimeFormat_Constants_timeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_tt, OrgJodaTimeFormatISODateTimeFormat_Constants_tTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ttx, OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dt, OrgJodaTimeFormatISODateTimeFormat_Constants_dateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dtx, OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_wdt, OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx, OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_od, OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_odt, OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_odtx, OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bd, OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bt, OrgJodaTimeFormatISODateTimeFormat_Constants_basicTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_btx, OrgJodaTimeFormatISODateTimeFormat_Constants_basicTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_btt, OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bttx, OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bdt, OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx, OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bod, OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bodt, OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx, OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bwd, OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt, OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx, OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dpe, OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_tpe, OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dp, OrgJodaTimeFormatISODateTimeFormat_Constants_dateParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ldp, OrgJodaTimeFormatISODateTimeFormat_Constants_localDateParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_tp, OrgJodaTimeFormatISODateTimeFormat_Constants_timeParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ltp, OrgJodaTimeFormatISODateTimeFormat_Constants_localTimeParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dtp, OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dotp, OrgJodaTimeFormatISODateTimeFormat_Constants_dateOptionalTimeParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp, OrgJodaTimeFormatISODateTimeFormat_Constants_localDateOptionalTimeParser());
    J2OBJC_SET_INITIALIZED(OrgJodaTimeFormatISODateTimeFormat_Constants)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "localDateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dateElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "timeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "localTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "timeElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dateTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "localDateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "time", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "timeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "tTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "tTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "ordinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "ordinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "ordinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "weekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "weekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicTTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicTTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicOrdinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicOrdinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicOrdinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicWeekDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicWeekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "basicWeekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "yearMonth", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "yearMonthDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "weekyearWeek", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "weekyearWeekDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "hourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "hourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "hourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "hourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dateHour", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dateHourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dateHourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dateHourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dateHourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "yearElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "monthElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dayOfMonthElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "weekyearElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "weekElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dayOfWeekElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "dayOfYearElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "literalTElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "hourElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "minuteElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "secondElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "fractionElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "offsetElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ye", "ye", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ye, NULL, .constantValue.asLong = 0 },
    { "mye", "mye", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_mye, NULL, .constantValue.asLong = 0 },
    { "dme", "dme", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dme, NULL, .constantValue.asLong = 0 },
    { "we", "we", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_we, NULL, .constantValue.asLong = 0 },
    { "wwe", "wwe", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wwe, NULL, .constantValue.asLong = 0 },
    { "dwe", "dwe", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dwe, NULL, .constantValue.asLong = 0 },
    { "dye", "dye", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dye, NULL, .constantValue.asLong = 0 },
    { "hde", "hde", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hde, NULL, .constantValue.asLong = 0 },
    { "mhe", "mhe", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_mhe, NULL, .constantValue.asLong = 0 },
    { "sme", "sme", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_sme, NULL, .constantValue.asLong = 0 },
    { "fse", "fse", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_fse, NULL, .constantValue.asLong = 0 },
    { "ze", "ze", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ze, NULL, .constantValue.asLong = 0 },
    { "lte", "lte", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_lte, NULL, .constantValue.asLong = 0 },
    { "ym", "ym", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ym, NULL, .constantValue.asLong = 0 },
    { "ymd", "ymd", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ymd, NULL, .constantValue.asLong = 0 },
    { "ww", "ww", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ww, NULL, .constantValue.asLong = 0 },
    { "wwd", "wwd", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wwd, NULL, .constantValue.asLong = 0 },
    { "hm", "hm", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hm, NULL, .constantValue.asLong = 0 },
    { "hms", "hms", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hms, NULL, .constantValue.asLong = 0 },
    { "hmsl", "hmsl", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl, NULL, .constantValue.asLong = 0 },
    { "hmsf", "hmsf", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf, NULL, .constantValue.asLong = 0 },
    { "dh", "dh", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dh, NULL, .constantValue.asLong = 0 },
    { "dhm", "dhm", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhm, NULL, .constantValue.asLong = 0 },
    { "dhms", "dhms", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhms, NULL, .constantValue.asLong = 0 },
    { "dhmsl", "dhmsl", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl, NULL, .constantValue.asLong = 0 },
    { "dhmsf", "dhmsf", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf, NULL, .constantValue.asLong = 0 },
    { "t", "t", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_t, NULL, .constantValue.asLong = 0 },
    { "tx", "tx", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tx, NULL, .constantValue.asLong = 0 },
    { "tt", "tt", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tt, NULL, .constantValue.asLong = 0 },
    { "ttx", "ttx", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ttx, NULL, .constantValue.asLong = 0 },
    { "dt", "dt", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dt, NULL, .constantValue.asLong = 0 },
    { "dtx", "dtx", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dtx, NULL, .constantValue.asLong = 0 },
    { "wdt", "wdt", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wdt, NULL, .constantValue.asLong = 0 },
    { "wdtx", "wdtx", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx, NULL, .constantValue.asLong = 0 },
    { "od", "od", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_od, NULL, .constantValue.asLong = 0 },
    { "odt", "odt", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_odt, NULL, .constantValue.asLong = 0 },
    { "odtx", "odtx", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_odtx, NULL, .constantValue.asLong = 0 },
    { "bd", "bd", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bd, NULL, .constantValue.asLong = 0 },
    { "bt", "bt", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bt, NULL, .constantValue.asLong = 0 },
    { "btx", "btx", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_btx, NULL, .constantValue.asLong = 0 },
    { "btt", "btt", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_btt, NULL, .constantValue.asLong = 0 },
    { "bttx", "bttx", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bttx, NULL, .constantValue.asLong = 0 },
    { "bdt", "bdt", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bdt, NULL, .constantValue.asLong = 0 },
    { "bdtx", "bdtx", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx, NULL, .constantValue.asLong = 0 },
    { "bod", "bod", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bod, NULL, .constantValue.asLong = 0 },
    { "bodt", "bodt", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bodt, NULL, .constantValue.asLong = 0 },
    { "bodtx", "bodtx", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx, NULL, .constantValue.asLong = 0 },
    { "bwd", "bwd", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bwd, NULL, .constantValue.asLong = 0 },
    { "bwdt", "bwdt", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt, NULL, .constantValue.asLong = 0 },
    { "bwdtx", "bwdtx", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx, NULL, .constantValue.asLong = 0 },
    { "dpe", "dpe", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dpe, NULL, .constantValue.asLong = 0 },
    { "tpe", "tpe", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tpe, NULL, .constantValue.asLong = 0 },
    { "dp", "dp", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dp, NULL, .constantValue.asLong = 0 },
    { "ldp", "ldp", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ldp, NULL, .constantValue.asLong = 0 },
    { "tp", "tp", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tp, NULL, .constantValue.asLong = 0 },
    { "ltp", "ltp", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ltp, NULL, .constantValue.asLong = 0 },
    { "dtp", "dtp", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dtp, NULL, .constantValue.asLong = 0 },
    { "dotp", "dotp", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dotp, NULL, .constantValue.asLong = 0 },
    { "ldotp", "ldotp", 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatISODateTimeFormat_Constants = { 2, "Constants", "org.joda.time.format", "ISODateTimeFormat", 0x18, 60, methods, 59, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeFormatISODateTimeFormat_Constants;
}

@end

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dp == nil) {
    id<OrgJodaTimeFormatDateTimeParser> tOffset = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'T'])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement()])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:tOffset])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dp;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localDateParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ldp == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser())) withZoneUTC];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ldp;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dpe == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement())) getParser]])) toParser]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement())) getParser]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement()])) toParser] } count:3 type:OrgJodaTimeFormatDateTimeParser_class_()]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dpe;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tp == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement())) getParser]])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement())) getParser]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tp;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ltp == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement())) getParser]])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser()])) toFormatter])) withZoneUTC];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ltp;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tpe == nil) {
    id<OrgJodaTimeFormatDateTimeParser> decimalPoint = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'.'])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:','])) toParser] } count:2 type:OrgJodaTimeFormatDateTimeParser_class_()]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement()])) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement()])) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeParser:decimalPoint])) appendFractionOfSecondWithInt:1 withInt:9])) toParser]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeParser:decimalPoint])) appendFractionOfMinuteWithInt:1 withInt:9])) toParser], nil } count:3 type:OrgJodaTimeFormatDateTimeParser_class_()]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeParser:decimalPoint])) appendFractionOfHourWithInt:1 withInt:9])) toParser], nil } count:3 type:OrgJodaTimeFormatDateTimeParser_class_()]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tpe;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dtp == nil) {
    id<OrgJodaTimeFormatDateTimeParser> time = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'T'])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement())) getParser]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ time, [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_dateOptionalTimeParser())) getParser] } count:2 type:OrgJodaTimeFormatDateTimeParser_class_()]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dtp;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateOptionalTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dotp == nil) {
    id<OrgJodaTimeFormatDateTimeParser> timeOrOffset = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'T'])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser())) getParser]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement())) getParser]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:timeOrOffset])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dotp;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localDateOptionalTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp == nil) {
    id<OrgJodaTimeFormatDateTimeParser> time = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'T'])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser()])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:time])) toFormatter])) withZoneUTC];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_time() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_t == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_t;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tx == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tx;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tt == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_time()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tt;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ttx == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_timeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ttx;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dt == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dt;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dtx == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dtx;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_od == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_od;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_odt == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_odt;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_odtx == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_odtx;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wdt == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_weekDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wdt;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_weekDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bd == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendYearWithInt:4 withInt:4])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_monthOfYear() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_dayOfMonth() withInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bd;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bt == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_hourOfDay() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_minuteOfHour() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_secondOfMinute() withInt:2])) appendLiteralWithChar:'.'])) appendFractionOfSecondWithInt:3 withInt:9])) appendTimeZoneOffsetWithNSString:@"Z" withBoolean:false withInt:2 withInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bt;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_btx == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_hourOfDay() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_minuteOfHour() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_secondOfMinute() withInt:2])) appendTimeZoneOffsetWithNSString:@"Z" withBoolean:false withInt:2 withInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_btx;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_btt == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_btt;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bttx == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bttx;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bdt == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bdt;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bod == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendYearWithInt:4 withInt:4])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_dayOfYear() withInt:3])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bod;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bodt == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bodt;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bwd == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWeekyearWithInt:4 withInt:4])) appendLiteralWithChar:'W'])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_weekOfWeekyear() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_dayOfWeek() withInt:1])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bwd;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonth() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ym == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ym;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonthDay() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ymd == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ymd;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeek() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ww == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ww;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeekDay() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wwd == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wwd;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinute() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hm == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hm;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hms == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hms;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement()])) appendLiteralWithChar:'.'])) appendFractionOfSecondWithInt:3 withInt:3])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_fractionElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHour() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dh == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_hour()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dh;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinute() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhm == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinute()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhm;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecond() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhms == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhms;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondFraction() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ye == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendYearWithInt:4 withInt:9])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ye;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_mye == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'-'])) appendMonthOfYearWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_mye;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dme == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'-'])) appendDayOfMonthWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dme;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_we == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWeekyearWithInt:4 withInt:9])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_we;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wwe == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithNSString:@"-W"])) appendWeekOfWeekyearWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wwe;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dwe == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'-'])) appendDayOfWeekWithInt:1])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dwe;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dye == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'-'])) appendDayOfYearWithInt:3])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dye;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_lte == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'T'])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_lte;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hde == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendHourOfDayWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hde;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_mhe == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:':'])) appendMinuteOfHourWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_mhe;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_sme == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:':'])) appendSecondOfMinuteWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_sme;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_fractionElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_fse == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendLiteralWithChar:'.'])) appendFractionOfSecondWithInt:3 withInt:9])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_fse;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_initialize();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ze == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([create_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendTimeZoneOffsetWithNSString:@"Z" withBoolean:true withInt:2 withInt:4])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ze;
}

void OrgJodaTimeFormatISODateTimeFormat_Constants_init(OrgJodaTimeFormatISODateTimeFormat_Constants *self) {
  NSObject_init(self);
}

OrgJodaTimeFormatISODateTimeFormat_Constants *new_OrgJodaTimeFormatISODateTimeFormat_Constants_init() {
  OrgJodaTimeFormatISODateTimeFormat_Constants *self = [OrgJodaTimeFormatISODateTimeFormat_Constants alloc];
  OrgJodaTimeFormatISODateTimeFormat_Constants_init(self);
  return self;
}

OrgJodaTimeFormatISODateTimeFormat_Constants *create_OrgJodaTimeFormatISODateTimeFormat_Constants_init() {
  OrgJodaTimeFormatISODateTimeFormat_Constants *self = [[OrgJodaTimeFormatISODateTimeFormat_Constants alloc] autorelease];
  OrgJodaTimeFormatISODateTimeFormat_Constants_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatISODateTimeFormat_Constants)
