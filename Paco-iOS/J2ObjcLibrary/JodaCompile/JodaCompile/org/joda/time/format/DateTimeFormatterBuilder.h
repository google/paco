//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL")
#ifdef OrgJodaTimeFormatDateTimeFormatterBuilder_RESTRICT
#define OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL 0
#else
#define OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeFormatDateTimeFormatterBuilder_RESTRICT
#ifdef OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber_INCLUDE
#define OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber_INCLUDE 1
#endif
#ifdef OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber_INCLUDE
#define OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter_INCLUDE 1
#endif
#ifdef OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber_INCLUDE
#define OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter_INCLUDE 1
#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_

@class IOSObjectArray;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeFormatDateTimeFormatter;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol JavaUtilMap;
@protocol OrgJodaTimeFormatDateTimeParser;
@protocol OrgJodaTimeFormatDateTimePrinter;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder : NSObject

#pragma mark Public

- (instancetype)init;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendWithOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)formatter;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendWithOrgJodaTimeFormatDateTimeParser:(id<OrgJodaTimeFormatDateTimeParser>)parser;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendWithOrgJodaTimeFormatDateTimePrinter:(id<OrgJodaTimeFormatDateTimePrinter>)printer;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendWithOrgJodaTimeFormatDateTimePrinter:(id<OrgJodaTimeFormatDateTimePrinter>)printer
                                                      withOrgJodaTimeFormatDateTimeParser:(id<OrgJodaTimeFormatDateTimeParser>)parser;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendWithOrgJodaTimeFormatDateTimePrinter:(id<OrgJodaTimeFormatDateTimePrinter>)printer
                                                 withOrgJodaTimeFormatDateTimeParserArray:(IOSObjectArray *)parsers;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendCenturyOfEraWithInt:(jint)minDigits
                                                                 withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendClockhourOfDayWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendClockhourOfHalfdayWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendDayOfMonthWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendDayOfWeekWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendDayOfWeekShortText;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendDayOfWeekText;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendDayOfYearWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendDecimalWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                                                     withInt:(jint)minDigits
                                                                                     withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendEraText;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                                                          withInt:(jint)numDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendFixedSignedDecimalWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                                                                withInt:(jint)numDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendFractionWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                                                      withInt:(jint)minDigits
                                                                                      withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendFractionOfDayWithInt:(jint)minDigits
                                                                  withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendFractionOfHourWithInt:(jint)minDigits
                                                                   withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendFractionOfMinuteWithInt:(jint)minDigits
                                                                     withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendFractionOfSecondWithInt:(jint)minDigits
                                                                     withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendHalfdayOfDayText;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendHourOfDayWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendHourOfHalfdayWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendLiteralWithChar:(jchar)c;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendLiteralWithNSString:(NSString *)text;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendMillisOfDayWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendMillisOfSecondWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendMinuteOfDayWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendMinuteOfHourWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendMonthOfYearWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendMonthOfYearShortText;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendMonthOfYearText;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendOptionalWithOrgJodaTimeFormatDateTimeParser:(id<OrgJodaTimeFormatDateTimeParser>)parser;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendPatternWithNSString:(NSString *)pattern;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendSecondOfDayWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendSecondOfMinuteWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendShortTextWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendSignedDecimalWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                                                           withInt:(jint)minDigits
                                                                                           withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTextWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTimeZoneId;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTimeZoneName;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTimeZoneNameWithJavaUtilMap:(id<JavaUtilMap>)parseLookup;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTimeZoneOffsetWithNSString:(NSString *)zeroOffsetText
                                                                    withBoolean:(jboolean)showSeparators
                                                                        withInt:(jint)minFields
                                                                        withInt:(jint)maxFields;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTimeZoneOffsetWithNSString:(NSString *)zeroOffsetPrintText
                                                                   withNSString:(NSString *)zeroOffsetParseText
                                                                    withBoolean:(jboolean)showSeparators
                                                                        withInt:(jint)minFields
                                                                        withInt:(jint)maxFields;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTimeZoneShortName;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTimeZoneShortNameWithJavaUtilMap:(id<JavaUtilMap>)parseLookup;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTwoDigitWeekyearWithInt:(jint)pivot;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTwoDigitWeekyearWithInt:(jint)pivot
                                                                 withBoolean:(jboolean)lenientParse;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTwoDigitYearWithInt:(jint)pivot;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendTwoDigitYearWithInt:(jint)pivot
                                                             withBoolean:(jboolean)lenientParse;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendWeekOfWeekyearWithInt:(jint)minDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendWeekyearWithInt:(jint)minDigits
                                                             withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendYearWithInt:(jint)minDigits
                                                         withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendYearOfCenturyWithInt:(jint)minDigits
                                                                  withInt:(jint)maxDigits;

- (OrgJodaTimeFormatDateTimeFormatterBuilder *)appendYearOfEraWithInt:(jint)minDigits
                                                              withInt:(jint)maxDigits;

- (jboolean)canBuildFormatter;

- (jboolean)canBuildParser;

- (jboolean)canBuildPrinter;

- (void)clear;

- (OrgJodaTimeFormatDateTimeFormatter *)toFormatter;

- (id<OrgJodaTimeFormatDateTimeParser>)toParser;

- (id<OrgJodaTimeFormatDateTimePrinter>)toPrinter;

#pragma mark Package-Private

+ (void)appendUnknownStringWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                          withInt:(jint)len;

+ (jint)csCompareWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                  withInt:(jint)position
                             withNSString:(NSString *)search;

+ (jboolean)csStartsWithWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                         withInt:(jint)position
                                    withNSString:(NSString *)search;

+ (jboolean)csStartsWithIgnoreCaseWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position
                                              withNSString:(NSString *)search;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_init(OrgJodaTimeFormatDateTimeFormatterBuilder *self);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder *new_OrgJodaTimeFormatDateTimeFormatterBuilder_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder *create_OrgJodaTimeFormatDateTimeFormatterBuilder_init();

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_appendUnknownStringWithJavaLangAppendable_withInt_(id<JavaLangAppendable> appendable, jint len);

FOUNDATION_EXPORT jint OrgJodaTimeFormatDateTimeFormatterBuilder_csCompareWithJavaLangCharSequence_withInt_withNSString_(id<JavaLangCharSequence> text, jint position, NSString *search);

FOUNDATION_EXPORT jboolean OrgJodaTimeFormatDateTimeFormatterBuilder_csStartsWithWithJavaLangCharSequence_withInt_withNSString_(id<JavaLangCharSequence> text, jint position, NSString *search);

FOUNDATION_EXPORT jboolean OrgJodaTimeFormatDateTimeFormatterBuilder_csStartsWithIgnoreCaseWithJavaLangCharSequence_withInt_withNSString_(id<JavaLangCharSequence> text, jint position, NSString *search);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral_

#define OrgJodaTimeFormatInternalPrinter_RESTRICT 1
#define OrgJodaTimeFormatInternalPrinter_INCLUDE 1
#include "org/joda/time/format/InternalPrinter.h"

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral : NSObject < OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser >

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)estimatePrintedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

- (instancetype)initWithChar:(jchar)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral_initWithChar_(OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral *self, jchar value);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral *new_OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral_initWithChar_(jchar value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral *create_OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral_initWithChar_(jchar value);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_CharacterLiteral)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral_

#define OrgJodaTimeFormatInternalPrinter_RESTRICT 1
#define OrgJodaTimeFormatInternalPrinter_INCLUDE 1
#include "org/joda/time/format/InternalPrinter.h"

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral : NSObject < OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser >

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)estimatePrintedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral_initWithNSString_(OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral *self, NSString *value);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral *new_OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral_initWithNSString_(NSString *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral *create_OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral_initWithNSString_(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_StringLiteral)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter_

#define OrgJodaTimeFormatInternalPrinter_RESTRICT 1
#define OrgJodaTimeFormatInternalPrinter_INCLUDE 1
#include "org/joda/time/format/InternalPrinter.h"

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangCharSequence;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter : NSObject < OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser > {
 @public
  OrgJodaTimeDateTimeFieldType *iFieldType_;
  jint iMaxParsedDigits_;
  jboolean iSigned_;
}

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                             withInt:(jint)maxParsedDigits
                                         withBoolean:(jboolean)signed_;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter)

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter, iFieldType_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter *self, OrgJodaTimeDateTimeFieldType *fieldType, jint maxParsedDigits, jboolean signed_);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber_

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@protocol JavaLangAppendable;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber : OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter

#pragma mark Public

- (jint)estimatePrintedLength;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Protected

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                             withInt:(jint)maxParsedDigits
                                         withBoolean:(jboolean)signed_;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber *self, OrgJodaTimeDateTimeFieldType *fieldType, jint maxParsedDigits, jboolean signed_);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber *new_OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_(OrgJodaTimeDateTimeFieldType *fieldType, jint maxParsedDigits, jboolean signed_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber *create_OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_(OrgJodaTimeDateTimeFieldType *fieldType, jint maxParsedDigits, jboolean signed_);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_UnpaddedNumber)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber_

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@protocol JavaLangAppendable;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber : OrgJodaTimeFormatDateTimeFormatterBuilder_NumberFormatter {
 @public
  jint iMinPrintedDigits_;
}

#pragma mark Public

- (jint)estimatePrintedLength;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Protected

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                             withInt:(jint)maxParsedDigits
                                         withBoolean:(jboolean)signed_
                                             withInt:(jint)minPrintedDigits;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_withInt_(OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber *self, OrgJodaTimeDateTimeFieldType *fieldType, jint maxParsedDigits, jboolean signed_, jint minPrintedDigits);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber *new_OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_withInt_(OrgJodaTimeDateTimeFieldType *fieldType, jint maxParsedDigits, jboolean signed_, jint minPrintedDigits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber *create_OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_withInt_(OrgJodaTimeDateTimeFieldType *fieldType, jint maxParsedDigits, jboolean signed_, jint minPrintedDigits);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber_

@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangCharSequence;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber : OrgJodaTimeFormatDateTimeFormatterBuilder_PaddedNumber

#pragma mark Public

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

#pragma mark Protected

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                             withInt:(jint)numDigits
                                         withBoolean:(jboolean)signed_;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber *self, OrgJodaTimeDateTimeFieldType *fieldType, jint numDigits, jboolean signed_);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber *new_OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_(OrgJodaTimeDateTimeFieldType *fieldType, jint numDigits, jboolean signed_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber *create_OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_(OrgJodaTimeDateTimeFieldType *fieldType, jint numDigits, jboolean signed_);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_FixedNumber)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear_

#define OrgJodaTimeFormatInternalPrinter_RESTRICT 1
#define OrgJodaTimeFormatInternalPrinter_INCLUDE 1
#include "org/joda/time/format/InternalPrinter.h"

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear : NSObject < OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser >

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)estimatePrintedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                             withInt:(jint)pivot
                                         withBoolean:(jboolean)lenientParse;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear *self, OrgJodaTimeDateTimeFieldType *type, jint pivot, jboolean lenientParse);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear *new_OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_(OrgJodaTimeDateTimeFieldType *type, jint pivot, jboolean lenientParse) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear *create_OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear_initWithOrgJodaTimeDateTimeFieldType_withInt_withBoolean_(OrgJodaTimeDateTimeFieldType *type, jint pivot, jboolean lenientParse);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_TwoDigitYear)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_TextField_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_TextField_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_TextField_

#define OrgJodaTimeFormatInternalPrinter_RESTRICT 1
#define OrgJodaTimeFormatInternalPrinter_INCLUDE 1
#include "org/joda/time/format/InternalPrinter.h"

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_TextField : NSObject < OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser >

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)estimatePrintedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                         withBoolean:(jboolean)isShort;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_TextField)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_TextField_initWithOrgJodaTimeDateTimeFieldType_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder_TextField *self, OrgJodaTimeDateTimeFieldType *fieldType, jboolean isShort);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TextField *new_OrgJodaTimeFormatDateTimeFormatterBuilder_TextField_initWithOrgJodaTimeDateTimeFieldType_withBoolean_(OrgJodaTimeDateTimeFieldType *fieldType, jboolean isShort) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TextField *create_OrgJodaTimeFormatDateTimeFormatterBuilder_TextField_initWithOrgJodaTimeDateTimeFieldType_withBoolean_(OrgJodaTimeDateTimeFieldType *fieldType, jboolean isShort);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_TextField)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction_

#define OrgJodaTimeFormatInternalPrinter_RESTRICT 1
#define OrgJodaTimeFormatInternalPrinter_INCLUDE 1
#include "org/joda/time/format/InternalPrinter.h"

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction : NSObject < OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser > {
 @public
  jint iMinDigits_;
  jint iMaxDigits_;
}

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)estimatePrintedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Protected

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                             withInt:(jint)minDigits
                                             withInt:(jint)maxDigits;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction_initWithOrgJodaTimeDateTimeFieldType_withInt_withInt_(OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction *self, OrgJodaTimeDateTimeFieldType *fieldType, jint minDigits, jint maxDigits);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction *new_OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction_initWithOrgJodaTimeDateTimeFieldType_withInt_withInt_(OrgJodaTimeDateTimeFieldType *fieldType, jint minDigits, jint maxDigits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction *create_OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction_initWithOrgJodaTimeDateTimeFieldType_withInt_withInt_(OrgJodaTimeDateTimeFieldType *fieldType, jint minDigits, jint maxDigits);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_Fraction)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset_

#define OrgJodaTimeFormatInternalPrinter_RESTRICT 1
#define OrgJodaTimeFormatInternalPrinter_INCLUDE 1
#include "org/joda/time/format/InternalPrinter.h"

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset : NSObject < OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser >

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)estimatePrintedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)buf
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)zeroOffsetPrintText
                    withNSString:(NSString *)zeroOffsetParseText
                     withBoolean:(jboolean)showSeparators
                         withInt:(jint)minFields
                         withInt:(jint)maxFields;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset_initWithNSString_withNSString_withBoolean_withInt_withInt_(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset *self, NSString *zeroOffsetPrintText, NSString *zeroOffsetParseText, jboolean showSeparators, jint minFields, jint maxFields);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset *new_OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset_initWithNSString_withNSString_withBoolean_withInt_withInt_(NSString *zeroOffsetPrintText, NSString *zeroOffsetParseText, jboolean showSeparators, jint minFields, jint maxFields) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset *create_OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset_initWithNSString_withNSString_withBoolean_withInt_withInt_(NSString *zeroOffsetPrintText, NSString *zeroOffsetParseText, jboolean showSeparators, jint minFields, jint maxFields);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneOffset)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName_

#define OrgJodaTimeFormatInternalPrinter_RESTRICT 1
#define OrgJodaTimeFormatInternalPrinter_INCLUDE 1
#include "org/joda/time/format/InternalPrinter.h"

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol JavaUtilMap;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName : NSObject < OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser >

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)estimatePrintedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)type
            withJavaUtilMap:(id<JavaUtilMap>)parseLookup;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName)

inline jint OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName_get_LONG_NAME();
#define OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName_LONG_NAME 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName, LONG_NAME, jint)

inline jint OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName_get_SHORT_NAME();
#define OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName_SHORT_NAME 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName, SHORT_NAME, jint)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName_initWithInt_withJavaUtilMap_(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName *self, jint type, id<JavaUtilMap> parseLookup);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName *new_OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName_initWithInt_withJavaUtilMap_(jint type, id<JavaUtilMap> parseLookup) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName *create_OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName_initWithInt_withJavaUtilMap_(jint type, id<JavaUtilMap> parseLookup);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneName)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "java/lang/Enum.h"

#define OrgJodaTimeFormatInternalPrinter_RESTRICT 1
#define OrgJodaTimeFormatInternalPrinter_INCLUDE 1
#include "org/joda/time/format/InternalPrinter.h"

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol OrgJodaTimeReadablePartial;

typedef NS_ENUM(NSUInteger, OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_Enum) {
  OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_Enum_INSTANCE = 0,
};

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId : JavaLangEnum < NSCopying, OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser >

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)estimatePrintedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId *OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_values_[];

inline OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId *OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId, INSTANCE)

inline jint OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_get_MAX_LENGTH();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_MAX_LENGTH;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId, MAX_LENGTH, jint)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_values();

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId *OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId *OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_TimeZoneId)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_Composite_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_Composite_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_Composite_

#define OrgJodaTimeFormatInternalPrinter_RESTRICT 1
#define OrgJodaTimeFormatInternalPrinter_INCLUDE 1
#include "org/joda/time/format/InternalPrinter.h"

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol JavaUtilList;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_Composite : NSObject < OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser >

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)estimatePrintedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)elementPairs;

- (jboolean)isParser;

- (jboolean)isPrinter;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_Composite)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_Composite_initWithJavaUtilList_(OrgJodaTimeFormatDateTimeFormatterBuilder_Composite *self, id<JavaUtilList> elementPairs);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_Composite *new_OrgJodaTimeFormatDateTimeFormatterBuilder_Composite_initWithJavaUtilList_(id<JavaUtilList> elementPairs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_Composite *create_OrgJodaTimeFormatDateTimeFormatterBuilder_Composite_initWithJavaUtilList_(id<JavaUtilList> elementPairs);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_Composite)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser_) && (OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL || defined(OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser_INCLUDE))
#define OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser_

#define OrgJodaTimeFormatInternalParser_RESTRICT 1
#define OrgJodaTimeFormatInternalParser_INCLUDE 1
#include "org/joda/time/format/InternalParser.h"

@class IOSObjectArray;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangCharSequence;

@interface OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser : NSObject < OrgJodaTimeFormatInternalParser >

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeFormatInternalParserArray:(IOSObjectArray *)parsers;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser_initWithOrgJodaTimeFormatInternalParserArray_(OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser *self, IOSObjectArray *parsers);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser *new_OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser_initWithOrgJodaTimeFormatInternalParserArray_(IOSObjectArray *parsers) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser *create_OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser_initWithOrgJodaTimeFormatInternalParserArray_(IOSObjectArray *parsers);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormatterBuilder_MatchingParser)

#endif

#pragma pop_macro("OrgJodaTimeFormatDateTimeFormatterBuilder_INCLUDE_ALL")
