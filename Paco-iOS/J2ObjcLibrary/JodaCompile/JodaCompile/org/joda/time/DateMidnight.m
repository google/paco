//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/DateMidnight.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"
#include "java/util/Locale.h"
#include "org/joda/convert/FromString.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateMidnight.h"
#include "org/joda/time/DateTime.h"
#include "org/joda/time/DateTimeField.h"
#include "org/joda/time/DateTimeFieldType.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/DateTimeZone.h"
#include "org/joda/time/DurationField.h"
#include "org/joda/time/DurationFieldType.h"
#include "org/joda/time/Interval.h"
#include "org/joda/time/LocalDate.h"
#include "org/joda/time/ReadableDuration.h"
#include "org/joda/time/ReadablePartial.h"
#include "org/joda/time/ReadablePeriod.h"
#include "org/joda/time/YearMonthDay.h"
#include "org/joda/time/base/AbstractInstant.h"
#include "org/joda/time/base/BaseDateTime.h"
#include "org/joda/time/field/AbstractReadableInstantFieldProperty.h"
#include "org/joda/time/format/DateTimeFormatter.h"
#include "org/joda/time/format/ISODateTimeFormat.h"

inline jlong OrgJodaTimeDateMidnight_get_serialVersionUID();
#define OrgJodaTimeDateMidnight_serialVersionUID 156371964018738LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateMidnight, serialVersionUID, jlong)

@interface OrgJodaTimeDateMidnight_Property () {
 @public
  OrgJodaTimeDateMidnight *iInstant_;
  OrgJodaTimeDateTimeField *iField_;
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)oos;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)oos;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeDateMidnight_Property, iInstant_, OrgJodaTimeDateMidnight *)
J2OBJC_FIELD_SETTER(OrgJodaTimeDateMidnight_Property, iField_, OrgJodaTimeDateTimeField *)

inline jlong OrgJodaTimeDateMidnight_Property_get_serialVersionUID();
#define OrgJodaTimeDateMidnight_Property_serialVersionUID 257629620LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateMidnight_Property, serialVersionUID, jlong)

@implementation OrgJodaTimeDateMidnight

+ (OrgJodaTimeDateMidnight *)now {
  return OrgJodaTimeDateMidnight_now();
}

+ (OrgJodaTimeDateMidnight *)nowWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone {
  return OrgJodaTimeDateMidnight_nowWithOrgJodaTimeDateTimeZone_(zone);
}

+ (OrgJodaTimeDateMidnight *)nowWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  return OrgJodaTimeDateMidnight_nowWithOrgJodaTimeChronology_(chronology);
}

+ (OrgJodaTimeDateMidnight *)parseWithNSString:(NSString *)str {
  return OrgJodaTimeDateMidnight_parseWithNSString_(str);
}

+ (OrgJodaTimeDateMidnight *)parseWithNSString:(NSString *)str
        withOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)formatter {
  return OrgJodaTimeDateMidnight_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_(str, formatter);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeDateMidnight_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone {
  OrgJodaTimeDateMidnight_initWithOrgJodaTimeDateTimeZone_(self, zone);
  return self;
}

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeDateMidnight_initWithOrgJodaTimeChronology_(self, chronology);
  return self;
}

- (instancetype)initWithLong:(jlong)instant {
  OrgJodaTimeDateMidnight_initWithLong_(self, instant);
  return self;
}

- (instancetype)initWithLong:(jlong)instant
 withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone {
  OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeDateTimeZone_(self, instant, zone);
  return self;
}

- (instancetype)initWithLong:(jlong)instant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

- (instancetype)initWithId:(id)instant {
  OrgJodaTimeDateMidnight_initWithId_(self, instant);
  return self;
}

- (instancetype)initWithId:(id)instant
withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone {
  OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeDateTimeZone_(self, instant, zone);
  return self;
}

- (instancetype)initWithId:(id)instant
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth {
  OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_(self, year, monthOfYear, dayOfMonth);
  return self;
}

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone {
  OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(self, year, monthOfYear, dayOfMonth, zone);
  return self;
}

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
                    withInt:(jint)dayOfMonth
  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(self, year, monthOfYear, dayOfMonth, chronology);
  return self;
}

- (jlong)checkInstantWithLong:(jlong)instant
    withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  return [((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk(chronology)) dayOfMonth])) roundFloorWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)withMillisWithLong:(jlong)newMillis {
  OrgJodaTimeChronology *chrono = [self getChronology];
  newMillis = [self checkInstantWithLong:newMillis withOrgJodaTimeChronology:chrono];
  return (newMillis == [self getMillis] ? self : create_OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeChronology_(newMillis, chrono));
}

- (OrgJodaTimeDateMidnight *)withChronologyWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)newChronology {
  return (newChronology == [self getChronology] ? self : create_OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeChronology_([self getMillis], newChronology));
}

- (OrgJodaTimeDateMidnight *)withZoneRetainFieldsWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)newZone {
  newZone = OrgJodaTimeDateTimeUtils_getZoneWithOrgJodaTimeDateTimeZone_(newZone);
  OrgJodaTimeDateTimeZone *originalZone = OrgJodaTimeDateTimeUtils_getZoneWithOrgJodaTimeDateTimeZone_([self getZone]);
  if (newZone == originalZone) {
    return self;
  }
  jlong millis = [((OrgJodaTimeDateTimeZone *) nil_chk(originalZone)) getMillisKeepLocalWithOrgJodaTimeDateTimeZone:newZone withLong:[self getMillis]];
  return create_OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeChronology_(millis, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) withZoneWithOrgJodaTimeDateTimeZone:newZone]);
}

- (OrgJodaTimeDateMidnight *)withFieldsWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial {
  if (partial == nil) {
    return self;
  }
  return [self withMillisWithLong:[((OrgJodaTimeChronology *) nil_chk([self getChronology])) setWithOrgJodaTimeReadablePartial:partial withLong:[self getMillis]]];
}

- (OrgJodaTimeDateMidnight *)withFieldWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                               withInt:(jint)value {
  if (fieldType == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Field must not be null");
  }
  jlong instant = [((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeDateTimeFieldType *) nil_chk(fieldType)) getFieldWithOrgJodaTimeChronology:[self getChronology]])) setWithLong:[self getMillis] withInt:value];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)withFieldAddedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                                                    withInt:(jint)amount {
  if (fieldType == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Field must not be null");
  }
  if (amount == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeDurationFieldType *) nil_chk(fieldType)) getFieldWithOrgJodaTimeChronology:[self getChronology]])) addWithLong:[self getMillis] withInt:amount];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)withDurationAddedWithLong:(jlong)durationToAdd
                                               withInt:(jint)scalar {
  if (durationToAdd == 0 || scalar == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeChronology *) nil_chk([self getChronology])) addWithLong:[self getMillis] withLong:durationToAdd withInt:scalar];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)withDurationAddedWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)durationToAdd
                                                                      withInt:(jint)scalar {
  if (durationToAdd == nil || scalar == 0) {
    return self;
  }
  return [self withDurationAddedWithLong:[((id<OrgJodaTimeReadableDuration>) nil_chk(durationToAdd)) getMillis] withInt:scalar];
}

- (OrgJodaTimeDateMidnight *)withPeriodAddedWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                                  withInt:(jint)scalar {
  if (period == nil || scalar == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeChronology *) nil_chk([self getChronology])) addWithOrgJodaTimeReadablePeriod:period withLong:[self getMillis] withInt:scalar];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)plusWithLong:(jlong)duration {
  return [self withDurationAddedWithLong:duration withInt:1];
}

- (OrgJodaTimeDateMidnight *)plusWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  return [self withDurationAddedWithOrgJodaTimeReadableDuration:duration withInt:1];
}

- (OrgJodaTimeDateMidnight *)plusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  return [self withPeriodAddedWithOrgJodaTimeReadablePeriod:period withInt:1];
}

- (OrgJodaTimeDateMidnight *)plusYearsWithInt:(jint)years {
  if (years == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) years])) addWithLong:[self getMillis] withInt:years];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)plusMonthsWithInt:(jint)months {
  if (months == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) months])) addWithLong:[self getMillis] withInt:months];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)plusWeeksWithInt:(jint)weeks {
  if (weeks == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) weeks])) addWithLong:[self getMillis] withInt:weeks];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)plusDaysWithInt:(jint)days {
  if (days == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) days])) addWithLong:[self getMillis] withInt:days];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)minusWithLong:(jlong)duration {
  return [self withDurationAddedWithLong:duration withInt:-1];
}

- (OrgJodaTimeDateMidnight *)minusWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  return [self withDurationAddedWithOrgJodaTimeReadableDuration:duration withInt:-1];
}

- (OrgJodaTimeDateMidnight *)minusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  return [self withPeriodAddedWithOrgJodaTimeReadablePeriod:period withInt:-1];
}

- (OrgJodaTimeDateMidnight *)minusYearsWithInt:(jint)years {
  if (years == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) years])) subtractWithLong:[self getMillis] withInt:years];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)minusMonthsWithInt:(jint)months {
  if (months == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) months])) subtractWithLong:[self getMillis] withInt:months];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)minusWeeksWithInt:(jint)weeks {
  if (weeks == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) weeks])) subtractWithLong:[self getMillis] withInt:weeks];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight *)minusDaysWithInt:(jint)days {
  if (days == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) days])) subtractWithLong:[self getMillis] withInt:days];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeDateMidnight_Property *)propertyWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type {
  if (type == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The DateTimeFieldType must not be null");
  }
  OrgJodaTimeDateTimeField *field = [((OrgJodaTimeDateTimeFieldType *) nil_chk(type)) getFieldWithOrgJodaTimeChronology:[self getChronology]];
  if ([((OrgJodaTimeDateTimeField *) nil_chk(field)) isSupported] == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"Field '", type, @"' is not supported"));
  }
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, field);
}

- (OrgJodaTimeYearMonthDay *)toYearMonthDay {
  return create_OrgJodaTimeYearMonthDay_initWithLong_withOrgJodaTimeChronology_([self getMillis], [self getChronology]);
}

- (OrgJodaTimeLocalDate *)toLocalDate {
  return create_OrgJodaTimeLocalDate_initWithLong_withOrgJodaTimeChronology_([self getMillis], [self getChronology]);
}

- (OrgJodaTimeInterval *)toInterval {
  OrgJodaTimeChronology *chrono = [self getChronology];
  jlong start = [self getMillis];
  jlong end = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeDurationFieldType *) nil_chk(OrgJodaTimeDurationFieldType_days())) getFieldWithOrgJodaTimeChronology:chrono])) addWithLong:start withInt:1];
  return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(start, end, chrono);
}

- (OrgJodaTimeDateMidnight *)withEraWithInt:(jint)era {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) era])) setWithLong:[self getMillis] withInt:era]];
}

- (OrgJodaTimeDateMidnight *)withCenturyOfEraWithInt:(jint)centuryOfEra {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) centuryOfEra])) setWithLong:[self getMillis] withInt:centuryOfEra]];
}

- (OrgJodaTimeDateMidnight *)withYearOfEraWithInt:(jint)yearOfEra {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) yearOfEra])) setWithLong:[self getMillis] withInt:yearOfEra]];
}

- (OrgJodaTimeDateMidnight *)withYearOfCenturyWithInt:(jint)yearOfCentury {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) yearOfCentury])) setWithLong:[self getMillis] withInt:yearOfCentury]];
}

- (OrgJodaTimeDateMidnight *)withYearWithInt:(jint)year {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) year])) setWithLong:[self getMillis] withInt:year]];
}

- (OrgJodaTimeDateMidnight *)withWeekyearWithInt:(jint)weekyear {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) weekyear])) setWithLong:[self getMillis] withInt:weekyear]];
}

- (OrgJodaTimeDateMidnight *)withMonthOfYearWithInt:(jint)monthOfYear {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) monthOfYear])) setWithLong:[self getMillis] withInt:monthOfYear]];
}

- (OrgJodaTimeDateMidnight *)withWeekOfWeekyearWithInt:(jint)weekOfWeekyear {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) weekOfWeekyear])) setWithLong:[self getMillis] withInt:weekOfWeekyear]];
}

- (OrgJodaTimeDateMidnight *)withDayOfYearWithInt:(jint)dayOfYear {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) dayOfYear])) setWithLong:[self getMillis] withInt:dayOfYear]];
}

- (OrgJodaTimeDateMidnight *)withDayOfMonthWithInt:(jint)dayOfMonth {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) dayOfMonth])) setWithLong:[self getMillis] withInt:dayOfMonth]];
}

- (OrgJodaTimeDateMidnight *)withDayOfWeekWithInt:(jint)dayOfWeek {
  return [self withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk([((OrgJodaTimeChronology *) nil_chk([self getChronology])) dayOfWeek])) setWithLong:[self getMillis] withInt:dayOfWeek]];
}

- (OrgJodaTimeDateMidnight_Property *)era {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) era]);
}

- (OrgJodaTimeDateMidnight_Property *)centuryOfEra {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) centuryOfEra]);
}

- (OrgJodaTimeDateMidnight_Property *)yearOfCentury {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) yearOfCentury]);
}

- (OrgJodaTimeDateMidnight_Property *)yearOfEra {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) yearOfEra]);
}

- (OrgJodaTimeDateMidnight_Property *)year {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) year]);
}

- (OrgJodaTimeDateMidnight_Property *)weekyear {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) weekyear]);
}

- (OrgJodaTimeDateMidnight_Property *)monthOfYear {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) monthOfYear]);
}

- (OrgJodaTimeDateMidnight_Property *)weekOfWeekyear {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) weekOfWeekyear]);
}

- (OrgJodaTimeDateMidnight_Property *)dayOfYear {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) dayOfYear]);
}

- (OrgJodaTimeDateMidnight_Property *)dayOfMonth {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) dayOfMonth]);
}

- (OrgJodaTimeDateMidnight_Property *)dayOfWeek {
  return create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, [((OrgJodaTimeChronology *) nil_chk([self getChronology])) dayOfWeek]);
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_parseWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertFromString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_toYearMonthDay {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "now", NULL, "Lorg.joda.time.DateMidnight;", 0x9, NULL, NULL },
    { "nowWithOrgJodaTimeDateTimeZone:", "now", "Lorg.joda.time.DateMidnight;", 0x9, NULL, NULL },
    { "nowWithOrgJodaTimeChronology:", "now", "Lorg.joda.time.DateMidnight;", 0x9, NULL, NULL },
    { "parseWithNSString:", "parse", "Lorg.joda.time.DateMidnight;", 0x9, NULL, NULL },
    { "parseWithNSString:withOrgJodaTimeFormatDateTimeFormatter:", "parse", "Lorg.joda.time.DateMidnight;", 0x9, NULL, NULL },
    { "init", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeDateTimeZone:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithOrgJodaTimeChronology:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithLong:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithLong:withOrgJodaTimeDateTimeZone:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithLong:withOrgJodaTimeChronology:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithId:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithId:withOrgJodaTimeDateTimeZone:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithId:withOrgJodaTimeChronology:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:withInt:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:withInt:withOrgJodaTimeDateTimeZone:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:withInt:withOrgJodaTimeChronology:", "DateMidnight", NULL, 0x1, NULL, NULL },
    { "checkInstantWithLong:withOrgJodaTimeChronology:", "checkInstant", "J", 0x4, NULL, NULL },
    { "withMillisWithLong:", "withMillis", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withChronologyWithOrgJodaTimeChronology:", "withChronology", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withZoneRetainFieldsWithOrgJodaTimeDateTimeZone:", "withZoneRetainFields", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withFieldsWithOrgJodaTimeReadablePartial:", "withFields", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withFieldWithOrgJodaTimeDateTimeFieldType:withInt:", "withField", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withFieldAddedWithOrgJodaTimeDurationFieldType:withInt:", "withFieldAdded", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withDurationAddedWithLong:withInt:", "withDurationAdded", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withDurationAddedWithOrgJodaTimeReadableDuration:withInt:", "withDurationAdded", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withPeriodAddedWithOrgJodaTimeReadablePeriod:withInt:", "withPeriodAdded", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "plusWithLong:", "plus", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "plusWithOrgJodaTimeReadableDuration:", "plus", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "plusWithOrgJodaTimeReadablePeriod:", "plus", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "plusYearsWithInt:", "plusYears", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "plusMonthsWithInt:", "plusMonths", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "plusWeeksWithInt:", "plusWeeks", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "plusDaysWithInt:", "plusDays", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "minusWithLong:", "minus", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "minusWithOrgJodaTimeReadableDuration:", "minus", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "minusWithOrgJodaTimeReadablePeriod:", "minus", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "minusYearsWithInt:", "minusYears", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "minusMonthsWithInt:", "minusMonths", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "minusWeeksWithInt:", "minusWeeks", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "minusDaysWithInt:", "minusDays", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "propertyWithOrgJodaTimeDateTimeFieldType:", "property", "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "toYearMonthDay", NULL, "Lorg.joda.time.YearMonthDay;", 0x1, NULL, NULL },
    { "toLocalDate", NULL, "Lorg.joda.time.LocalDate;", 0x1, NULL, NULL },
    { "toInterval", NULL, "Lorg.joda.time.Interval;", 0x1, NULL, NULL },
    { "withEraWithInt:", "withEra", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withCenturyOfEraWithInt:", "withCenturyOfEra", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withYearOfEraWithInt:", "withYearOfEra", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withYearOfCenturyWithInt:", "withYearOfCentury", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withYearWithInt:", "withYear", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withWeekyearWithInt:", "withWeekyear", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withMonthOfYearWithInt:", "withMonthOfYear", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withWeekOfWeekyearWithInt:", "withWeekOfWeekyear", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withDayOfYearWithInt:", "withDayOfYear", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withDayOfMonthWithInt:", "withDayOfMonth", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withDayOfWeekWithInt:", "withDayOfWeek", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "era", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "centuryOfEra", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "yearOfCentury", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "yearOfEra", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "year", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "weekyear", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "monthOfYear", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "weekOfWeekyear", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "dayOfYear", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "dayOfMonth", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
    { "dayOfWeek", NULL, "Lorg.joda.time.DateMidnight$Property;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeDateMidnight_serialVersionUID },
  };
  static const char *inner_classes[] = {"Lorg.joda.time.DateMidnight$Property;"};
  static const J2ObjcClassInfo _OrgJodaTimeDateMidnight = { 2, "DateMidnight", "org.joda.time", NULL, 0x11, 67, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgJodaTimeDateMidnight;
}

@end

OrgJodaTimeDateMidnight *OrgJodaTimeDateMidnight_now() {
  OrgJodaTimeDateMidnight_initialize();
  return create_OrgJodaTimeDateMidnight_init();
}

OrgJodaTimeDateMidnight *OrgJodaTimeDateMidnight_nowWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeDateMidnight_initialize();
  if (zone == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Zone must not be null");
  }
  return create_OrgJodaTimeDateMidnight_initWithOrgJodaTimeDateTimeZone_(zone);
}

OrgJodaTimeDateMidnight *OrgJodaTimeDateMidnight_nowWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology) {
  OrgJodaTimeDateMidnight_initialize();
  if (chronology == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Chronology must not be null");
  }
  return create_OrgJodaTimeDateMidnight_initWithOrgJodaTimeChronology_(chronology);
}

OrgJodaTimeDateMidnight *OrgJodaTimeDateMidnight_parseWithNSString_(NSString *str) {
  OrgJodaTimeDateMidnight_initialize();
  return OrgJodaTimeDateMidnight_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_(str, [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_dateTimeParser())) withOffsetParsed]);
}

OrgJodaTimeDateMidnight *OrgJodaTimeDateMidnight_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_(NSString *str, OrgJodaTimeFormatDateTimeFormatter *formatter) {
  OrgJodaTimeDateMidnight_initialize();
  return [((OrgJodaTimeDateTime *) nil_chk([((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(formatter)) parseDateTimeWithNSString:str])) toDateMidnight];
}

void OrgJodaTimeDateMidnight_init(OrgJodaTimeDateMidnight *self) {
  OrgJodaTimeBaseBaseDateTime_init(self);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_init() {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_init(self);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_init() {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_init(self);
  return self;
}

void OrgJodaTimeDateMidnight_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateMidnight *self, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeBaseBaseDateTime_initWithOrgJodaTimeDateTimeZone_(self, zone);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithOrgJodaTimeDateTimeZone_(self, zone);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithOrgJodaTimeDateTimeZone_(self, zone);
  return self;
}

void OrgJodaTimeDateMidnight_initWithOrgJodaTimeChronology_(OrgJodaTimeDateMidnight *self, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBaseDateTime_initWithOrgJodaTimeChronology_(self, chronology);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithOrgJodaTimeChronology_(self, chronology);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithOrgJodaTimeChronology_(self, chronology);
  return self;
}

void OrgJodaTimeDateMidnight_initWithLong_(OrgJodaTimeDateMidnight *self, jlong instant) {
  OrgJodaTimeBaseBaseDateTime_initWithLong_(self, instant);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithLong_(jlong instant) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithLong_(self, instant);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithLong_(jlong instant) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithLong_(self, instant);
  return self;
}

void OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeDateTimeZone_(OrgJodaTimeDateMidnight *self, jlong instant, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeBaseBaseDateTime_initWithLong_withOrgJodaTimeDateTimeZone_(self, instant, zone);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeDateTimeZone_(jlong instant, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeDateTimeZone_(self, instant, zone);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeDateTimeZone_(jlong instant, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeDateTimeZone_(self, instant, zone);
  return self;
}

void OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeChronology_(OrgJodaTimeDateMidnight *self, jlong instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBaseDateTime_initWithLong_withOrgJodaTimeChronology_(self, instant, chronology);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithLong_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

void OrgJodaTimeDateMidnight_initWithId_(OrgJodaTimeDateMidnight *self, id instant) {
  OrgJodaTimeBaseBaseDateTime_initWithId_withOrgJodaTimeChronology_(self, instant, nil);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithId_(id instant) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithId_(self, instant);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithId_(id instant) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithId_(self, instant);
  return self;
}

void OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeDateTimeZone_(OrgJodaTimeDateMidnight *self, id instant, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeBaseBaseDateTime_initWithId_withOrgJodaTimeDateTimeZone_(self, instant, zone);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeDateTimeZone_(id instant, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeDateTimeZone_(self, instant, zone);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeDateTimeZone_(id instant, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeDateTimeZone_(self, instant, zone);
  return self;
}

void OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeChronology_(OrgJodaTimeDateMidnight *self, id instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBaseDateTime_initWithId_withOrgJodaTimeChronology_(self, instant, OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(chronology));
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithId_withOrgJodaTimeChronology_(self, instant, chronology);
  return self;
}

void OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_(OrgJodaTimeDateMidnight *self, jint year, jint monthOfYear, jint dayOfMonth) {
  OrgJodaTimeBaseBaseDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(self, year, monthOfYear, dayOfMonth, 0, 0, 0, 0);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_(self, year, monthOfYear, dayOfMonth);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_(jint year, jint monthOfYear, jint dayOfMonth) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_(self, year, monthOfYear, dayOfMonth);
  return self;
}

void OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(OrgJodaTimeDateMidnight *self, jint year, jint monthOfYear, jint dayOfMonth, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeBaseBaseDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(self, year, monthOfYear, dayOfMonth, 0, 0, 0, 0, zone);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(jint year, jint monthOfYear, jint dayOfMonth, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(self, year, monthOfYear, dayOfMonth, zone);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(jint year, jint monthOfYear, jint dayOfMonth, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeDateTimeZone_(self, year, monthOfYear, dayOfMonth, zone);
  return self;
}

void OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(OrgJodaTimeDateMidnight *self, jint year, jint monthOfYear, jint dayOfMonth, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBaseDateTime_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withOrgJodaTimeChronology_(self, year, monthOfYear, dayOfMonth, 0, 0, 0, 0, chronology);
}

OrgJodaTimeDateMidnight *new_OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, jint dayOfMonth, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeDateMidnight *self = [OrgJodaTimeDateMidnight alloc];
  OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(self, year, monthOfYear, dayOfMonth, chronology);
  return self;
}

OrgJodaTimeDateMidnight *create_OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, jint dayOfMonth, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeDateMidnight *self = [[OrgJodaTimeDateMidnight alloc] autorelease];
  OrgJodaTimeDateMidnight_initWithInt_withInt_withInt_withOrgJodaTimeChronology_(self, year, monthOfYear, dayOfMonth, chronology);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeDateMidnight)

@implementation OrgJodaTimeDateMidnight_Property

- (instancetype)initWithOrgJodaTimeDateMidnight:(OrgJodaTimeDateMidnight *)instant
                   withOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field {
  OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, instant, field);
  return self;
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)oos {
  [((JavaIoObjectOutputStream *) nil_chk(oos)) writeObjectWithId:iInstant_];
  [oos writeObjectWithId:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getType]];
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)oos {
  JreStrongAssign(&iInstant_, (OrgJodaTimeDateMidnight *) cast_chk([((JavaIoObjectInputStream *) nil_chk(oos)) readObject], [OrgJodaTimeDateMidnight class]));
  OrgJodaTimeDateTimeFieldType *type = (OrgJodaTimeDateTimeFieldType *) cast_chk([oos readObject], [OrgJodaTimeDateTimeFieldType class]);
  JreStrongAssign(&iField_, [((OrgJodaTimeDateTimeFieldType *) nil_chk(type)) getFieldWithOrgJodaTimeChronology:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getChronology]]);
}

- (OrgJodaTimeDateTimeField *)getField {
  return iField_;
}

- (jlong)getMillis {
  return [((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis];
}

- (OrgJodaTimeChronology *)getChronology {
  return [((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getChronology];
}

- (OrgJodaTimeDateMidnight *)getDateMidnight {
  return iInstant_;
}

- (OrgJodaTimeDateMidnight *)addToCopyWithInt:(jint)value {
  return [iInstant_ withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWithLong:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis] withInt:value]];
}

- (OrgJodaTimeDateMidnight *)addToCopyWithLong:(jlong)value {
  return [iInstant_ withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWithLong:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis] withLong:value]];
}

- (OrgJodaTimeDateMidnight *)addWrapFieldToCopyWithInt:(jint)value {
  return [iInstant_ withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWrapFieldWithLong:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis] withInt:value]];
}

- (OrgJodaTimeDateMidnight *)setCopyWithInt:(jint)value {
  return [iInstant_ withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithLong:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis] withInt:value]];
}

- (OrgJodaTimeDateMidnight *)setCopyWithNSString:(NSString *)text
                              withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [iInstant_ withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithLong:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis] withNSString:text withJavaUtilLocale:locale]];
}

- (OrgJodaTimeDateMidnight *)setCopyWithNSString:(NSString *)text {
  return [self setCopyWithNSString:text withJavaUtilLocale:nil];
}

- (OrgJodaTimeDateMidnight *)withMaximumValue {
  return [self setCopyWithInt:[self getMaximumValue]];
}

- (OrgJodaTimeDateMidnight *)withMinimumValue {
  return [self setCopyWithInt:[self getMinimumValue]];
}

- (OrgJodaTimeDateMidnight *)roundFloorCopy {
  return [iInstant_ withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundFloorWithLong:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis]]];
}

- (OrgJodaTimeDateMidnight *)roundCeilingCopy {
  return [iInstant_ withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundCeilingWithLong:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis]]];
}

- (OrgJodaTimeDateMidnight *)roundHalfFloorCopy {
  return [iInstant_ withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundHalfFloorWithLong:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis]]];
}

- (OrgJodaTimeDateMidnight *)roundHalfCeilingCopy {
  return [iInstant_ withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundHalfCeilingWithLong:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis]]];
}

- (OrgJodaTimeDateMidnight *)roundHalfEvenCopy {
  return [iInstant_ withMillisWithLong:[((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundHalfEvenWithLong:[((OrgJodaTimeDateMidnight *) nil_chk(iInstant_)) getMillis]]];
}

- (void)dealloc {
  RELEASE_(iInstant_);
  RELEASE_(iField_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeDateMidnight:withOrgJodaTimeDateTimeField:", "Property", NULL, 0x0, NULL, NULL },
    { "writeObjectWithJavaIoObjectOutputStream:", "writeObject", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readObjectWithJavaIoObjectInputStream:", "readObject", "V", 0x2, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
    { "getField", NULL, "Lorg.joda.time.DateTimeField;", 0x1, NULL, NULL },
    { "getMillis", NULL, "J", 0x4, NULL, NULL },
    { "getChronology", NULL, "Lorg.joda.time.Chronology;", 0x4, NULL, NULL },
    { "getDateMidnight", NULL, "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "addToCopyWithInt:", "addToCopy", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "addToCopyWithLong:", "addToCopy", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "addWrapFieldToCopyWithInt:", "addWrapFieldToCopy", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "setCopyWithInt:", "setCopy", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "setCopyWithNSString:withJavaUtilLocale:", "setCopy", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "setCopyWithNSString:", "setCopy", "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withMaximumValue", NULL, "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "withMinimumValue", NULL, "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "roundFloorCopy", NULL, "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "roundCeilingCopy", NULL, "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "roundHalfFloorCopy", NULL, "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "roundHalfCeilingCopy", NULL, "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
    { "roundHalfEvenCopy", NULL, "Lorg.joda.time.DateMidnight;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeDateMidnight_Property_serialVersionUID },
    { "iInstant_", NULL, 0x2, "Lorg.joda.time.DateMidnight;", NULL, NULL, .constantValue.asLong = 0 },
    { "iField_", NULL, 0x2, "Lorg.joda.time.DateTimeField;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgJodaTimeDateMidnight_Property = { 2, "Property", "org.joda.time", "DateMidnight", 0x19, 20, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeDateMidnight_Property;
}

@end

void OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(OrgJodaTimeDateMidnight_Property *self, OrgJodaTimeDateMidnight *instant, OrgJodaTimeDateTimeField *field) {
  OrgJodaTimeFieldAbstractReadableInstantFieldProperty_init(self);
  JreStrongAssign(&self->iInstant_, instant);
  JreStrongAssign(&self->iField_, field);
}

OrgJodaTimeDateMidnight_Property *new_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(OrgJodaTimeDateMidnight *instant, OrgJodaTimeDateTimeField *field) {
  OrgJodaTimeDateMidnight_Property *self = [OrgJodaTimeDateMidnight_Property alloc];
  OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, instant, field);
  return self;
}

OrgJodaTimeDateMidnight_Property *create_OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(OrgJodaTimeDateMidnight *instant, OrgJodaTimeDateTimeField *field) {
  OrgJodaTimeDateMidnight_Property *self = [[OrgJodaTimeDateMidnight_Property alloc] autorelease];
  OrgJodaTimeDateMidnight_Property_initWithOrgJodaTimeDateMidnight_withOrgJodaTimeDateTimeField_(self, instant, field);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeDateMidnight_Property)
