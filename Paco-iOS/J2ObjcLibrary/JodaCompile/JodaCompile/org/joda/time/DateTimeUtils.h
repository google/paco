//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: joda-time/src/main/java/org/joda/time/DateTimeUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeDateTimeUtils_INCLUDE_ALL")
#ifdef OrgJodaTimeDateTimeUtils_RESTRICT
#define OrgJodaTimeDateTimeUtils_INCLUDE_ALL 0
#else
#define OrgJodaTimeDateTimeUtils_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeDateTimeUtils_RESTRICT
#ifdef OrgJodaTimeDateTimeUtils_OffsetMillisProvider_INCLUDE
#define OrgJodaTimeDateTimeUtils_MillisProvider_INCLUDE 1
#endif
#ifdef OrgJodaTimeDateTimeUtils_FixedMillisProvider_INCLUDE
#define OrgJodaTimeDateTimeUtils_MillisProvider_INCLUDE 1
#endif
#ifdef OrgJodaTimeDateTimeUtils_SystemMillisProvider_INCLUDE
#define OrgJodaTimeDateTimeUtils_MillisProvider_INCLUDE 1
#endif

#if !defined (OrgJodaTimeDateTimeUtils_) && (OrgJodaTimeDateTimeUtils_INCLUDE_ALL || defined(OrgJodaTimeDateTimeUtils_INCLUDE))
#define OrgJodaTimeDateTimeUtils_

@class JavaTextDateFormatSymbols;
@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimePeriodType;
@protocol JavaUtilMap;
@protocol OrgJodaTimeDateTimeUtils_MillisProvider;
@protocol OrgJodaTimeReadableDuration;
@protocol OrgJodaTimeReadableInstant;
@protocol OrgJodaTimeReadableInterval;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeDateTimeUtils : NSObject

#pragma mark Public

+ (jlong)currentTimeMillis;

+ (jlong)fromJulianDayWithDouble:(jdouble)julianDay;

+ (OrgJodaTimeChronology *)getChronologyWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

+ (JavaTextDateFormatSymbols *)getDateFormatSymbolsWithJavaUtilLocale:(JavaUtilLocale *)locale;

+ (id<JavaUtilMap>)getDefaultTimeZoneNames;

+ (jlong)getDurationMillisWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration;

+ (OrgJodaTimeChronology *)getInstantChronologyWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

+ (jlong)getInstantMillisWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

+ (OrgJodaTimeChronology *)getIntervalChronologyWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                                                withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end;

+ (OrgJodaTimeChronology *)getIntervalChronologyWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval;

+ (OrgJodaTimePeriodType *)getPeriodTypeWithOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type;

+ (id<OrgJodaTimeReadableInterval>)getReadableIntervalWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval;

+ (OrgJodaTimeDateTimeZone *)getZoneWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

+ (jboolean)isContiguousWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial;

+ (void)setCurrentMillisFixedWithLong:(jlong)fixedMillis;

+ (void)setCurrentMillisOffsetWithLong:(jlong)offsetMillis;

+ (void)setCurrentMillisProviderWithOrgJodaTimeDateTimeUtils_MillisProvider:(id<OrgJodaTimeDateTimeUtils_MillisProvider>)millisProvider;

+ (void)setCurrentMillisSystem;

+ (void)setDefaultTimeZoneNamesWithJavaUtilMap:(id<JavaUtilMap>)names;

+ (jdouble)toJulianDayWithLong:(jlong)epochMillis;

+ (jlong)toJulianDayNumberWithLong:(jlong)epochMillis;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeDateTimeUtils)

FOUNDATION_EXPORT void OrgJodaTimeDateTimeUtils_init(OrgJodaTimeDateTimeUtils *self);

FOUNDATION_EXPORT OrgJodaTimeDateTimeUtils *new_OrgJodaTimeDateTimeUtils_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTimeUtils *create_OrgJodaTimeDateTimeUtils_init();

FOUNDATION_EXPORT jlong OrgJodaTimeDateTimeUtils_currentTimeMillis();

FOUNDATION_EXPORT void OrgJodaTimeDateTimeUtils_setCurrentMillisSystem();

FOUNDATION_EXPORT void OrgJodaTimeDateTimeUtils_setCurrentMillisFixedWithLong_(jlong fixedMillis);

FOUNDATION_EXPORT void OrgJodaTimeDateTimeUtils_setCurrentMillisOffsetWithLong_(jlong offsetMillis);

FOUNDATION_EXPORT void OrgJodaTimeDateTimeUtils_setCurrentMillisProviderWithOrgJodaTimeDateTimeUtils_MillisProvider_(id<OrgJodaTimeDateTimeUtils_MillisProvider> millisProvider);

FOUNDATION_EXPORT jlong OrgJodaTimeDateTimeUtils_getInstantMillisWithOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> instant);

FOUNDATION_EXPORT OrgJodaTimeChronology *OrgJodaTimeDateTimeUtils_getInstantChronologyWithOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> instant);

FOUNDATION_EXPORT OrgJodaTimeChronology *OrgJodaTimeDateTimeUtils_getIntervalChronologyWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end);

FOUNDATION_EXPORT OrgJodaTimeChronology *OrgJodaTimeDateTimeUtils_getIntervalChronologyWithOrgJodaTimeReadableInterval_(id<OrgJodaTimeReadableInterval> interval);

FOUNDATION_EXPORT id<OrgJodaTimeReadableInterval> OrgJodaTimeDateTimeUtils_getReadableIntervalWithOrgJodaTimeReadableInterval_(id<OrgJodaTimeReadableInterval> interval);

FOUNDATION_EXPORT OrgJodaTimeChronology *OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chrono);

FOUNDATION_EXPORT OrgJodaTimeDateTimeZone *OrgJodaTimeDateTimeUtils_getZoneWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimePeriodType *OrgJodaTimeDateTimeUtils_getPeriodTypeWithOrgJodaTimePeriodType_(OrgJodaTimePeriodType *type);

FOUNDATION_EXPORT jlong OrgJodaTimeDateTimeUtils_getDurationMillisWithOrgJodaTimeReadableDuration_(id<OrgJodaTimeReadableDuration> duration);

FOUNDATION_EXPORT jboolean OrgJodaTimeDateTimeUtils_isContiguousWithOrgJodaTimeReadablePartial_(id<OrgJodaTimeReadablePartial> partial);

FOUNDATION_EXPORT JavaTextDateFormatSymbols *OrgJodaTimeDateTimeUtils_getDateFormatSymbolsWithJavaUtilLocale_(JavaUtilLocale *locale);

FOUNDATION_EXPORT id<JavaUtilMap> OrgJodaTimeDateTimeUtils_getDefaultTimeZoneNames();

FOUNDATION_EXPORT void OrgJodaTimeDateTimeUtils_setDefaultTimeZoneNamesWithJavaUtilMap_(id<JavaUtilMap> names);

FOUNDATION_EXPORT jdouble OrgJodaTimeDateTimeUtils_toJulianDayWithLong_(jlong epochMillis);

FOUNDATION_EXPORT jlong OrgJodaTimeDateTimeUtils_toJulianDayNumberWithLong_(jlong epochMillis);

FOUNDATION_EXPORT jlong OrgJodaTimeDateTimeUtils_fromJulianDayWithDouble_(jdouble julianDay);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTimeUtils)

#endif

#if !defined (OrgJodaTimeDateTimeUtils_MillisProvider_) && (OrgJodaTimeDateTimeUtils_INCLUDE_ALL || defined(OrgJodaTimeDateTimeUtils_MillisProvider_INCLUDE))
#define OrgJodaTimeDateTimeUtils_MillisProvider_

@protocol OrgJodaTimeDateTimeUtils_MillisProvider < NSObject, JavaObject >

- (jlong)getMillis;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeDateTimeUtils_MillisProvider)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTimeUtils_MillisProvider)

#endif

#if !defined (OrgJodaTimeDateTimeUtils_SystemMillisProvider_) && (OrgJodaTimeDateTimeUtils_INCLUDE_ALL || defined(OrgJodaTimeDateTimeUtils_SystemMillisProvider_INCLUDE))
#define OrgJodaTimeDateTimeUtils_SystemMillisProvider_

@interface OrgJodaTimeDateTimeUtils_SystemMillisProvider : NSObject < OrgJodaTimeDateTimeUtils_MillisProvider >

#pragma mark Public

- (jlong)getMillis;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeDateTimeUtils_SystemMillisProvider)

FOUNDATION_EXPORT void OrgJodaTimeDateTimeUtils_SystemMillisProvider_init(OrgJodaTimeDateTimeUtils_SystemMillisProvider *self);

FOUNDATION_EXPORT OrgJodaTimeDateTimeUtils_SystemMillisProvider *new_OrgJodaTimeDateTimeUtils_SystemMillisProvider_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTimeUtils_SystemMillisProvider *create_OrgJodaTimeDateTimeUtils_SystemMillisProvider_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTimeUtils_SystemMillisProvider)

#endif

#if !defined (OrgJodaTimeDateTimeUtils_FixedMillisProvider_) && (OrgJodaTimeDateTimeUtils_INCLUDE_ALL || defined(OrgJodaTimeDateTimeUtils_FixedMillisProvider_INCLUDE))
#define OrgJodaTimeDateTimeUtils_FixedMillisProvider_

@interface OrgJodaTimeDateTimeUtils_FixedMillisProvider : NSObject < OrgJodaTimeDateTimeUtils_MillisProvider >

#pragma mark Public

- (jlong)getMillis;

#pragma mark Package-Private

- (instancetype)initWithLong:(jlong)fixedMillis;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeDateTimeUtils_FixedMillisProvider)

FOUNDATION_EXPORT void OrgJodaTimeDateTimeUtils_FixedMillisProvider_initWithLong_(OrgJodaTimeDateTimeUtils_FixedMillisProvider *self, jlong fixedMillis);

FOUNDATION_EXPORT OrgJodaTimeDateTimeUtils_FixedMillisProvider *new_OrgJodaTimeDateTimeUtils_FixedMillisProvider_initWithLong_(jlong fixedMillis) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTimeUtils_FixedMillisProvider *create_OrgJodaTimeDateTimeUtils_FixedMillisProvider_initWithLong_(jlong fixedMillis);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTimeUtils_FixedMillisProvider)

#endif

#if !defined (OrgJodaTimeDateTimeUtils_OffsetMillisProvider_) && (OrgJodaTimeDateTimeUtils_INCLUDE_ALL || defined(OrgJodaTimeDateTimeUtils_OffsetMillisProvider_INCLUDE))
#define OrgJodaTimeDateTimeUtils_OffsetMillisProvider_

@interface OrgJodaTimeDateTimeUtils_OffsetMillisProvider : NSObject < OrgJodaTimeDateTimeUtils_MillisProvider >

#pragma mark Public

- (jlong)getMillis;

#pragma mark Package-Private

- (instancetype)initWithLong:(jlong)offsetMillis;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeDateTimeUtils_OffsetMillisProvider)

FOUNDATION_EXPORT void OrgJodaTimeDateTimeUtils_OffsetMillisProvider_initWithLong_(OrgJodaTimeDateTimeUtils_OffsetMillisProvider *self, jlong offsetMillis);

FOUNDATION_EXPORT OrgJodaTimeDateTimeUtils_OffsetMillisProvider *new_OrgJodaTimeDateTimeUtils_OffsetMillisProvider_initWithLong_(jlong offsetMillis) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTimeUtils_OffsetMillisProvider *create_OrgJodaTimeDateTimeUtils_OffsetMillisProvider_initWithLong_(jlong offsetMillis);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTimeUtils_OffsetMillisProvider)

#endif

#pragma pop_macro("OrgJodaTimeDateTimeUtils_INCLUDE_ALL")
