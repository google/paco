//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/northropo/Projects/paco/Shared/src/com/pacoapp/paco/shared/scheduling/NonESMSignalGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("NonESMSignalGenerator_INCLUDE_ALL")
#ifdef NonESMSignalGenerator_RESTRICT
#define NonESMSignalGenerator_INCLUDE_ALL 0
#else
#define NonESMSignalGenerator_INCLUDE_ALL 1
#endif
#undef NonESMSignalGenerator_RESTRICT

#if !defined (PANonESMSignalGenerator_) && (NonESMSignalGenerator_INCLUDE_ALL || defined(PANonESMSignalGenerator_INCLUDE))
#define PANonESMSignalGenerator_

@class JavaLangInteger;
@class JavaLangLong;
@class OrgJodaTimeDateTime;
@class PASchedule;
@protocol PAEventStore;

@interface PANonESMSignalGenerator : NSObject

#pragma mark Public

- (instancetype)initWithPASchedule:(PASchedule *)schedule
                  withJavaLangLong:(JavaLangLong *)experimentId
                  withPAEventStore:(id<PAEventStore>)eventStore
                      withNSString:(NSString *)groupName
                  withJavaLangLong:(JavaLangLong *)actionTriggerId;

- (OrgJodaTimeDateTime *)getNextAlarmTimeWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)now;

- (OrgJodaTimeDateTime *)getNextTimeTodayForScheduleWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)now
                                                    withOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)nowMidnight
                                                             withPASchedule:(PASchedule *)schedule
                                                           withJavaLangLong:(JavaLangLong *)experimentId;

#pragma mark Package-Private

- (OrgJodaTimeDateTime *)getNthDOWOfMonthWithOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)midnightTomorrow
                                             withJavaLangInteger:(JavaLangInteger *)nthOfMonth
                                             withJavaLangInteger:(JavaLangInteger *)dow;

@end

J2OBJC_EMPTY_STATIC_INIT(PANonESMSignalGenerator)

FOUNDATION_EXPORT void PANonESMSignalGenerator_initWithPASchedule_withJavaLangLong_withPAEventStore_withNSString_withJavaLangLong_(PANonESMSignalGenerator *self, PASchedule *schedule, JavaLangLong *experimentId, id<PAEventStore> eventStore, NSString *groupName, JavaLangLong *actionTriggerId);

FOUNDATION_EXPORT PANonESMSignalGenerator *new_PANonESMSignalGenerator_initWithPASchedule_withJavaLangLong_withPAEventStore_withNSString_withJavaLangLong_(PASchedule *schedule, JavaLangLong *experimentId, id<PAEventStore> eventStore, NSString *groupName, JavaLangLong *actionTriggerId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PANonESMSignalGenerator *create_PANonESMSignalGenerator_initWithPASchedule_withJavaLangLong_withPAEventStore_withNSString_withJavaLangLong_(PASchedule *schedule, JavaLangLong *experimentId, id<PAEventStore> eventStore, NSString *groupName, JavaLangLong *actionTriggerId);

J2OBJC_TYPE_LITERAL_HEADER(PANonESMSignalGenerator)

@compatibility_alias ComPacoappPacoSharedSchedulingNonESMSignalGenerator PANonESMSignalGenerator;

#endif

#if !defined (PANonESMSignalGenerator_SignalTimeHolder_) && (NonESMSignalGenerator_INCLUDE_ALL || defined(PANonESMSignalGenerator_SignalTimeHolder_INCLUDE))
#define PANonESMSignalGenerator_SignalTimeHolder_

@class OrgJodaTimeDateTime;
@class PANonESMSignalGenerator;
@class PASignalTime;

@interface PANonESMSignalGenerator_SignalTimeHolder : NSObject {
 @public
  OrgJodaTimeDateTime *scheduledTime_;
  OrgJodaTimeDateTime *responseTime_;
  OrgJodaTimeDateTime *chosenTime_;
  PASignalTime *signalTime_;
}

#pragma mark Public

- (instancetype)initWithPANonESMSignalGenerator:(PANonESMSignalGenerator *)outer$
                        withOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)scheduledTime
                        withOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)responseTime
                        withOrgJodaTimeDateTime:(OrgJodaTimeDateTime *)chosenTime
                               withPASignalTime:(PASignalTime *)signalTime;

@end

J2OBJC_EMPTY_STATIC_INIT(PANonESMSignalGenerator_SignalTimeHolder)

J2OBJC_FIELD_SETTER(PANonESMSignalGenerator_SignalTimeHolder, scheduledTime_, OrgJodaTimeDateTime *)
J2OBJC_FIELD_SETTER(PANonESMSignalGenerator_SignalTimeHolder, responseTime_, OrgJodaTimeDateTime *)
J2OBJC_FIELD_SETTER(PANonESMSignalGenerator_SignalTimeHolder, chosenTime_, OrgJodaTimeDateTime *)
J2OBJC_FIELD_SETTER(PANonESMSignalGenerator_SignalTimeHolder, signalTime_, PASignalTime *)

FOUNDATION_EXPORT void PANonESMSignalGenerator_SignalTimeHolder_initWithPANonESMSignalGenerator_withOrgJodaTimeDateTime_withOrgJodaTimeDateTime_withOrgJodaTimeDateTime_withPASignalTime_(PANonESMSignalGenerator_SignalTimeHolder *self, PANonESMSignalGenerator *outer$, OrgJodaTimeDateTime *scheduledTime, OrgJodaTimeDateTime *responseTime, OrgJodaTimeDateTime *chosenTime, PASignalTime *signalTime);

FOUNDATION_EXPORT PANonESMSignalGenerator_SignalTimeHolder *new_PANonESMSignalGenerator_SignalTimeHolder_initWithPANonESMSignalGenerator_withOrgJodaTimeDateTime_withOrgJodaTimeDateTime_withOrgJodaTimeDateTime_withPASignalTime_(PANonESMSignalGenerator *outer$, OrgJodaTimeDateTime *scheduledTime, OrgJodaTimeDateTime *responseTime, OrgJodaTimeDateTime *chosenTime, PASignalTime *signalTime) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PANonESMSignalGenerator_SignalTimeHolder *create_PANonESMSignalGenerator_SignalTimeHolder_initWithPANonESMSignalGenerator_withOrgJodaTimeDateTime_withOrgJodaTimeDateTime_withOrgJodaTimeDateTime_withPASignalTime_(PANonESMSignalGenerator *outer$, OrgJodaTimeDateTime *scheduledTime, OrgJodaTimeDateTime *responseTime, OrgJodaTimeDateTime *chosenTime, PASignalTime *signalTime);

J2OBJC_TYPE_LITERAL_HEADER(PANonESMSignalGenerator_SignalTimeHolder)

#endif

#pragma pop_macro("NonESMSignalGenerator_INCLUDE_ALL")
