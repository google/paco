//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/northropo/Projects/paco/Shared/src/com/pacoapp/paco/shared/model2/Schedule.java
//

#include "J2ObjC_header.h"

#pragma push_macro("Schedule_INCLUDE_ALL")
#ifdef Schedule_RESTRICT
#define Schedule_INCLUDE_ALL 0
#else
#define Schedule_INCLUDE_ALL 1
#endif
#undef Schedule_RESTRICT

#if !defined (PASchedule_) && (Schedule_INCLUDE_ALL || defined(PASchedule_INCLUDE))
#define PASchedule_

#define ModelBase_RESTRICT 1
#define PAModelBase_INCLUDE 1
#include "ModelBase.h"

#define Validatable_RESTRICT 1
#define PAValidatable_INCLUDE 1
#include "Validatable.h"

#define MinimumBufferable_RESTRICT 1
#define PAMinimumBufferable_INCLUDE 1
#include "MinimumBufferable.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@protocol JavaUtilList;
@protocol PAValidator;

@interface PASchedule : PAModelBase < PAValidatable, PAMinimumBufferable, JavaIoSerializable > {
 @public
  JavaLangInteger *minimumBuffer_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)scheduleType
                    withJavaLangBoolean:(JavaLangBoolean *)byDayOfMonth
                    withJavaLangInteger:(JavaLangInteger *)dayOfMonth
                       withJavaLangLong:(JavaLangLong *)esmEndHour
                    withJavaLangInteger:(JavaLangInteger *)esmFrequency
                    withJavaLangInteger:(JavaLangInteger *)esmPeriodInDays
                       withJavaLangLong:(JavaLangLong *)esmStartHour
                    withJavaLangInteger:(JavaLangInteger *)nthOfMonth
                    withJavaLangInteger:(JavaLangInteger *)repeatRate
                       withJavaUtilList:(id<JavaUtilList>)times
                    withJavaLangInteger:(JavaLangInteger *)weekDaysScheduled
                    withJavaLangBoolean:(JavaLangBoolean *)esmWeekends
                    withJavaLangInteger:(JavaLangInteger *)timeout
                    withJavaLangInteger:(JavaLangInteger *)minimumBuffer
                    withJavaLangInteger:(JavaLangInteger *)snoozeCount
                    withJavaLangInteger:(JavaLangInteger *)snoozeTime;

- (void)addWeekDayToScheduleWithJavaLangInteger:(JavaLangInteger *)day;

- (jint)convertEsmPeriodToDays;

- (JavaLangLong *)getBeginDate;

- (JavaLangBoolean *)getByDayOfMonth;

- (JavaLangInteger *)getDayOfMonth;

- (JavaLangLong *)getEsmEndHour;

- (JavaLangInteger *)getEsmFrequency;

- (JavaLangInteger *)getEsmPeriodInDays;

- (JavaLangLong *)getEsmStartHour;

- (JavaLangBoolean *)getEsmWeekends;

- (JavaLangLong *)getId;

- (jlong)getJoinDateMillis;

- (JavaLangInteger *)getMinimumBuffer;

- (JavaLangInteger *)getNthOfMonth;

- (JavaLangBoolean *)getOnlyEditableOnJoin;

- (JavaLangInteger *)getRepeatRate;

- (JavaLangInteger *)getScheduleType;

- (id<JavaUtilList>)getSignalTimes;

- (JavaLangBoolean *)getUserEditable;

- (JavaLangInteger *)getWeekDaysScheduled;

- (jboolean)isWeekDayScheduledWithJavaLangInteger:(JavaLangInteger *)day;

- (void)removeAllWeekDaysScheduled;

- (void)removeWeekDayFromScheduleWithJavaLangInteger:(JavaLangInteger *)day;

- (void)setBeginDateWithJavaLangLong:(JavaLangLong *)beginDate;

- (void)setByDayOfMonthWithJavaLangBoolean:(JavaLangBoolean *)byDayOfMonth;

- (void)setDayOfMonthWithJavaLangInteger:(JavaLangInteger *)dayOfMonth;

- (void)setEsmEndHourWithJavaLangLong:(JavaLangLong *)esmEndHour;

- (void)setEsmFrequencyWithJavaLangInteger:(JavaLangInteger *)esmFrequency;

- (void)setEsmPeriodInDaysWithJavaLangInteger:(JavaLangInteger *)esmPeriodInDays;

- (void)setEsmStartHourWithJavaLangLong:(JavaLangLong *)esmStartHour;

- (void)setEsmWeekendsWithJavaLangBoolean:(JavaLangBoolean *)esmWeekends;

- (void)setIdWithJavaLangLong:(JavaLangLong *)id_;

- (void)setJoinDateMillisWithLong:(jlong)joinDateMillis;

- (void)setMinimumBufferWithJavaLangInteger:(JavaLangInteger *)minimumBuffer;

- (void)setNthOfMonthWithJavaLangInteger:(JavaLangInteger *)nthOfMonth;

- (void)setOnlyEditableOnJoinWithJavaLangBoolean:(JavaLangBoolean *)value;

- (void)setRepeatRateWithJavaLangInteger:(JavaLangInteger *)repeatRate;

- (void)setScheduleTypeWithJavaLangInteger:(JavaLangInteger *)scheduleType;

- (void)setSignalTimesWithJavaUtilList:(id<JavaUtilList>)times;

- (void)setUserEditableWithJavaLangBoolean:(JavaLangBoolean *)userEditable;

- (void)setWeekDaysScheduledWithJavaLangInteger:(JavaLangInteger *)selected;

- (void)validateWithWithPAValidator:(id<PAValidator>)validator;

@end

J2OBJC_STATIC_INIT(PASchedule)

J2OBJC_FIELD_SETTER(PASchedule, minimumBuffer_, JavaLangInteger *)

inline jint PASchedule_get_SATURDAY();
#define PASchedule_SATURDAY 64
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, SATURDAY, jint)

inline jint PASchedule_get_FRIDAY();
#define PASchedule_FRIDAY 32
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, FRIDAY, jint)

inline jint PASchedule_get_THURSDAY();
#define PASchedule_THURSDAY 16
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, THURSDAY, jint)

inline jint PASchedule_get_WEDNESDAY();
#define PASchedule_WEDNESDAY 8
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, WEDNESDAY, jint)

inline jint PASchedule_get_TUESDAY();
#define PASchedule_TUESDAY 4
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, TUESDAY, jint)

inline jint PASchedule_get_MONDAY();
#define PASchedule_MONDAY 2
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, MONDAY, jint)

inline jint PASchedule_get_SUNDAY();
#define PASchedule_SUNDAY 1
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, SUNDAY, jint)

inline jint PASchedule_get_DAILY();
#define PASchedule_DAILY 0
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, DAILY, jint)

inline jint PASchedule_get_WEEKDAY();
#define PASchedule_WEEKDAY 1
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, WEEKDAY, jint)

inline jint PASchedule_get_WEEKLY();
#define PASchedule_WEEKLY 2
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, WEEKLY, jint)

inline jint PASchedule_get_MONTHLY();
#define PASchedule_MONTHLY 3
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, MONTHLY, jint)

inline jint PASchedule_get_ESM();
#define PASchedule_ESM 4
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, ESM, jint)

inline jint PASchedule_get_SELF_REPORT();
#define PASchedule_SELF_REPORT 5
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, SELF_REPORT, jint)

inline jint PASchedule_get_ADVANCED();
#define PASchedule_ADVANCED 6
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, ADVANCED, jint)

inline IOSIntArray *PASchedule_get_SCHEDULE_TYPES();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *PASchedule_SCHEDULE_TYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PASchedule, SCHEDULE_TYPES, IOSIntArray *)

inline IOSObjectArray *PASchedule_get_SCHEDULE_TYPES_NAMES();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *PASchedule_SCHEDULE_TYPES_NAMES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PASchedule, SCHEDULE_TYPES_NAMES, IOSObjectArray *)

inline jint PASchedule_get_ESM_PERIOD_DAY();
#define PASchedule_ESM_PERIOD_DAY 0
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, ESM_PERIOD_DAY, jint)

inline jint PASchedule_get_ESM_PERIOD_WEEK();
#define PASchedule_ESM_PERIOD_WEEK 1
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, ESM_PERIOD_WEEK, jint)

inline jint PASchedule_get_ESM_PERIOD_MONTH();
#define PASchedule_ESM_PERIOD_MONTH 2
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, ESM_PERIOD_MONTH, jint)

inline jint PASchedule_get_DEFAULT_ESM_PERIOD();
#define PASchedule_DEFAULT_ESM_PERIOD 0
J2OBJC_STATIC_FIELD_CONSTANT(PASchedule, DEFAULT_ESM_PERIOD, jint)

inline IOSObjectArray *PASchedule_get_ESM_PERIODS_NAMES();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *PASchedule_ESM_PERIODS_NAMES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PASchedule, ESM_PERIODS_NAMES, IOSObjectArray *)

inline JavaLangInteger *PASchedule_get_DEFAULT_REPEAT_RATE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaLangInteger *PASchedule_DEFAULT_REPEAT_RATE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PASchedule, DEFAULT_REPEAT_RATE, JavaLangInteger *)

inline IOSIntArray *PASchedule_get_DAYS_OF_WEEK();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *PASchedule_DAYS_OF_WEEK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PASchedule, DAYS_OF_WEEK, IOSIntArray *)

inline IOSIntArray *PASchedule_get_ESM_PERIODS();
inline IOSIntArray *PASchedule_set_ESM_PERIODS(IOSIntArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *PASchedule_ESM_PERIODS;
J2OBJC_STATIC_FIELD_OBJ(PASchedule, ESM_PERIODS, IOSIntArray *)

FOUNDATION_EXPORT void PASchedule_initWithJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaUtilList_withJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(PASchedule *self, JavaLangInteger *scheduleType, JavaLangBoolean *byDayOfMonth, JavaLangInteger *dayOfMonth, JavaLangLong *esmEndHour, JavaLangInteger *esmFrequency, JavaLangInteger *esmPeriodInDays, JavaLangLong *esmStartHour, JavaLangInteger *nthOfMonth, JavaLangInteger *repeatRate, id<JavaUtilList> times, JavaLangInteger *weekDaysScheduled, JavaLangBoolean *esmWeekends, JavaLangInteger *timeout, JavaLangInteger *minimumBuffer, JavaLangInteger *snoozeCount, JavaLangInteger *snoozeTime);

FOUNDATION_EXPORT PASchedule *new_PASchedule_initWithJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaUtilList_withJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(JavaLangInteger *scheduleType, JavaLangBoolean *byDayOfMonth, JavaLangInteger *dayOfMonth, JavaLangLong *esmEndHour, JavaLangInteger *esmFrequency, JavaLangInteger *esmPeriodInDays, JavaLangLong *esmStartHour, JavaLangInteger *nthOfMonth, JavaLangInteger *repeatRate, id<JavaUtilList> times, JavaLangInteger *weekDaysScheduled, JavaLangBoolean *esmWeekends, JavaLangInteger *timeout, JavaLangInteger *minimumBuffer, JavaLangInteger *snoozeCount, JavaLangInteger *snoozeTime) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PASchedule *create_PASchedule_initWithJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaLangLong_withJavaLangInteger_withJavaLangInteger_withJavaUtilList_withJavaLangInteger_withJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(JavaLangInteger *scheduleType, JavaLangBoolean *byDayOfMonth, JavaLangInteger *dayOfMonth, JavaLangLong *esmEndHour, JavaLangInteger *esmFrequency, JavaLangInteger *esmPeriodInDays, JavaLangLong *esmStartHour, JavaLangInteger *nthOfMonth, JavaLangInteger *repeatRate, id<JavaUtilList> times, JavaLangInteger *weekDaysScheduled, JavaLangBoolean *esmWeekends, JavaLangInteger *timeout, JavaLangInteger *minimumBuffer, JavaLangInteger *snoozeCount, JavaLangInteger *snoozeTime);

FOUNDATION_EXPORT void PASchedule_init(PASchedule *self);

FOUNDATION_EXPORT PASchedule *new_PASchedule_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PASchedule *create_PASchedule_init();

J2OBJC_TYPE_LITERAL_HEADER(PASchedule)

@compatibility_alias ComPacoappPacoSharedModel2Schedule PASchedule;

#endif

#pragma pop_macro("Schedule_INCLUDE_ALL")
