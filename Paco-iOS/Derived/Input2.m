//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/northropo/Projects/paco/Shared/src/com/pacoapp/paco/shared/model2/Input2.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "Input2.h"
#include "J2ObjC_source.h"
#include "ModelBase.h"
#include "Validator.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/util/List.h"

@interface PAInput2 () {
 @public
  NSString *name_;
  JavaLangBoolean *required_;
  JavaLangBoolean *conditional_;
  NSString *conditionExpression_;
  NSString *responseType_;
  NSString *text_;
  JavaLangInteger *likertSteps_;
  NSString *leftSideLabel_;
  NSString *rightSideLabel_;
  id<JavaUtilList> listChoices_;
  JavaLangBoolean *multiselect_;
}

@end

J2OBJC_FIELD_SETTER(PAInput2, name_, NSString *)
J2OBJC_FIELD_SETTER(PAInput2, required_, JavaLangBoolean *)
J2OBJC_FIELD_SETTER(PAInput2, conditional_, JavaLangBoolean *)
J2OBJC_FIELD_SETTER(PAInput2, conditionExpression_, NSString *)
J2OBJC_FIELD_SETTER(PAInput2, responseType_, NSString *)
J2OBJC_FIELD_SETTER(PAInput2, text_, NSString *)
J2OBJC_FIELD_SETTER(PAInput2, likertSteps_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(PAInput2, leftSideLabel_, NSString *)
J2OBJC_FIELD_SETTER(PAInput2, rightSideLabel_, NSString *)
J2OBJC_FIELD_SETTER(PAInput2, listChoices_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(PAInput2, multiselect_, JavaLangBoolean *)

J2OBJC_INITIALIZED_DEFN(PAInput2)

NSString *PAInput2_LIKERT = @"likert";
NSString *PAInput2_LIKERT_SMILEYS = @"likert_smileys";
NSString *PAInput2_OPEN_TEXT = @"open text";
NSString *PAInput2_LIST = @"list";
NSString *PAInput2_NUMBER = @"number";
NSString *PAInput2_LOCATION = @"location";
NSString *PAInput2_PHOTO = @"photo";
NSString *PAInput2_SOUND = @"sound";
NSString *PAInput2_ACTIVITY = @"activity";
IOSObjectArray *PAInput2_RESPONSE_TYPES;
JavaLangInteger *PAInput2_DEFAULT_LIKERT_STEPS;

@implementation PAInput2

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)responseType
                    withNSString:(NSString *)text
             withJavaLangBoolean:(JavaLangBoolean *)required
             withJavaLangInteger:(JavaLangInteger *)likertSteps
             withJavaLangBoolean:(JavaLangBoolean *)conditional
                    withNSString:(NSString *)conditionExpr
                    withNSString:(NSString *)leftSideLabel
                    withNSString:(NSString *)rightSideLabel
                withJavaUtilList:(id<JavaUtilList>)listChoices
             withJavaLangBoolean:(JavaLangBoolean *)multiselect {
  PAInput2_initWithNSString_withNSString_withNSString_withJavaLangBoolean_withJavaLangInteger_withJavaLangBoolean_withNSString_withNSString_withNSString_withJavaUtilList_withJavaLangBoolean_(self, name, responseType, text, required, likertSteps, conditional, conditionExpr, leftSideLabel, rightSideLabel, listChoices, multiselect);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)text {
  PAInput2_initWithNSString_withNSString_(self, name, text);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  PAInput2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getText {
  return text_;
}

- (void)setTextWithNSString:(NSString *)text {
  self->text_ = text;
}

- (JavaLangBoolean *)getRequired {
  return required_;
}

- (void)setRequiredWithJavaLangBoolean:(JavaLangBoolean *)required {
  self->required_ = required;
}

- (NSString *)getResponseType {
  return responseType_;
}

- (void)setResponseTypeWithNSString:(NSString *)type {
  self->responseType_ = type;
}

- (JavaLangInteger *)getLikertSteps {
  return likertSteps_;
}

- (void)setLikertStepsWithJavaLangInteger:(JavaLangInteger *)steps {
  self->likertSteps_ = steps;
}

- (NSString *)getName {
  return name_;
}

- (void)setNameWithNSString:(NSString *)name {
  self->name_ = name;
}

- (JavaLangBoolean *)getConditional {
  return conditional_;
}

- (void)setConditionalWithJavaLangBoolean:(JavaLangBoolean *)conditional {
  self->conditional_ = conditional;
}

- (NSString *)getConditionExpression {
  return conditionExpression_;
}

- (void)setConditionExpressionWithNSString:(NSString *)conditionExpression {
  self->conditionExpression_ = conditionExpression;
}

- (NSString *)getLeftSideLabel {
  return leftSideLabel_;
}

- (void)setLeftSideLabelWithNSString:(NSString *)leftSideLabel {
  self->leftSideLabel_ = leftSideLabel;
}

- (NSString *)getRightSideLabel {
  return rightSideLabel_;
}

- (void)setRightSideLabelWithNSString:(NSString *)rightSideLabel {
  self->rightSideLabel_ = rightSideLabel;
}

- (id<JavaUtilList>)getListChoices {
  return listChoices_;
}

- (void)setListChoicesWithJavaUtilList:(id<JavaUtilList>)list2 {
  self->listChoices_ = list2;
}

- (JavaLangBoolean *)getMultiselect {
  return multiselect_;
}

- (void)setMultiselectWithJavaLangBoolean:(JavaLangBoolean *)multiselect {
  self->multiselect_ = multiselect;
}

- (void)validateWithWithPAValidator:(id<PAValidator>)validator {
  [((id<PAValidator>) nil_chk(validator)) isNotNullAndNonEmptyStringWithNSString:name_ withNSString:@"input name is not properly initialized"];
  if (text_ != nil && ((jint) [text_ length]) > 0) {
    [validator isTrueWithBoolean:((jint) [text_ length]) <= 500 withNSString:@"input question text is too long. 500 char limit."];
  }
  [validator isNotNullWithId:responseType_ withNSString:@"responseType is not properly initialized"];
  [validator isNotNullWithId:required_ withNSString:@"required is not properly initialized"];
  if (responseType_ != nil) {
    if ([responseType_ isEqual:PAInput2_LIKERT]) {
      [validator isNotNullWithId:likertSteps_ withNSString:@"scales need a number of steps specified"];
    }
    else if ([responseType_ isEqual:PAInput2_LIST]) {
      [validator isNotNullAndNonEmptyCollectionWithJavaUtilCollection:listChoices_ withNSString:@"lists must have a non-empty set of choices"];
      for (NSString * __strong choice in nil_chk(listChoices_)) {
        [validator isNotNullAndNonEmptyStringWithNSString:choice withNSString:@"list choice text must all be non-empty"];
        if (choice != nil && ((jint) [choice length]) > 0) {
          [validator isTrueWithBoolean:((jint) [choice length]) <= 500 withNSString:@"list choice text is too long. 500 char limit."];
        }
      }
      [validator isNotNullWithId:multiselect_ withNSString:@"multiselect is not initialized properly"];
    }
    else if ([responseType_ isEqual:PAInput2_LIKERT_SMILEYS]) {
    }
  }
  [validator isNotNullWithId:conditional_ withNSString:@"conditional is not initialized properly"];
  if (conditional_ != nil && [conditional_ booleanValue]) {
    [validator isValidConditionalExpressionWithNSString:conditionExpression_ withNSString:@"conditionalExpression is not properly specified"];
  }
}

- (jboolean)isInvisible {
  return [((NSString *) nil_chk(responseType_)) isEqual:PAInput2_LOCATION] || [responseType_ isEqual:PAInput2_PHOTO];
}

- (jboolean)isNumeric {
  return [((NSString *) nil_chk(responseType_)) isEqual:PAInput2_LIKERT] || [responseType_ isEqual:PAInput2_LIST] || [responseType_ isEqual:PAInput2_NUMBER];
}

+ (void)initialize {
  if (self == [PAInput2 class]) {
    PAInput2_RESPONSE_TYPES = [IOSObjectArray newArrayWithObjects:(id[]){ PAInput2_LIKERT_SMILEYS, PAInput2_LIKERT, PAInput2_OPEN_TEXT, PAInput2_LIST, PAInput2_NUMBER, PAInput2_LOCATION, PAInput2_PHOTO, PAInput2_SOUND, PAInput2_ACTIVITY } count:9 type:NSString_class_()];
    PAInput2_DEFAULT_LIKERT_STEPS = JavaLangInteger_valueOfWithInt_(5);
    J2OBJC_SET_INITIALIZED(PAInput2)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withNSString:withJavaLangBoolean:withJavaLangInteger:withJavaLangBoolean:withNSString:withNSString:withNSString:withJavaUtilList:withJavaLangBoolean:", "Input2", NULL, 0x1, NULL, "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/Boolean;)V" },
    { "initWithNSString:withNSString:", "Input2", NULL, 0x1, NULL, NULL },
    { "init", "Input2", NULL, 0x1, NULL, NULL },
    { "getText", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setTextWithNSString:", "setText", "V", 0x1, NULL, NULL },
    { "getRequired", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setRequiredWithJavaLangBoolean:", "setRequired", "V", 0x1, NULL, NULL },
    { "getResponseType", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setResponseTypeWithNSString:", "setResponseType", "V", 0x1, NULL, NULL },
    { "getLikertSteps", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setLikertStepsWithJavaLangInteger:", "setLikertSteps", "V", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setNameWithNSString:", "setName", "V", 0x1, NULL, NULL },
    { "getConditional", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setConditionalWithJavaLangBoolean:", "setConditional", "V", 0x1, NULL, NULL },
    { "getConditionExpression", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setConditionExpressionWithNSString:", "setConditionExpression", "V", 0x1, NULL, NULL },
    { "getLeftSideLabel", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setLeftSideLabelWithNSString:", "setLeftSideLabel", "V", 0x1, NULL, NULL },
    { "getRightSideLabel", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setRightSideLabelWithNSString:", "setRightSideLabel", "V", 0x1, NULL, NULL },
    { "getListChoices", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Ljava/lang/String;>;" },
    { "setListChoicesWithJavaUtilList:", "setListChoices", "V", 0x1, NULL, "(Ljava/util/List<Ljava/lang/String;>;)V" },
    { "getMultiselect", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setMultiselectWithJavaLangBoolean:", "setMultiselect", "V", 0x1, NULL, NULL },
    { "validateWithWithPAValidator:", "validateWith", "V", 0x1, NULL, NULL },
    { "isInvisible", NULL, "Z", 0x1, NULL, NULL },
    { "isNumeric", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LIKERT", "LIKERT", 0x19, "Ljava.lang.String;", &PAInput2_LIKERT, NULL, .constantValue.asLong = 0 },
    { "LIKERT_SMILEYS", "LIKERT_SMILEYS", 0x19, "Ljava.lang.String;", &PAInput2_LIKERT_SMILEYS, NULL, .constantValue.asLong = 0 },
    { "OPEN_TEXT", "OPEN_TEXT", 0x19, "Ljava.lang.String;", &PAInput2_OPEN_TEXT, NULL, .constantValue.asLong = 0 },
    { "LIST", "LIST", 0x19, "Ljava.lang.String;", &PAInput2_LIST, NULL, .constantValue.asLong = 0 },
    { "NUMBER", "NUMBER", 0x19, "Ljava.lang.String;", &PAInput2_NUMBER, NULL, .constantValue.asLong = 0 },
    { "LOCATION", "LOCATION", 0x19, "Ljava.lang.String;", &PAInput2_LOCATION, NULL, .constantValue.asLong = 0 },
    { "PHOTO", "PHOTO", 0x19, "Ljava.lang.String;", &PAInput2_PHOTO, NULL, .constantValue.asLong = 0 },
    { "SOUND", "SOUND", 0x19, "Ljava.lang.String;", &PAInput2_SOUND, NULL, .constantValue.asLong = 0 },
    { "ACTIVITY", "ACTIVITY", 0x19, "Ljava.lang.String;", &PAInput2_ACTIVITY, NULL, .constantValue.asLong = 0 },
    { "RESPONSE_TYPES", "RESPONSE_TYPES", 0x9, "[Ljava.lang.String;", &PAInput2_RESPONSE_TYPES, NULL, .constantValue.asLong = 0 },
    { "name_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "required_", NULL, 0x2, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "conditional_", NULL, 0x2, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "conditionExpression_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "responseType_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "text_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "likertSteps_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "leftSideLabel_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "rightSideLabel_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "listChoices_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/String;>;", .constantValue.asLong = 0 },
    { "multiselect_", NULL, 0x2, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_LIKERT_STEPS", "DEFAULT_LIKERT_STEPS", 0x19, "Ljava.lang.Integer;", &PAInput2_DEFAULT_LIKERT_STEPS, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _PAInput2 = { 2, "Input2", "com.pacoapp.paco.shared.model2", NULL, 0x1, 28, methods, 22, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_PAInput2;
}

@end

void PAInput2_initWithNSString_withNSString_withNSString_withJavaLangBoolean_withJavaLangInteger_withJavaLangBoolean_withNSString_withNSString_withNSString_withJavaUtilList_withJavaLangBoolean_(PAInput2 *self, NSString *name, NSString *responseType, NSString *text, JavaLangBoolean *required, JavaLangInteger *likertSteps, JavaLangBoolean *conditional, NSString *conditionExpr, NSString *leftSideLabel, NSString *rightSideLabel, id<JavaUtilList> listChoices, JavaLangBoolean *multiselect) {
  PAModelBase_init(self);
  self->required_ = JavaLangBoolean_valueOfWithBoolean_(false);
  self->conditional_ = JavaLangBoolean_valueOfWithBoolean_(false);
  self->responseType_ = PAInput2_LIKERT;
  self->multiselect_ = JavaLangBoolean_valueOfWithBoolean_(false);
  self->text_ = text;
  self->required_ = JavaLangBoolean_valueOfWithBoolean_(required != nil ? [required booleanValue] : false);
  self->responseType_ = responseType;
  self->likertSteps_ = likertSteps;
  self->name_ = name;
  self->conditional_ = conditional;
  self->conditionExpression_ = conditionExpr;
  self->leftSideLabel_ = leftSideLabel;
  self->rightSideLabel_ = rightSideLabel;
  self->listChoices_ = listChoices;
  self->multiselect_ = JavaLangBoolean_valueOfWithBoolean_(multiselect != nil ? [multiselect booleanValue] : false);
}

PAInput2 *new_PAInput2_initWithNSString_withNSString_withNSString_withJavaLangBoolean_withJavaLangInteger_withJavaLangBoolean_withNSString_withNSString_withNSString_withJavaUtilList_withJavaLangBoolean_(NSString *name, NSString *responseType, NSString *text, JavaLangBoolean *required, JavaLangInteger *likertSteps, JavaLangBoolean *conditional, NSString *conditionExpr, NSString *leftSideLabel, NSString *rightSideLabel, id<JavaUtilList> listChoices, JavaLangBoolean *multiselect) {
  PAInput2 *self = [PAInput2 alloc];
  PAInput2_initWithNSString_withNSString_withNSString_withJavaLangBoolean_withJavaLangInteger_withJavaLangBoolean_withNSString_withNSString_withNSString_withJavaUtilList_withJavaLangBoolean_(self, name, responseType, text, required, likertSteps, conditional, conditionExpr, leftSideLabel, rightSideLabel, listChoices, multiselect);
  return self;
}

PAInput2 *create_PAInput2_initWithNSString_withNSString_withNSString_withJavaLangBoolean_withJavaLangInteger_withJavaLangBoolean_withNSString_withNSString_withNSString_withJavaUtilList_withJavaLangBoolean_(NSString *name, NSString *responseType, NSString *text, JavaLangBoolean *required, JavaLangInteger *likertSteps, JavaLangBoolean *conditional, NSString *conditionExpr, NSString *leftSideLabel, NSString *rightSideLabel, id<JavaUtilList> listChoices, JavaLangBoolean *multiselect) {
  return new_PAInput2_initWithNSString_withNSString_withNSString_withJavaLangBoolean_withJavaLangInteger_withJavaLangBoolean_withNSString_withNSString_withNSString_withJavaUtilList_withJavaLangBoolean_(name, responseType, text, required, likertSteps, conditional, conditionExpr, leftSideLabel, rightSideLabel, listChoices, multiselect);
}

void PAInput2_initWithNSString_withNSString_(PAInput2 *self, NSString *name, NSString *text) {
  PAInput2_initWithNSString_withNSString_withNSString_withJavaLangBoolean_withJavaLangInteger_withJavaLangBoolean_withNSString_withNSString_withNSString_withJavaUtilList_withJavaLangBoolean_(self, name, PAInput2_LIKERT, text, JavaLangBoolean_valueOfWithBoolean_(false), nil, JavaLangBoolean_valueOfWithBoolean_(false), nil, nil, nil, nil, nil);
}

PAInput2 *new_PAInput2_initWithNSString_withNSString_(NSString *name, NSString *text) {
  PAInput2 *self = [PAInput2 alloc];
  PAInput2_initWithNSString_withNSString_(self, name, text);
  return self;
}

PAInput2 *create_PAInput2_initWithNSString_withNSString_(NSString *name, NSString *text) {
  return new_PAInput2_initWithNSString_withNSString_(name, text);
}

void PAInput2_init(PAInput2 *self) {
  PAModelBase_init(self);
  self->required_ = JavaLangBoolean_valueOfWithBoolean_(false);
  self->conditional_ = JavaLangBoolean_valueOfWithBoolean_(false);
  self->responseType_ = PAInput2_LIKERT;
  self->multiselect_ = JavaLangBoolean_valueOfWithBoolean_(false);
}

PAInput2 *new_PAInput2_init() {
  PAInput2 *self = [PAInput2 alloc];
  PAInput2_init(self);
  return self;
}

PAInput2 *create_PAInput2_init() {
  return new_PAInput2_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PAInput2)
