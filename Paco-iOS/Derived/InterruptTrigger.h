//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/northropo/Projects/paco/Shared/src/com/pacoapp/paco/shared/model2/InterruptTrigger.java
//

#include "J2ObjC_header.h"

#pragma push_macro("InterruptTrigger_INCLUDE_ALL")
#ifdef InterruptTrigger_RESTRICT
#define InterruptTrigger_INCLUDE_ALL 0
#else
#define InterruptTrigger_INCLUDE_ALL 1
#endif
#undef InterruptTrigger_RESTRICT

#if !defined (PAInterruptTrigger_) && (InterruptTrigger_INCLUDE_ALL || defined(PAInterruptTrigger_INCLUDE))
#define PAInterruptTrigger_

#define ActionTrigger_RESTRICT 1
#define PAActionTrigger_INCLUDE 1
#include "ActionTrigger.h"

#define Validatable_RESTRICT 1
#define PAValidatable_INCLUDE 1
#include "Validatable.h"

#define MinimumBufferable_RESTRICT 1
#define PAMinimumBufferable_INCLUDE 1
#include "MinimumBufferable.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@class JavaLangInteger;
@protocol JavaUtilList;
@protocol PAValidator;

@interface PAInterruptTrigger : PAActionTrigger < PAValidatable, PAMinimumBufferable, JavaIoSerializable > {
 @public
  JavaLangInteger *minimumBuffer_;
}

#pragma mark Public

- (instancetype)init;

- (id<JavaUtilList>)getCues;

- (JavaLangInteger *)getDefaultMinimumBuffer;

- (JavaLangInteger *)getMinimumBuffer;

- (void)setCuesWithJavaUtilList:(id<JavaUtilList>)cues;

- (void)setMinimumBufferWithJavaLangInteger:(JavaLangInteger *)minimumBuffer;

- (void)validateWithWithPAValidator:(id<PAValidator>)validator;

@end

J2OBJC_EMPTY_STATIC_INIT(PAInterruptTrigger)

J2OBJC_FIELD_SETTER(PAInterruptTrigger, minimumBuffer_, JavaLangInteger *)

FOUNDATION_EXPORT void PAInterruptTrigger_init(PAInterruptTrigger *self);

FOUNDATION_EXPORT PAInterruptTrigger *new_PAInterruptTrigger_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PAInterruptTrigger *create_PAInterruptTrigger_init();

J2OBJC_TYPE_LITERAL_HEADER(PAInterruptTrigger)

@compatibility_alias ComPacoappPacoSharedModel2InterruptTrigger PAInterruptTrigger;

#endif

#pragma pop_macro("InterruptTrigger_INCLUDE_ALL")
