//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/northropo/Projects/paco/Shared/src/com/pacoapp/paco/shared/comm/Outcome.java
//

#include "J2ObjC_header.h"

#pragma push_macro("Outcome_INCLUDE_ALL")
#ifdef Outcome_RESTRICT
#define Outcome_INCLUDE_ALL 0
#else
#define Outcome_INCLUDE_ALL 1
#endif
#undef Outcome_RESTRICT

#if !defined (PAOutcome_) && (Outcome_INCLUDE_ALL || defined(PAOutcome_INCLUDE))
#define PAOutcome_

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@interface PAOutcome : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithLong:(jlong)eventId;

- (instancetype)initWithLong:(jlong)eventId
                withNSString:(NSString *)errorMessage;

- (NSString *)getErrorMessage;

- (jlong)getEventId;

- (jboolean)getStatus;

- (void)setErrorWithNSString:(NSString *)errorMessage;

- (void)setErrorMessageWithNSString:(NSString *)errorMessage;

- (void)setEventIdWithLong:(jlong)eventId;

- (void)setStatusWithBoolean:(jboolean)status;

- (jboolean)succeeded;

@end

J2OBJC_EMPTY_STATIC_INIT(PAOutcome)

FOUNDATION_EXPORT void PAOutcome_initWithLong_(PAOutcome *self, jlong eventId);

FOUNDATION_EXPORT PAOutcome *new_PAOutcome_initWithLong_(jlong eventId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PAOutcome *create_PAOutcome_initWithLong_(jlong eventId);

FOUNDATION_EXPORT void PAOutcome_init(PAOutcome *self);

FOUNDATION_EXPORT PAOutcome *new_PAOutcome_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PAOutcome *create_PAOutcome_init();

FOUNDATION_EXPORT void PAOutcome_initWithLong_withNSString_(PAOutcome *self, jlong eventId, NSString *errorMessage);

FOUNDATION_EXPORT PAOutcome *new_PAOutcome_initWithLong_withNSString_(jlong eventId, NSString *errorMessage) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PAOutcome *create_PAOutcome_initWithLong_withNSString_(jlong eventId, NSString *errorMessage);

J2OBJC_TYPE_LITERAL_HEADER(PAOutcome)

@compatibility_alias ComPacoappPacoSharedCommOutcome PAOutcome;

#endif

#pragma pop_macro("Outcome_INCLUDE_ALL")
