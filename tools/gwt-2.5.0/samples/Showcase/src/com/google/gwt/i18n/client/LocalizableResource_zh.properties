mainMenuTitle = GWT 示例
mainSubTitle = 功能展示
mainTitle = Google Web Toolkit
mainLinkHomepage = GWT 主页
mainLinkExamples = 更多示例

categoryI18N =国际化
categoryLists = 列表和菜单
categoryOther =其它功能
categoryPanels = 面板
categoryPopups = 弹出式窗口
categoryTables = 表
categoryTextInput = 文本输入
categoryWidgets = 部件

contentWidgetExample = 示例
contentWidgetSource = 源代码
contentWidgetStyle = CSS 样式

cwAbsolutePanelName = 绝对定位面板
cwAbsolutePanelDescription = 绝对定位面板(AbsolutePanel)使用绝对坐标定位子部件，并允许他们重叠。
cwAbsolutePanelClickMe =点击我！
cwAbsolutePanelHelloWorld =你好世界
cwAbsolutePanelLeft = <b>左：</b>
cwAbsolutePanelItemsToMove = <b>移动项目：</b>
cwAbsolutePanelTop = <b>顶部：</b>
cwAbsolutePanelWidgetNames =你好世界, 按钮, 网格
cwAnimationName = 动画
cwAnimationDescription = 通过限时效果，使用动画演示您的应用程序。
cwAnimationStart = 开始
cwAnimationCancel = 取消
cwAnimationOptions = 动画选项
cwBasicButtonName = 简单按钮
cwBasicButtonDescription = 简单按钮部件
cwBasicButtonClickMessage = 不要再点了！
cwBasicButtonDisabled = 禁用按钮
cwBasicButtonNormal = 常规按钮
cwBasicPopupName = 简单弹出式窗口
cwBasicPopupDescription = GWT 提供了创建自定义弹出式窗口的架构。
cwBasicPopupClickOutsideInstructions = 点击此弹出式窗口外的任意位置可将其隐藏。
cwBasicPopupInstructions = <b>点击查看原尺寸图片:</b>
cwBasicPopupShowButton = 显示简单弹出式窗口
cwBasicTextName = 简单文本
cwBasicTextDescription = GWT 包含整套标准文本输入部件，每个部件均支持文本输入所需的键盘和选择事件。 特别是每个部件的选择范围都会在每次按键后更新。
cwBasicTextAreaLabel = <b>文本区域:</b>
cwBasicTextNormalLabel = <b>常规文本框:</b>
cwBasicTextPasswordLabel = <b>密码文本框:</b>
cwBasicTextReadOnly = 只读
cwBasicTextSelected = 已选择
cwCheckBoxName = 复选框
cwCheckBoxDescription = 简单复选框部件
cwCheckBoxCheckAll = <b>检查所有天知道您有空：</b>
cwCheckBoxDays =周一,周二,周三,周四,周五,周六,周日
cwConstantsExampleDescription =常量接口(Constants)可以用来本地化字串，数字，字串到字串的映射表。这个例子也许并不特别有趣，但它演示了如何本地化常量。抽象界面ExampleConstants的本地化实现提供了标签文本和颜色选择 。
cwConstantsExampleName =常量
cwConstantsExampleLinkText = 这个例子使用了示例接口：
cwConstantsWithLookupExampleDescription =接口ConstantsWithLookup提供了使用字串键作为方法名动态查找本地化变量。
cwConstantsWithLookupExampleLinkText = 这个例子使用了示例接口：
cwConstantsWithLookupExampleMethodName = <b>方法名： </b>
cwConstantsWithLookupExampleName = 常量查找
cwConstantsWithLookupExampleResults = <b>查找结果： </b>
cwConstantsWithLookupExampleNoInput = <请在上面输入方法名>
cwConstantsWithLookupExampleNoMatches = <未找到>
cwCookiesName = Cookie
cwCookiesDescription =跟踪用户，使用的Cookie在客户端轻松保存数据 。
cwCookiesDeleteCookie =删除
cwCookiesExistingLabel = <b>现有Cookie:</b>
cwCookiesInvalidCookie = 您必须指定Cookie的名称
cwCookiesNameLabel = <b>名称：</b>
cwCookiesSetCookie = 设置Cookie
cwCookiesValueLabel = <b>值：</b>
cwCustomButtonName = 自定义按钮
cwCustomButtonDescription = PushButton 和 ToggleButton 可以用来自定义按钮的外观
cwCustomButtonPush = <b>PushButton:</b>
cwCustomButtonToggle = <b>ToggleButton:</b>
cwDatePickerName = 日期选择器 (DatePicker)
cwDatePickerDescription = 让用户使用日期选择器 (DatePicker) 选择日期。
cwDatePickerBoxLabel = <br><br><br><b>带有弹出式日期选择器 (DatePicker) 的日期框 (DateBox)：</b>
cwDatePickerLabel =<b>固定式日期选择器 (DatePicker)：</b>
cwDateTimeFormatName = 日期时间格式
cwDateTimeFormatDescription = DateTimeFormat类会根据区域的不同来格式化或解析日期和时间，如同NumberFormat类一样，使用一种灵活模式语法，支持定制模式和标准模式。
cwDateTimeFormatFailedToParseInput =无法解析输入
cwDateTimeFormatFormattedLabel = <b>格式化的值： </b>
cwDateTimeFormatInvalidPattern =无效模板
cwDateTimeFormatPatternLabel = <b>模板： </b>
cwDateTimeFormatPatterns = 完全日期时间, 长日期时间, 中日期时间, 短日期时间, 完全日期, 长日期, 中日期, 短日期, 完全时间, 长时间, 中时间, 短时间, 自定义风俗
cwDateTimeFormatValueLabel = <b>需要格式的值： </b>
cwDecoratorPanelName = 装饰面板
cwDecoratorPanelDescription = 使用装饰面板给任意窗口小部件添加圆角。
cwDecoratorPanelFormDescription = 说明:
cwDecoratorPanelFormName = 名:
cwDecoratorPanelFormTitle = 输入搜索条件
cwDialogBoxName = 对话框
cwDialogBoxDescription = 可拖动的对话框（DialogBox）类似于一个有标题栏的窗口。 这种窗口还支持一种半透明模式，让部分背景透过弹出式窗口。
cwDialogBoxMakeTransparent = 使其半透明
cwDialogBoxCaption = 对话框示例
cwDialogBoxClose = 关闭
cwDialogBoxDetails = 以下是一个标准对话框组件的示例。
cwDialogBoxItem = 项目
cwDialogBoxListBoxInfo = 此列表框演示了将弹出式窗口拖放到上面的情况。 对于其他许多库，这一模糊的边际情形都无法正确显示。
cwDialogBoxShowButton = 显示对话框
cwDictionaryExampleName =字典
cwDictionaryExampleDescription = 使用字典类，你可以查找在HTML网页定义的Javascript变量值。您不需要把这些变量放入GWT代码。有不少时候这样做有好处，比如你的翻译经常变更的，而你的html服务器不时更新翻译过的HTML网页。还比如可以用它来整合GWT模块与现有的网络应用程序。值得注意的是，字典的值是完全来自于作为宿主的HTML页面，而GWT的区域设置无法对其有任何影响。在这个例子中， Javascript的变量的声明是在HTML网页。
cwDictionaryExampleLinkText = <b>这个例子使用下列Javascript的变量： </b>
cwDisclosurePanelName = 公布面板
cwDisclosurePanelDescription = 公布面板(DisclosurePanel)会在用户点击标题文字时显示或隐藏其内容。 该内容可以是简单的文本或任意部件，如图片或表单的高级选项。
cwDisclosurePanelFormAdvancedCriteria = 高级条件
cwDisclosurePanelFormDescription = 说明:
cwDisclosurePanelFormGender = 性别:
cwDisclosurePanelFormGenderOptions = 男, 女
cwDisclosurePanelFormLocation = 位置:
cwDisclosurePanelFormName = 姓名:
cwDisclosurePanelFormTitle = <b>输入搜索条件</b>
cwDockPanelName = 停靠面板
cwDockPanelDescription = 停靠面板会使用罗盘方向来对齐内容。
cwDockPanelCenter = 这个示例中在<code>DockPanel</code> 的中间位置有一个<code>ScrollPanel</code>。如果在中间放入很多内容，它就会变成页面内的可滚动区域，无需使用IFRAME。<br><br>此处使用了相当多无意义的文字，主要是为了可以滚动至可视区域的底部。否则，您恐怕不得不把它缩到很小才能看到那小巧的滚动条。
cwDockPanelEast = 此为东侧组件
cwDockPanelNorth1 = 此为北侧第一个组件
cwDockPanelNorth2 = 此为北侧第二个组件
cwDockPanelSouth1 = 此为南侧第一个组件
cwDockPanelSouth2 = 此为南侧第二个组件
cwDockPanelWest = 此为西侧组件
cwFileUploadName = 文件上传
cwFileUploadDescription = 使用AJAX异步上传文件。
cwFileUploadNoFileError = 你必须选择要上传的文件
cwFileUploadSelectFile = <b>选择一个文件：</b>
cwFileUploadSuccessful = 文件上传完毕！
cwFileUploadButton = 上传文件
cwFlexTableName = 灵活表
cwFlexTableDescription = 灵活表(FlexTable)支持跨行和跨列，这就让您可以用多种方式来布局。
cwFlexTableAddRow = 添加行
cwFlexTableDetails = 这是一个可支持 <B>colspans</B> 和 <B>rowspans</B> 的 FlexTable。  您可以用它来布局页面或作为其它特殊用途的表。
cwFlexTableRemoveRow = 删除行
cwFlowPanelName = 自然布局面板
cwFlowPanelDescription = 自然布局面板(FlowPanel)可让其中的内容自然布局。
cwFlowPanelItem = 项目
cwFrameName = 框
cwFrameDescription = 框(Frame)是对IFRAME的封装，可以用来在您的网页嵌入其他网站的内容。
cwFrameSetLocation =设定位置
cwGridName = 网格
cwGridDescription = 网格(Grid)
cwHorizontalPanelName = 水平面板
cwHorizontalPanelDescription = 水平面板(HorizontalPanel)不用换行而横向对齐内容。改变页面大小，看看内容如何保持水平对齐。
cwHorizontalPanelButton = 按钮
cwHyperlinkName =超链
cwHyperlinkDescription =在网页中嵌入超连结(Hyperlink)，就可以链接到到网页的不同栏目。超连结会同时会自动生成历史令牌，这样用户就可以用浏览器后退按钮恢复到过去的相应状态。
cwHyperlinkChoose = <b>选择一个栏目：</b>
cwListBoxName = 列表框
cwListBoxDescription = 预制的选择框和下拉列表
cwListBoxCars = 紧凑,轿车,跑车,兑换,越野车,卡车
cwListBoxCategories = 汽车, 体育, 度假景点
cwListBoxSelectAll = <b>选择所有适用内容:</b>
cwListBoxSelectCategory = <b>选择类别:</b>
cwListBoxSports = 棒球, 篮球, 足球, 冰球, 曲棍球, 马球, 足球, 垒球, 水球
cwListBoxVacations = 加勒比地区,大峡谷,巴黎,意大利,纽约,拉斯维加斯
cwMenuBarName = 菜单栏
cwMenuBarDescription = 菜单栏可用于遍历众多选项，还可支持嵌套子菜单。
cwMenuBarEditCategory = 编辑
cwMenuBarEditOptions = 撤消, 重复, 剪切, 复制, 粘贴
cwMenuBarFileCategory = 文件
cwMenuBarFileOptions = 新建, 打开, 关闭, 近期文件, 退出
cwMenuBarFileRecents = Fishing in the desert.txt, How to tame a wild parrot, Idiots Guide to Emu Farms
cwMenuBarGWTOptions = 下载, 示例, 源代码, GWT 高手程序
cwMenuBarHelpCategory = 帮助
cwMenuBarHelpOptions = 内容, 幸运饼, 关于GWT
cwMenuBarPrompts = 感谢您选择菜单项, 选得很不错, 除了选择菜单项之外难道没有更好的选择？, 试试别的吧, 这不过是个菜单而已！, 又浪费了一次点击
cwMessagesExampleName = 消息
cwMessagesExampleDescription = 消息(Messages)界面提供了一种具有严格参数类型的信息生成方式，在编译阶段可以检查的参数的正确性。
cwMessagesExampleArg0Label = <b>论点（0）： </b>
cwMessagesExampleArg1Label = <b>论点（1）： </b>
cwMessagesExampleArg2Label = <b>论点（2）： </b>
cwMessagesExampleFormattedLabel = <b>格式化信息： </b>
cwMessagesExampleLinkText =这个例子使用了示例接口：
cwMessagesExampleTemplateLabel = <b>信息模板：</b>
cwNumberFormatName =数字格式
cwNumberFormatDescription = NumberFormat类使用一种模式语法可以根据区域的不同来格式化或解析数字串。除了自定义模式外，还有一些方便的标准预制模式。
cwNumberFormatFailedToParseInput =无法解析输入
cwNumberFormatFormattedLabel = <b>格式化值：</b>
cwNumberFormatInvalidPattern =无效模板
cwNumberFormatPatternLabel = <b>模板：</b>
cwNumberFormatPatterns = 小数, 货币, 科学, 百分数, 自定义
cwNumberFormatValueLabel = <b>需要格式的值：</b>
cwPluralFormsExampleName = 复数形式
cwPluralFormsExampleDescription = 复数形式可让用户根据对象的计数情况创建消息翻译。
cwPluralFormsExampleArg0Label = <b>论点（0）： </b>
cwPluralFormsExampleFormattedLabel = <b>格式化信息： </b>
cwPluralFormsExampleLinkText = 这个例子使用了示例接口：
cwRadioButtonName = 单选按钮
cwRadioButtonDescription = 单选按钮部件
cwRadioButtonColors = 蓝, 红, 黄, 绿
cwRadioButtonSelectColor = <b>选择您喜欢的颜色:</b>
cwRadioButtonSelectSport = <b>选择您喜欢的运动:</b>
cwRadioButtonSports = 棒球, 篮球, 足球, 冰球, 足球, 水球
cwRichTextName = 格式文本
cwRichTextDescription = 主流浏览器基本都支持格式文本区域，但支持的程度并不同。GWT的格式文本部件可以自动调节到浏览器所能支持的程度。
cwSplitLayoutPanelName = 拆分布局面板
cwSplitLayoutPanelDescription = 拆分布局面板(SplitLayoutPanel)允许用户可自由决定如何分配空间。
cwSplitLayoutPanelCenter = 以下文字显示了分隔条两侧的内容是如何布局的。
cwSplitLayoutPanelEast = 此为东侧组件
cwSplitLayoutPanelNorth1 = 此为北侧第一个组件
cwSplitLayoutPanelNorth2 = 此为北侧第二个组件
cwSplitLayoutPanelSouth1 = 此为南侧第一个组件
cwSplitLayoutPanelSouth2 = 此为南侧第二个组件
cwSplitLayoutPanelWest = 此为西侧组件
cwStackLayoutPanelName = 栈布局面板
cwStackLayoutPanelDescription = 栈布局面板（StackLayoutPanel）会纵向排列子部件，任意时刻只显示某一部件的内容，其他子部件则只显示其标题，用户可以通过点击标题切换。这是一种十分有用的垂直菜单系统。
cwStackLayoutPanelContactsHeader = 通讯录
cwStackLayoutPanelContacts = 曼德尔布洛特, 爱因斯坦, 笛卡尔, 萨吉特, 贝多芬, 费曼, 阿兰图灵, 冯诺依曼
cwStackLayoutPanelContactsEmails = benoit@example.com, albert@example.com, rene@example.com, bob@example.com, ludwig@example.com, richard@example.com, alan@example.com, john@example.com
cwStackLayoutPanelMailHeader =邮件
cwStackLayoutPanelMailFolders = 收件箱, 草稿箱, 范本, 发送, 垃圾箱
cwStackLayoutPanelFiltersHeader =过滤器
cwStackLayoutPanelFilters = 所有, 重要, 读过, 未读过, 最近, 我发出的
cwStackPanelName =栈面板
cwStackPanelDescription = 栈面板（StackPanel）会纵向排列子部件，任意时刻只显示某一部件的内容，其他子部件则只显示其标题，用户可以通过点击标题切换。这是一种十分有用的垂直菜单系统。
cwStackPanelContactsHeader = 通讯录
cwStackPanelContacts = 曼德尔布洛特, 爱因斯坦, 笛卡尔, 萨吉特, 贝多芬, 费曼, 阿兰图灵, 冯诺依曼
cwStackPanelContactsEmails = benoit@example.com, albert@example.com, rene@example.com, bob@example.com, ludwig@example.com, richard@example.com, alan@example.com, john@example.com
cwStackPanelMailHeader =邮件
cwStackPanelMailFolders = 收件箱, 草稿箱, 范本, 发送, 垃圾箱
cwStackPanelFiltersHeader =过滤器
cwStackPanelFilters = 所有, 重要, 读过, 未读过, 最近, 我发出的
cwSuggestBoxName = 建议框
cwSuggestBoxDescription = 通过服务器RPC调用或页面的静态数据来生成建议
cwSuggestBoxLabel = <b>选择字词:</b>
cwSuggestBoxWords = 1337, apple, about, ant, bruce, banana, bobv, canada, coconut, compiler, donut, deferred binding, dessert topping, eclair, ecc, frog attack, floor wax, fitz, google, gosh, gwt, hollis, haskell, hammer, in the flinks, internets, ipso facto, jat, jgw, java, jens, knorton, kaitlyn, kangaroo, la grange, lars, love, morrildl, max, maddie, mloofle, mmendez, nail, narnia, null, optimizations, obfuscation, original, ping pong, polymorphic, pleather, quotidian, quality, qu'est-ce que c'est, ready state, ruby, rdayal, subversion, superclass, scottb, tobyr, the dans, ~ tilde, undefined, unit tests, under 100ms, vtbl, vidalia, vector graphics, w3c, web experience, work around, w00t!, xml, xargs, xeno, yacc, yank (the vi command), zealot, zoe, zebra
cwTabPanelName = 布局面板标签
cwTabPanelDescription = 通过多个标签划分内容。
cwTabPanelTab0 = 点击标签可查看更多内容。
cwTabPanelTab2 = 标签可通过 CSS 实现高度自定义化。
cwTabPanelTabs = 主页, GWT 徽标, 更多信息
cwTreeName = 树
cwTreeDescription = 动态树部件可通过对服务器进行RPC调用来实现数据的延迟加载
cwTreeDynamicLabel = <b>动态树:</b>
cwTreeItem = 项目
cwTreeStaticLabel = <b>静态树:</b>
cwTreeComposers = 贝多芬, 勃拉姆斯, 莫扎特
cwTreeConcertos = 协奏曲
cwTreeQuartets = 四重奏
cwTreeSonatas = 奏鸣曲
cwTreeSymphonies = 交响乐
cwTreeBeethovenWorkConcertos = 第 1 号 - C, 第 2 号 - 降 B 大调, 第 3 号 - C 小调, 第 4 号 - G 大调, 第 5 号 - 降 E 大调
cwTreeBeethovenWorkQuartets = 六弦四重奏, 三弦四重奏, 弦乐四重奏大赋格
cwTreeBeethovenWorkSonatas = A 小调奏鸣曲, F 大调奏鸣曲
cwTreeBeethovenWorkSymphonies 第 1 号 - D 大调, 第 2 号 - D 大调, 第 3 号 - 降 E 大调, 第 4 号 - 降 B 大调, 第 5 号 - C 小调, 第 6 号 - F 大调, 第 7 号 - A 大调, 第 8 号 - F 大调, 第 9 号 - D 小调
cwTreeBrahmsWorkConcertos = 小提琴协奏曲, 双重协奏曲 - A 小调, 第 1 号钢琴协奏曲 - D 小调, 第 2 号钢琴协奏曲 - 降 B 大调
cwTreeBrahmsWorkQuartets = 第 1 号钢琴四重奏 - G 小调, 第 2 号钢琴四重奏 - A 大调, 第 3 号钢琴四重奏 - C 小调, 第 3 号弦乐四重奏 - 降 B 小调
cwTreeBrahmsWorkSonatas = 单簧管奏鸣曲 - F 小调, 单簧管奏鸣曲 - 降 E 大调
cwTreeBrahmsWorkSymphonies = 第 1 号 - C 小调, 第 2 号 - D 小调, 第 3 号 - F 大调, 第 4 号 - E 小调
cwTreeMozartWorkConcertos = 第 12 号钢琴协奏曲, 第 17 号钢琴协奏曲, 单簧管协奏曲, 第 5 号小提琴协奏曲, 第 4 号小提琴协奏曲
cwVerticalPanelName = 垂直面板
cwVerticalPanelDescription = 垂直面板(VerticalPanel)可以纵向对齐相关内容。改变页面大小，看看内容如何保持垂直对齐的。
cwVerticalPanelButton = 按钮

# The following constants need to be translated
categoryCells =细胞小工具
contactDatabaseCategories =家庭,朋友,同事,企业,联系人
contactInfoFormTitle =联系方式
contactInfoFormFirstName =名字：
contactInfoFormLastName =姓：
contactInfoFormCategory =分类：
contactInfoFormBirthday =生日：
contactInfoFormAddress =地址：
contactInfoFormUpdateButton =更新联系
contactInfoFormCreateButton =创建联系人
cwBidiFormattingName = 双向文本格式
cwBidiFormattingDescription = 类BidiFormatter包含的方法来保护一个字符串（对于例如，希伯来topic name）从正在出现乱码和/或garbling what如下显示它when in相反- direction上下文（例如，一英文UI）。
cwBidiFormattingArg0Label = <b>论据 {0}:</b>
cwBidiFormattingArg1Label = <b>论据 {1}:</b>
cwBidiFormattingArg2Label = <b>论据 {2}:</b>
cwBidiFormattingNonbidiFormattedLabel = <b>消息格式不BidiFormatter：</b>
cwBidiFormattingBidiFormattedLabel = <b>消息格式与BidiFormatter：</b>
cwBidiFormattingLinkText = 这个例子与样品交互界面：
cwBidiFormattingTemplateLabel = <b>消息模板：</b>
cwBidiInputName = 双向文字输入
cwBidiInputDescription = 文本框和TextArea控件实现HasDirectionEstimator接口。有了明确的方向估计，这些小部件自动调整自己的方向，根据输入的文字至今。估计是指一个方向时，默认情况下，至少在应用程序的区域设置之一是从右到左。
cwBidiInputBidiAreaLabel = <b>下面的文本区具有有效的默认方向估计，因而是比迪烟感知。检查取代一些英文例如，从右到左的文本中上面的示例字符串：</b>
cwBidiInputRtlAreaLabel = 如果没有一个方向估计，该Widget的方向是由值不受影响，只有这使得相反方向的文本输入混乱和不便的用户类型。<br><b>尝试键入“（212）7654321”或“嗨，你好吗？“到下面从右到左的文本区（其中有方向估计关闭）：</b>
cwCellBrowserName =细胞浏览器
cwCellBrowserDescription =通过使用CellBrowser动态数据浏览器。
cwCellBrowserSelected =选择：
cwCellListName =细胞名单
cwCellListDescription =渲染一个大的，自定义列表迅速使用CellList。
cwCellListGenerateButton =生成50个联系人
cwCellSamplerName =细胞取样器
cwCellSamplerDescription =该表包含一个API中提供的大部分细胞的例子。可编辑的单元格之间表更改重绘记得，直到更改承诺。
cwCellSampleRedrawButton =重绘表
cwCellSampleCommitButton =提交更改
cwCellTableName =细胞表
cwCellTableDescription =你要显示在应用程序中大量的数据？使用CellTable使大型表快。
cwCellTableColumnAddress =地址
cwCellTableColumnCategory =分类
cwCellTableColumnFirstName =名字
cwCellTableColumnLastName =姓氏
cwCellTreeName =细胞树
cwCellTreeDescription =渲染大树动态使用CellTree。
cwCellTreeSelected =选择：
cwCellValidationName =细胞验证
cwCellValidationDescription =验证用户输入的数据，因为它们是使用电池验证技术。细胞将保持其编辑状态，直到您确认更改。下面的字段变成蓝色，而该地址进行验证，然后变成红色，如果该地址是无效的。
cwCellValidationColumnAddress =地址
cwCellValidationColumnName =名称
cwCellValidationError =错误：地址必须是形式：### &lt;街道名称&gt;
cwCustomDataGridName = 数据网格
cwCustomDataGridDescription = 自定义一个DataGrid的可扩展行或消息跨越的宽度表结构。
cwCustomDataGridColumnAddress = 地址
cwCustomDataGridColumnAge = 年龄
cwCustomDataGridColumnCategory = 分类
cwCustomDataGridColumnFirstName = 名字
cwCustomDataGridColumnLastName = 姓氏
cwCustomDataGridEmpty = 有没有数据显示
cwDataGridName = 数据网格
cwDataGridDescription = 使用DataGrid呈现在你的企业应用的大量数据。 DataGrid中有一个固定的报头和页脚可滚动的内容区域。
cwDataGridColumnAddress = 地址
cwDataGridColumnAge = 年龄
cwDataGridColumnCategory = 分类
cwDataGridColumnFirstName = 名字
cwDataGridColumnLastName = 姓氏
cwDataGridEmpty = 有没有数据显示
