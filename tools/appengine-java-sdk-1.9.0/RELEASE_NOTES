Copyright 2013 Google Inc.
All rights reserved.

App Engine Java SDK - Release Notes

Version 1.9.0
=============
- Java 6 applications cannot be deployed to Google App Engine from any version
  of the SDK. Existing Java 6 applications will continue to run. If you are
  still relying on a Java 6 application in Google App Engine, we strongly
  encourage you to start testing and deploying your app using Java 7. Java 7
  has been certified by Oracle to be fully backwards compatible with Java 6,
  as well as providing a number of benefits to developers. Java 7 applications
  will be fully supported in future releases of the App Engine SDK.
  If you absolutely need to continue to deploy Java 6 applications for
  compatibility reasons, you can request that your application be whitelisted
  for Java 6 deployment from http://goo.gl/ycffXq. As we review each whitelist
  application by hand, please allow 10 working days for review, and note that
  only billed applications that show a proven incompatibility will be
  considered for exemption.
- Newly created App Engine applications now have a Google Cloud Storage bucket
  created automatically as part of the same Google Cloud Project. For more
  information please see:
  https://developers.google.com/appengine/docs/java/googlecloudstorageclient/
  activate#Using_the_default_Gcs_bucket
- Modules Service API and application management features are now GA.
- Removed deprecated ModulesService methods and exceptions:
    getModulesAsync()
    getVersionsAsync()
    getDefaultVersionAsync()
    getNumInstancesAsync()
    getVersionHostnameAsync()
    getInstanceHostnameAsync()
    startModule() (replaced by startVersion)
    startModuleAsync() (replaced by startVersionAsync)
    stopModule() (replaced by stopVersion)
    stopModuleAsync() (replaced by stopVersionAsync)
    getModuleHostname() (replaced by getVersionHostname and getInstanceHostname)
    getModuleHostnameAsync()
    InvalidInstanceException
    InvalidModuloeException
    InvalidVersionException
- Moved ModulesService from package com.google.appengine.api.labs.modules to
  package com.google.appengine.api.modules and from appengine-api-labs.jar to
  appengine-api.jar.
- The following deprecated methods in com.google.appengine.api.log.LogQuery
  will be removed in an upcoming release.
    Builder.withModuleVersions(List<Pair<String, String>> moduleVersionIds)
    Builder.withServerVersions(List<Pair<String, String>> serverVersionIds)
    moduleVersions(List<Pair<String, String>> moduleVersions)
    serverVersions(List<Pair<String, String>> serverVersions)
    getModuleVersions()
    getServerVersions()
  To avoid breakage when these are removed please update your code as per the
  javadocs and upload the updated version.
- MapReduce is now a Preview feature. Documentation and getting started guides
  are now available on
  https://developers.google.com/appengine/docs/java/dataprocessing/.
- The size limit on the Search API is now computed and enforced on a per-index
  basis, rather than for the app as a whole. The per-index limit is now 10GB.
  There is no fixed limit on the number of indexes, or on the total amount of
  Search API storage an application may use.
- Users now have the ability to embed images in emails via the Content-Id
  attachment header.
    https://code.google.com/p/googleappengine/issues/detail?id=965
    https://code.google.com/p/googleappengine/issues/detail?id=10503
- New App Engine Application Identifiers must now start with a letter,
  in addition to the existing requirements that the identifier be 6-30
  characters which are letters, numbers, and hyphens, and not start or end with
  a hyphen.

Version 1.8.9
=============
- Renamed appcfg start to appcfg start_module_version and stop to
  stop_module_version.
- The following methods are deprecated in the Modules API and will be removed
  in an upcoming release:
    getModulesAsync
    getVersionsAsync
    getDefaultVersionAsync
    getNumInstancesAsync
    getVersionHostnameAsync
    getInstanceHostnameAsync
    startModule (replaced by startVersion)
    startModuleAsync (replaced by startVersionAsync)
    stopModule (replaced by stopVersion)
    stopModuleAsync (replaced by stopVersionAsync)
    getModuleHostname (replaced by getVersionHostname and getInstanceHostname)
    getModuleHostnameAsync
- The following exceptions have been deprecated in the Modules API and will be
  removed in a following release:
    InvalidInstanceException
    InvalidModuloeException
    InvalidVersionException
- The following exceptions have been removed in the Modules API:
    ModuleAlreadyStartedException
    ModuleAlreadyStoppedException
- Modules are now supported in the dev_appserver Development Console.
- Fixed an issue with ID allocation collisions in the Datastore.
  https://code.google.com/p/googleappengine/issues/detail?id=10134

Version 1.8.8
=============
- Dedicated Memcache is now a GA feature. Our deprecation policy applies and
  customers are encouraged to use this feature in production.
- Memcache API calls are tracked by a new metric that estimates resource usage,
  Memcache Compute Units (MCU's).  There is a new quota bucket and
  dashboard graph corresponding to the metric, as well as an option in the
  memcache viewer to display top keys by MCU's.
- Fixed an issue with cloning apps not creating proper service account names.
    https://code.google.com/p/googleappengine/issues/detail?id=10235
- Fixed an issue with users receiving errors when uploading large files to GCS.
    https://code.google.com/p/googleappengine/issues/detail?id=10101

Version 1.8.7
=============
- Cloud Endpoints is now a GA feature.
- Memcache configuration changes and mutations (flush, set, etc.) made from the
  Admin Console are now recorded in the admin console logs.
- The max_concurrent_requests setting is now configurable per version/module.
    http://code.google.com/p/googleappengine/issues/detail?id=7927
- LogService API functions related to the modules feature will be changing.
  The following functions will be deprecated and new versions will be provided:
    LogQuery.getModuleVersions(), LogQuery.moduleVersions() and
    LogQuery.Builder.withModuleVersions().
  The following functions will be removed in a future release:
    LogQuery.getModuleVersions(), LogQuery.moduleVersions(),
    LogQuery.Builder.withModuleVersions(), LogQuery.getServerVersions(),
    LogQuery.serverVersions() and LogQuery.Builder.withServerVersions().
  Serialized LogQuery objects with values set using any of the above removed
  methods will not be supported in a future release.
- Fixed an issue with Datastore not correctly validating namespaces with
  greater than 500 characters.
- Fixed and issue with vacuum_indexes not working in the SDK.
    https://code.google.com/p/googleappengine/issues/detail?id=10168

Version 1.8.6
=============
- GetAccessToken in the OAuth package is now a GA feature.
- The LogsService API functions related to the Modules feature will be
  changing as follows:
    The following functions will be deprecated and new versions will be
    provided: LogQuery.getModuleVersions(), LogQuery.moduleVersions() and
    LogQuery.Builder.withModuleVersions().
    The following functions will be removed in an upcoming release:
    LogQuery.getModuleVersions(), LogQuery.moduleVersions() and
    LogQuery.Builder.withModuleVersions(), LogQuery.getServerVersions(),
    LogQuery.serverVersions() and LogQuery.Builder.withServerVersions().
    Serialized LogQuery objects with values set using any of the above removed
    methods will not be supported in an upcoming release.
- A memcache size chart has been added to admin console's dashboard.  Access it
  via the drop-down above the graph.  The chart graphs memcache size over time
  enabling customers to determine when cache flush events occurred. This is a
  preview feature.
- The Cloud Endpoints API @ApiSerializer has been renamed to @ApiTransformer
  and the Serializer interface has been renamed to Transformer.
  @ApiSerializationProperty has also been renamed to @ApiResourceProperty.
- If a customer passes invalid data to a memcache put() call, they now see a
  more useful error message.
    https://code.google.com/p/googleappengine/issues/detail?id=8671
- Fixed an issue with the SDK that allows an invalid Datastore query combination
  of group by and filter properties.
- Fixed an issue affecting validation of the size of Datastore property names.
- Fixed an issue with Datastore query validation for strings with exactly 500
  characters.
    https://code.google.com/p/googleappengine/issues/detail?id=10019

Version 1.8.5
=============
- The Search API is now a GA feature.
- The Conversion API, a decommissioned feature, has been removed from the
  runtime. Applications in production that import the API should be fixed as
  soon as possible.
- Fixed an issue with the Admin Console Datastore Viewer throwing errors when
  fetching UTF-8 kinds.
    https://code.google.com/p/googleappengine/issues/detail?id=7570
- Fixed an issue where files that contain an '@' could not be deployed.
- Fixed an issue with the Datastore Admin not being able to backup to another
  app.
    https://code.google.com/p/googleappengine/issues/detail?id=9808

Version 1.8.4
=============
- A Datastore Admin fix in this release improves security by ensuring that
  scheduled backups can now only be started by a cron or task queue task.
  Administrators can still start a backup by going to the Datastore Admin
  in the Admin Console.
- The Java SDK local datastore now defaults to an HRD-like consistency policy,
  including eventually consistent global queries. For more information see
  developers.google.com/appengine/docs/java/tools/devserver#Using_the_Datastore
- The Conversion API, a decommissioned feature, has been removed from the SDK.
  In the next release, the API will be removed from the runtime and any
  attempt to import the API will raise an exception. Applications in
  production that import the API should be fixed as soon as possible.
- Fixed the implementation of the Cloud SQL JDBC driver for App Engine which
  restricted the connection lifetime to the lifetime of the HTTP request.
  This will unblock users who want to use long running connections (e.g. in
  connection pools).
- Fixed bulkloader issue for Java caused by improper updates of the Java
  Remote API handlers in a previous version of the runtimes.
- Fixed Eclipse plugin on the development server to eliminate complaints
  about missing indexes when using equality filters.
- Fixed the issue with SASL provider registration that was impacting
  developers' ability to connect to GMail via IMAP.

Version 1.8.3
=============
- Published a major rewrite of the Search API documentation. Please see:
    https://developers.google.com/appengine/docs/java/search
- Interfacing into the Task Queue REST API no longer requires including "s~"
  at the beginning of the project name.
- Fixed an issue with the Mail API, email addresses that contain encoded
  newlines as specified in rfc2047 are now parsed correctly.
- Fixed an issue with ChannelService.sendMessage() failing when a client id has
  3 or more dashes.
- Fixed an issue with the Channel API send_message function not working in the
  SDK.
- Fixed an issue with the Local Channel service failing to properly validate
  tokens.
- Fixed an issue with enabling cloud integration for existing apps.
    https://code.google.com/p/googleappengine/issues/detail?id=9602
- Fixed an issue with the Datastore Admin UI failing to load due to the app
  having too many kinds.
    https://code.google.com/p/googleappengine/issues/detail?id=9749

Version 1.8.2
=============
- Dedicated memcache is now available to all developers. With
  dedicated memcache you can purchase in-memory data caching capacity
  exclusively for your application, cache more data and drive up cache hit
  rates. This is a Preview feature. For more information please see:
  https://developers.google.com/appengine/docs/adminconsole/memcache
- App Engine Modules is now available to all developers. App Engine Modules
  allow developers to segment their applications into logical subcomponents.
  This is a Preview feature. More information on this feature can be found
  here:
  https://developers.google.com/appengine/docs/java/modules/
- Fixed an issue with the Channel API's Javascript library; a memory leak
  occurred when closing channels.
    https://code.google.com/p/googleappengine/issues/detail?id=9283
- Fixed an issue with App Engine receiving erroneous XMPP presence from
  Google Hangouts.
    https://code.google.com/p/googleappengine/issues/detail?id=9498

Version 1.8.1
=============
- This SDK will be the last release that can deploy Java 6 apps. In 1.8.2,
  the SDK will only be compiled with the Java 7 compiler and the only target
  runtime will be Java 7.
- The Task Queue async API is now a GA feature. The asynchronous methods
  improve utilization by allowing your app to add, lease and delete multiple
  tasks in parallel.
- Cloud Console projects are now created by default whenever a new App Engine
  app is created.  This is a Preview feature.
- In an upcoming release the Experimental Google Cloud Storage API Functions
  will be decommissioned. This API and its Experimental status is documented at
  the following link:
  https://developers.google.com/appengine/docs/java/googlestorage/overview
- The Google Cloud Storage library will replace Google Cloud Storage API and is
  now available as a Preview feature.  More information can be found at
  https://code.google.com/p/appengine-gcs-client/
- Bandwidth between App Engine and Google Cloud Storage is currently free of
  charge (this may change in the future for certain levels of service).
- The Search API has graduated from Experimental to Preview. Apps that have
  billing enabled can exceed the free quota levels and will be charged for
  usage above these levels.
- Estimated number of search results will only be accurate if it is less than
  or equal to the number of results requested. By default this can be
  overridden by setting number_found_accuracy QueryOption in the Search API.
- Dates, atoms, and number fields can now be found by searching without a field
  restriction in the Search API.
- A quoted empty string now returns atom fields with empty values for the
  Search API.
- Snippet and count functions are no longer allowed in sort expressions for the
  Search API.
- The Search API now has improved error messages for user errors and internal
  errors.
- The Datastore now assigns scattered auto ids by default. Legacy auto ids
  are still available via the 'auto_id_policy' option in appengine-web.xml.
- The Sockets API now allows client code to call get/set options against
  sockets. Previously, calls raised "Not Implemented" exceptions. When
  java.net.Socket.get<option>() is called, a mock value is returned, calls to
  set<option>() will be silently ignored.
- Fixed an issue with the namespace not being displayed when a user attempts
  to select a namespace in the Admin Console.
    https://code.google.com/p/googleappengine/issues/detail?id=8164
- Fixed an issue in the Admin Console Logs page to correctly display 'Until'
  instead of 'Since' for logs search criteria.
    https://code.google.com/p/googleappengine/issues/detail?id=8659

Version 1.8.0
=============
- The Mail API now allows attachments with .zip and .gzip extensions as long as
  the archives do not contain entries with blacklisted extensions.
  http://code.google.com/p/googleappengine/issues/detail?id=5933
- New Billing Enabled apps will no longer default to an email quota of 20,000
  per day. Instead, apps will need to file a request through the admin console
  to get email quotas increased.
- Admin console dashboard charts and reports for all users have been fully
  migrated to the new, more reliable backend announced in 1.7.6.
- The maximum size of POST requests made through URLfetch has been increased
  from 5MB to 10MB.
- Fixed an interaction issue between the Java MapReduce library and the Files
  API which causes loss of data. If you are using the experimental Java
  MapReduce library, we strongly encourage you to update to the latest version
  of the library in the public svn:
  https://code.google.com/p/appengine-mapreduce/source/checkout
- Fixed an issue with the Mail API to prevent sending mail from a Google Apps
  mail account that has been suspended.
    https://code.google.com/p/googleappengine/issues/detail?id=6181
- Fixed an issue that caused Full-Text Search to fail in the Java dev_appserver.
    https://code.google.com/p/googleappengine/issues/detail?id=9088
- Fixed an issue with Java dev_appserver which caused the AdWords API to not
  work.
    https://code.google.com/p/googleappengine/issues/detail?id=9213
- Fixed an issue with the Java SDK jar file being too large for Windows 64.
- Fixed a JAXBPermission.setDatatypeConverter permission issue in Java7 runtime.

Version 1.7.7
=============
- The Sockets API, which allows applications to make outgoing TCP connections
  and send/receive UDP packets to the Internet using both IPv4 and IPv6, is now
  available as an experimental feature.
- The Java runtime now defaults to Java7. If you still need to use the Java6
  runtime, please use the --use_java6 flag when deploying your app. We encourage
  you to move to Java7 as soon as possible.
- Billing enabled apps will no longer be subject to a $2.10 minimum weekly
  spend.  Instead, apps will only be charged for their actual usage.
- Fixed an issue where Datastore auto ids assigned by the scattered id
  policy were too large to be represented as floating point numbers in the SDK.
- Fixed an issue with sort by doc_id not translating correctly causing
  InvalidRequest errors in the Search API
    https://code.google.com/p/googleappengine/issues/detail?id=8958

Version 1.7.6
=============
- Improvements to the App Engine billing system will be rolled out gradually to
  all apps.
- The application summary no longer displays the default version of a running
  application, instead it lists the application as 'RUNNING'. In an upcoming
  release applications will have multiple logical sub components, each of which
  will have a default version.  This UI update is meant to align with this
  functionality.
- Projection queries are now a fully supported GA feature.
- The XMPP API now has multi-JID getPresence(). This provides the ability to get
  the availability of multiple users.
- The Java dev_appserver now allocates automatic ids using the 'scattered' id
  allocation policy by default. For more information, please see "Specifying the
  Automatic ID Allocation Policy":
  https://developers.google.com/appengine/docs/java/tools/devserver#Using_the_
  Datastore
- Admin console dashboard charts and current load/errors reports will be moving
  to a new, more reliable backend. The change will be gradually rolling to users
  of admin console over the next few weeks.
- New Search API quotas are now displayed in the Admin Console. These quotas are
  not currently enforced, but will be part of the pricing model for the Search
  API in a future release.
- The experimental Search API's ability to explicitly sort search results by
  SortExpression.RANK_FIELD_NAME (i.e. _order_id) field in ascending order has
  been removed.
- Globally consistent indexes in the experimental Search API are now deprecated
  and will be removed in the next release.
- Task Queue tasks may now be added and deleted asynchronously. This allows
  applications to perform common task queue operations without blocking. This is
  an experimental feature.
- Fixed an issue which caused an incorrect server error message when setting the
  default version on the admin console, though the version was set correctly.
- Fixed an issue that caused java.security.AccessControlException when creating
  a SOAP connection.
- Fixed an issue that caused NullPointerException in ListIndexesResponse
    http://code.google.com/p/googleappengine/issues/detail?id=8359
- Fixed an issue that caused an incorrect log message when launching the Java
  dev_appserver
    https://code.google.com/p/googleappengine/issues/detail?id=8851

Version 1.7.5
=============
- New instance classes F4_1G and B4_1G are now available.  These instances have
  compute capacity equal to F4/B4 but with a maximum of 1G RAM instead
  of 512MB.
- The DataNucleus plugin has been upgraded to 2.1.2.
- The deprecated classes AddException, AddResponse, ListException,
  ListIndexesException, ListIndexesRequest, ListIndexesResponse, ListRequest,
  ListResponse, and RemoveException were removed from the Search API in the
  SDK.  If your app references any of these classes, you must deploy a new
  version without these references before the next release of App Engine.
  If you do not do this, your app may stop working in production.
- The Conversion API, which was decommissioned last release, has been removed
  from the SDK. In a future release, the API will be removed from the
  runtime and applications that attempt to use it may stop working.
  Applications in production that import the library should be fixed as soon as
  possible.
- We are making Java 7 available as an experimental feature. We strongly
  encourage local and production testing for all existing applications. For
  more information, please visit:
  http://developers.google.com/appengine/docs/java/java7
- The Channel API now has the ability to send channel messages from any app
  version or backend regardless of where the channel was created.
    http://code.google.com/p/googleappengine/issues/detail?id=5123
- The URL Fetch service now supports PATCH method requests.
    http://code.google.com/p/googleappengine/issues/detail?id=6316
- The Mail API can now send mail bounce notifications to the app. The
  notification will be delivered to /_ah/bounce if mail_bounce inbound
  services are enabled.
    http://code.google.com/p/googleappengine/issues/detail?id=7451
- The Blobstore service now returns the created filename instead of the blobKey
  when using Cloud Storage
    http://code.google.com/p/googleappengine/issues/detail?id=8337
- Fixed an issue with Datastore callback annotations not working when running
  locally on Windows.
    http://code.google.com/p/googleappengine/issues/detail?id=7208

Version 1.7.4
=============
- Traffic Splitting is now a GA feature.
- Task Queue Statistics is now a GA feature.
- Logs API now has the ability to fetch requests based on a list of
  request_ids. Currently, this only works in production and is not supported
  in dev_appserver.
- The SDK now includes an IDE-friendly zip with the source for the App Engine
  APIs. The zip resides in <SDK_ROOT>/src/user.
- Additional support for Maven now exists through both Maven archetypes and a
  Maven plugin. Documentation for the new Maven support can be found at
  https://developers.google.com/appengine/docs/java/tools/maven
- DISTINCT for Datastore queries is now available as an experimental feature.
- The decommissioned Conversion API has been removed.
- Various JSP improvements
    JSPs are now compiled together as opposed to one by one. This improves the
    compilation process time.
    JSP compiled classes are packaged in JAR files.
    You can now avoid the upload of JSP source, which is typically not needed
    at runtime. This can be done via the new --delete_jsps option in the
    appcfg tool. By default, this option is not set.
    You can now package all the WEB-INF/classes/* classes into jar files. This
    can be done via the new --enable_jar_classes option in the appcfg tools. By
    default, this option is not set.
- Users can now set how many columns can be viewed in the Datastore Viewer via
  a drop-down menu which customizes the number of columns displayed.
    http://code.google.com/p/googleappengine/issues/detail?id=8158
- Fixed an issue with BackendService.getCurrentInstance() returning thread ID
  instead of integer instance ID in production.
    http://code.google.com/p/googleappengine/issues/detail?id=8338
- Fixed an issue with Datastore Backup failing when a schema has a very large
  number of properties.
    http://code.google.com/p/googleappengine/issues/detail?id=8363
- Fixed an issue with users being unable to change Authentication Type after
  app creation in the Admin Console.
    http://code.google.com/p/googleappengine/issues/detail?id=8394

Version 1.7.3
=============
- We encourage you to try and test your application using Java 7 and the App
  Engine SDK. Note that Java 7 is *not* a supported runtime.
- Java 7 Features that we encourage you to try in dev appserver:
    Strings in switch
    Binary integral literals and underscores in number literals
    Multi-catch and more precise rethrow
    Improved type inference for generic instance creation (diamond)
    try-with-resources statement
    Simplified varargs method invocation
- Java 7 features that are NOT supported:
    All new Java 7 classes (the Google App Engine whitelist has not been
    updated yet)
    Method Handles
    Invoke Dynamic bytecode
- InetAddress name resolution now displays UnknownHostException instead of a
  runtime exception error when the host is unknown.
- Datastore Index stats now report type instead of representation-type.
- Class Loading Priority can now be granted to specific JAR files by adding
  class-loader-config element in appengine-web.xml file. This is an
  experimental feature.
- Queries with transactions are now fully checked for consistency in Remote
  API.
- Global Consistent Indexes are now deprecated in the Search API.
- ListResponse<Document> listDocuments(ListRequest) has been deprecated and
  replaced with GetResponse<Document> getRange(GetRequest) in the Search API.
- ListIndexesReponse listIndexes(ListIndexesRequest) has been deprecated and
  replaced with GetResponse<Index> getIndexes(GetIndexesRequest) in the Search
  API.
- getField(String) has been deprecated and aliased to getFields(String) in the
  Search API.
- AddResponse Index.add() has been deprecated and renamed to PutResponse
  Index.put() in the Search API.
- RemoveResponse Index.remove() has been deprecated and renamed to
  DeleteReponse Index.delete() in the Search API.
- Users can now change authentication options after app creation
    http://code.google.com/p/googleappengine/issues/detail?id=483
- Fixed an issue with Channel API breaking when using urlfetch service. This
  issue was limited to the SDK.
    http://code.google.com/p/googleappengine/issues/detail?id=8166
- Fixed an issue with ResponseRewriterFilter not being threadsafe when using
  Remote API.
    http://code.google.com/p/googleappengine/issues/detail?id=8167

Version 1.7.2
=============
- Paid applications can now upload Static files and Code > 1GB. Additional
  storage will be billed at $0.13/GB per month.  Free applications will
  continue to be provided 1GB of storage at no charge. Free quota will apply
  per application.
- Thread support via com.google.appengine.api.ThreadManager is now a
  GA feature.
- The Conversion API will be decommissioned soon. Developers using this API
  will receive a warning message. Please find an alternative document
  conversion/OCR service.
- You can now fetch Task Queue Statistics. This allows you to fetch
  statistics and information about your task queue from within your
  application. Statistics include information such as the number of tasks
  in a queue, how many tasks were executed in the last minute and enforced
  rate.  This is an experimental feature.
- Added Timezone selection widget in Admin Console Admin Logs.
- Added a warning message about caching when modifying or deleting entities
  in the local Datastore.
- Added a flush cache button to the SDK dev console and Admin Console.
- Attempting to update multiple entity groups in a single transaction
  in Datastore now throws an error suggesting to use XG transactions.
- Search API now has a string maximum length limit of 2000 characters.
- Added millisecond variants for setting start/end time on LogQuery class in
  Logs Reader API.
- The local Datastore now enforces the 500 character maximum key length.
- Added SDK response header rewrite framework functionality to help with
  response headers returned by users.
- We now allow a user with multiple google accounts the ability to create an
  app if they are an SMS verified user.
    http://code.google.com/p/googleappengine/issues/detail?id=1419
- A more useful error message now displays when a deployment fails
  due to local date/time settings being improperly set.
    http://code.google.com/p/googleappengine/issues/detail?id=2033
- Granted java.io.SerializablePermission for enableSubclassImplementation
  and enableSubstitution.
    http://code.google.com/p/googleappengine/issues/detail?id=2500
- Cron Descriptions may now include non-ASCII characters.
    http://code.google.com/p/googleappengine/issues/detail?id=2641
- App Config Service Delete App Version Call Count quota raised to
  10,000/day.
    http://code.google.com/p/googleappengine/issues/detail?id=2808
- There are now more descriptive error messages for Datastore Admin
  deadline exceeded errors in stack traces.
    http://code.google.com/p/googleappengine/issues/detail?id=5413
- Replaced error code “Administrators cannot be removed right now”
  with a more descriptive message.
    http://code.google.com/p/googleappengine/issues/detail?id=7080
- Fixed an issue with namespace dropdown in Admin Console appearing blank
  even though the URL specified namespace is correct.
- Fixed an issue with public-root not working with static content
  in appengine-web.xml.
- Fixed an issue with SDK Datastore viewer not showing unindexed properties.
- Fixed an issue with ApiProxy.getCurrentEnvironment() not having
  com.google.appengine.runtime.default_version_hostname
- Fixed an issue with mail service sendToAdmins() failing when using
  multi-arg message constructor.
- Fixed an issue with Expires header in SDK to match production behavior.
- Fixed an issue with com.google.appengine.api.log.RequestLogs.getCombined()
  not populating correctly in SDK.
- Fixed an issue with runtime failing to use scope with OAuth under certain
  conditions.
- Fixed an issue with support for entities with large numbers of properties
  in Admin Console Dataviewer where previously the page would fail to render.
    http://code.google.com/p/googleappengine/issues/detail?id=937
- Fixed an issue with multi-line string property not editing correctly
  in Dataviewer.
    http://code.google.com/p/googleappengine/issues/detail?id=1725
- Fixed an issue with BigDecimal losing precision after Datastore
  serialization.
    http://code.google.com/p/googleappengine/issues/detail?id=1748
- Fixed an issue where the local Memcache service leaked memory.
    http://code.google.com/p/googleappengine/issues/detail?id=2428
- Fixed an issue with HttpServlet.doOptions throwing SecurityException from
  HttpServlet.getAllDeclaredMethods
    http://code.google.com/p/googleappengine/issues/detail?id=2658
- Fixed an issue with Paging link in Datastore viewer not working with # or &
    http://code.google.com/p/googleappengine/issues/detail?id=3591
- Fixed an issue with rounding errors when cropping with the local images
  service.
    http://code.google.com/p/googleappengine/issues/detail?id=3647
- Fixed an issue with Dataviewer GQL stripping new lines after initial run
  when a user paginates results.
    http://code.google.com/p/googleappengine/issues/detail?id=4246
- Fixed an issue where keeping a file open prevented the deletion in the local
  Blostore service. This is a Windows only issue.
    http://code.google.com/p/googleappengine/issues/detail?id=4744
- Fixed an issue with LocalServiceTestHelper throwing Multiple Triggers
  error when used in task queue.
    http://code.google.com/p/googleappengine/issues/detail?id=4893
- Fixed an issue with Admin Console stack trace error reporting in appcfg.
    http://code.google.com/p/googleappengine/issues/detail?id=4920
- Fixed an issue with Datastore viewer showing incorrect result range text
  on first page.
    http://code.google.com/p/googleappengine/issues/detail?id=4975
- Fixed an issue with custom admin page display when logged into multiple
  google accounts.
    http://code.google.com/p/googleappengine/issues/detail?id=5117
- Fixed an issue with the inability to carry dynamic proxy objects
  in session.
    http://code.google.com/p/googleappengine/issues/detail?id=5299
- Fixed an issue with DeferredTaskServlet failing with custom context
  classloader.
    http://code.google.com/p/googleappengine/issues/detail?id=5451
- Fixed an issue with Admin Console Logs < 30 minutes not being
  available.
    http://code.google.com/p/googleappengine/issues/detail?id=5494
- Fixed an issue with apps that are using Mail API throwing
  “No Provider for address type rfc822” error.
    http://code.google.com/p/googleappengine/issues/detail?id=5769
- Fixed an issue with AppStats failing when enabled with Backend in SDK.
    http://code.google.com/p/googleappengine/issues/detail?id=6071
- Fixed an issue with the SDK viewer not being able to view 1000+ entities.
    http://code.google.com/p/googleappengine/issues/detail?id=6138
- Fixed an issue with Viewers being able to prohibit code downloads.
    http://code.google.com/p/googleappengine/issues/detail?id=6255
- Fixed an issue with billing applications that are disabled.
    http://code.google.com/p/googleappengine/issues/detail?id=6344
- Fixed an issue with deploying to an existing version when an app
  has 10 versions.
    http://code.google.com/p/googleappengine/issues/detail?id=6803
- Fixed an issue with Cron schedule failing on the 1st day of month.
    http://code.google.com/p/googleappengine/issues/detail?id=7286
- Fixed issue with gzip compression for application/plist content type.
    http://code.google.com/p/googleappengine/issues/detail?id=7641
- A note about an upcoming change: starting with the 1.7.3 release
  of App Engine, data statistics will report statistics on property type
  usage by indexes using the documented property type names ("Integer",
  "Key", etc, see
  https://developers.google.com/appengine/docs/python/datastore/stats)
  rather than the current property representation names ("INT64",
  "REFERENCE", etc, see http://goo.gl/db5dT). This will affect the
  __Stat_PropertyType__, __Stat_PropertyType_Kind__,
  __Stat_PropertyType_PropertyName_Kind__ and their per-namespace equivalents.
  This will also affect the displayed "Breakdown by Property Type" under the
  "Datastore Statistics" in your application's console.

Version 1.7.1
=============
- The URLFetch API now supports multiple cookie headers.
    http://code.google.com/p/googleappengine/issues/detail?id=3379
- You can download 90 days worth of Usage Reports for your application from the
  Billing History page of the Admin Console.
- Task Queue requests now include an X-AppEngine-TaskExecutionCount that counts
  the number of times a task was run by an instance.
- Added support for delete() to the Files API.
- Added support for multiple files to be deleted using the Files API.
- Added support to delete files from Google Cloud Storage using the Files API.
- Added a REQUEST_LOG_ID to be written in the logs and as an
  ApiProxy.Environment attribute. This can be used to later identifying that
  request in the application logs.
- The Memcache Viewer now supports namespaces.
    http://code.google.com/p/googleappengine/issues/detail?id=7245
- The Mail API now supports the following headers for outgoing mail: List-Id,
  List-Unsubscribe, On-Behalf-Of, Resent-Date, Resent-From, Resent-To.
    http://code.google.com/p/googleappengine/issues/detail?id=2559
    http://code.google.com/p/googleappengine/issues/detail?id=7672
- Version 2 of the DataNucleus plugin has been upgraded and is now fully
  supported. For a full list of improvements please see
    http://code.google.com/p/datanucleus-appengine/source/browse/branches/2_1_0/dist/RELEASE_NOTES.ORM
- The Search API now supports default values for dates in SortExpressions.
- The .project and .classpath files are now included in the App Engine demos
  so that they may be imported by Eclipse.
- Fixed an issue with the App Engine satisfaction survey in the Admin Console
  which was released in 1.6.6, which will be re-enabled in this release.
- Fixed an issue where ListIndexes failed when trying to return a schema that
  contained Geo fields.
- Fixed an issue with Search API websafe cursors not being returned as a
  websafe value.
- Fixed an issue where Java's AsyncMemcacheServiceImpl was incorrectly throwing
  MemcacheServiceException.
    http://code.google.com/p/googleappengine/issues/detail?id=6236
- Fixed a Memcache error when getting HttpSession.
    http://code.google.com/p/googleappengine/issues/detail?id=6463
- Fixed a search issue where snippets failed to highlight when a capital
  letter is used in a search term.
    http://code.google.com/p/googleappengine/issues/detail?id=7665
- Fixed an issue where JDO and JPA keys-only queries were being executed as
  full entity queries in the datastore.
    http://code.google.com/p/googleappengine/issues/detail?id=7712
- Fixed an issue where traffic splitting by cookie was not working.
    http://code.google.com/p/googleappengine/issues/detail?id=7813

Version 1.7.0
=============
- You can now configure your custom domain to serve HTTPS requests with App
  Engine. You can choose either an SNI, VIP, or SNI and VIP configuration. SNI
  costs $9/month for 5 certificates. A VIP costs $99/month.
    https://developers.google.com/appengine/docs/ssl
- Premier customers now have the option to create applications to be served from
  datacenters located in the European Union.
- Developers can configure their HRD app to use Google's PageSpeed Service,
  which automatically speeds up serving of content for your application. The
  PageSpeed Service costs $0.39/gigabyte in addition to the normal App Engine
  bandwidth charges.
    https://developers.google.com/appengine/docs/adminconsole/performancesettings#pagespeed
- The Search API now contains support for storing and searching on GeoPoints.
- The total size of all application versions is now limited to 1 GB. In the
  future, you'll be able to purchase additional storage for your application
  code.
- Logs API calls are now $.12/gigabyte for all data read from the Logs API over
  the first 100MB.
- You can now specify a time frame of up to 1 year for the retention of your
  application logs. All storage above 1 GB is billed based on the prices for
  logs storage.
- You can now specify HTTP headers on static content for your application.
- The HRD Blob Migration tool is now generally available.
- After using the datastore backup utility, you can now restore that backup
  to a new app id.
- It will not be possible to create new authorizations for M/S applications to
  access Cloud SQL instances.
- You can now delete a Google Cloud Storage object using delete() in the
  Blobstore Service API.
- You can now fetch a Google Cloud Storage object using fetch() in the
  Blobstore Service API.
- You can now store keys for a Google Cloud Storage object in the datastore.
- The BlobstoreService.createUploadUrl() call now works for Google Cloud Storage
  buckets.
- You can now use ImageService.getServingUrl() and
  ImageService.deleteServingUrl() for Google Cloud Storage objects.
- You can now specify your own Security Provider in Java.
    http://code.google.com/p/googleappengine/issues/detail?id=1612
- The Java Datastore API now supports Or queries.
- We've increased various Search API limits. New limits are a maximum of 1000
  documents returned from search() or listDocuments(), a maximum of 1000
  indexes returned from listIndexes(), and a maximum offset of 1000 for search()
  or listIndexes()
- Fixed a javascript syntax error in the Admin Console.
    http://code.google.com/p/googleappengine/issues/detail?id=7566
- Fixed an issue in the Search API tab of the Admin Console where it threw an
  error displaying non-ascii characters.
    http://code.google.com/p/googleappengine/issues/detail?id=7601

Version 1.6.6
=============
- On May 8, 2012 we released an experimental Search API.
    http://googleappengine.blogspot.com/2012/05/looking-for-search-find-it-on-google.html
- The Admin Console now displays the quotas for Search API Calls and Search
  Stored Data.
- The Search API has deprecated the ListDocumentsException class. When using
  this class you will see a compile-time warning.
- The Search API has deprecated the orderId attribute on the Document class. It
  has been superseded by the rank attribute.
- The Search API has replaced AddDocumentResponse with AddResponse. This will
  require fixing and redeploying applications that use Index.add().
- App creation for apps using the Master/Slave datastore is now restricted to
  only those users who already own a Master/Slave app.
- Apps with billing enabled are now able to configure up to 100 cron jobs.
- Admin Console can no longer be included in an <iframe>.  To prevent
  clickjacking attacks on the Admin Console, we are now setting
  X-Frame-Options: SAMEORIGIN.  To read more about clickjacking, please read:
  https://www.owasp.org/index.php/Clickjacking.
- The datastore now supports embedding entities as properties of other entities.
- The Admin Console will now periodically prompt administrators to take an
  optional App Engine satisfaction survey.
- Appstats now contains information about the cost of the RPCs made during the
  request.
- Fixed an issue where large datastore backups were unable to be deleted.
- Fixed an issue where datastore backups fail due to an ascii decoding issue.
- Fixed an issue where running a projection query on a multi-valued property
  with an equality filter did not return any results.
- Fixed an issue where XG transactions did not work with the Remote API.
    http://code.google.com/p/googleappengine/issues/detail?id=7238

Version 1.6.5
=============
- You can now perform datastore queries that return a subset of your entity
  properties with the same performance and cost of a keys-only query. This
  feature is experimental.
- In the High Replication Datastore, there is a new metadata kind,
  __entity_group__, that has a numeric __version__ property. This property is
  guaranteed to increase on every change to the entity group.
- The Images API now supports manipulating objects hosted on Google Cloud
  Storage.
- In the Images API, the getServingUrl() call now optionally allows you to
  specify if the URL you are generating should be served over https.
- In the Task Queue REST API, you can now specify a tag when you insert a task
  on a Pull Queue.
- In the Task Queue API, you can specify a deadline for the leaseTasks() call.
  The default deadline has been increased from 5 seconds to 10 seconds.
- You can now use cron to schedule Datastore backups.
- The Datastore Admin now has a page that displays information on the status of
  your Datastore backups and restores.
- You can now abort your Datastore backup or restore from the Datastore Admin.
- You can now restore a single Datastore Kind from the Datastore Admin from a
  Datastore backup.
- In the Admin Console, you can report production issues with your application
  directly to Google from the application's pages. Simply click the "Report
  Production Issues" link, fill out the requested information, and submit.
- All user requests have X-AppEngine-Region, X-AppEngine-City, and
  X-AppEngine-CityLatLong headers which contain location information based on
  the IP address of the client request. For a full description of these headers,
  see:
    https://developers.google.com/appengine/docs/java/runtime#Request_Headers
- As announced in 1.6.4, omitting the <threadsafe> directive from
  appengine-web.xml results in an error.

Version 1.6.4
=============
- Billed applications that have specified additional logs retention over 1 GB
  are now being charged for that storage at $0.24/GB/month (the first gigabyte
  of logs storage is free). All logs beyond an application's specified storage
  limit will be deleted. Please examine your Application Settings page to verify
  you are retaining the desired amount of logs.
- Datastore statistics now show the amount of storage used by application
  indexes.
- We have released an experimental utility for migrating your application's
  blobs at the same time you migrate your datastore data. You can opt-in to
  blob migration in the Admin Console when you start your migration.
- We have updated the experimental Backup/Restore functionality to include
  the option to backup and restore to Google Storage for Developers.
- Version 2.0 of the App Engine DataNucleus plugin is now available as an
  experimental release. This plugin contains support for JDO 3 and JPA 2 and
  over 40 bug fixes. For a full list see:
    http://code.google.com/p/datanucleus-appengine/source/browse/branches/2_0_0/dist/RELEASE_NOTES.ORM
- Threads are available as an experimental feature via
  com.google.appengine.api.ThreadManager.
- The Admin Console now provides a Memcache viewer that lists Memcache stats and
  can display Memcache content based on key.
- Using the blobstoreService.serve method, your application can serve objects
  hosted on Google Cloud Storage.
- The method ApiProxy.getRemainingMillis() returns the amount of milliseconds
  remaining before a request hits the request deadline.
- New datastore query related callbacks - PreGet(), PreQuery(), and PostLoad()
  are now available.
- Omitting the <threadsafe> directive from appengine-web.xml now results in
  a warning. Starting with the 1.6.5 release, omitting this directive will
  result in an error.
- You can set an RPC deadline for the Task Queue API's leaseTasks() method.
- The Datastore Admin tab in the Admin Console now shows entities from every
  namespace.
    http://code.google.com/p/googleappengine/issues/detail?id=3962
- GQL queries in the Admin Console no longer throw an error when a trailing
  semi-colon is included.
- Fixed an issue where setting ApiProxy delegate caused ClassCastException in
  unit test teardown.
    http://code.google.com/p/googleappengine/issues/detail?id=4442
- Fixed an issue where <async-session-persistence> did not work.
    http://code.google.com/p/googleappengine/issues/detail?id=5774
- The Datastore Admin now shows entities from every namespace.
    http://code.google.com/p/googleappengine/issues/detail?id=3962
- Fixed an issue in the Java Development Server where Task Queue retry
  parameters were ignored.
    http://code.google.com/p/googleappengine/issues/detail?id=5200
- Fixed an issue in the Java Pipeline API
  (http://code.google.com/p/appengine-pipeline/) that would lead to "No object
  found in pool with id=barrier(...)" errors when used in HRD applications.


Version 1.6.3
=============
- In the Admin Console, you can use the new Traffic Splitting feature to send a
  certain percentage of traffic to a non-default application version. The
  traffic is split by either cookie or IP address.
- Emails that are sent from Google Apps domains email addresses where the domain
  has been set up to use DKIM will be signed: when an email was from a request
  that originated on that app's domain or any time the email was sent from
  an app adminstrator, including when that email is sent from a cron job or task
  queue request.
- In the Admin Console, you can now choose how much and how long you'd like to
  store logs.  All apps get 1G for free and eventually will be able to pay for
  more, while the amount can be increased this release we won't start charging
  for the additional capacity until the next release at the earliest.
- The instances screen in the Admin Console now has a button to shut down
  a specific instance.
- Each application log has a link to the instance that served the request. If
  the instance is no longer serving requests, a message will be displayed.
- The TaskQueue API now supports the ability to tag a Pull Queue task. You may
  then lease tasks by tag. This feature is experimental.
- Using Google Apps wildcard domain mappings, you can access alternate
  versions of your app via a custom domain.
- Push and Pull Queues are now listed separately in the SDK development console.
- The PermGen size for  backend and frontend instances classes has been
  increased. The values are as follows: F1/B1 - 44MB, F2/B2 - 108MB,
  F4/B4 - 236MB, B8 - 492.
- The DataNucleus Enhancer command line tool
  (com.google.appengine.tools.enhancer.Enhance) now supports the
  -enhancerVersion flag, which allow you to specify the version of DataNucleus
  with which to enhance your JDO/JPA classes.
- The dev appserver command line now supports the --generated_dir flag, which
  allows you to specify a directory in which to write files generated by the
  SDK.
- Fixed a StackOverflowError when using the Remote API.
    http://code.google.com/p/googleappengine/issues/detail?id=6349

Version 1.6.2
=============
- The Admin Console Datastore Admin has added experimental backup and restore
  functionality. The job occurs within your application and counts against your
  application quota, including Instance Hours, Datastore Ops and Datastore
  Storage.
- Developers can now specify how long a channel token will last until it
  expires, with the default remaining two hours. Channel API quota is now
  measured both in calls to create a channel and the number of hours of channel
  time requested. The maximum hours of quota is the maximum number of channel
  creation calls * 2, so free apps get 200 hours of requested channel token
  time.
- Task Queue API requests now include a X-Appengine-TaskETA header, that can be
  used to measure task delivery latency.
- We have removed the deprecated labs version of the TaskQueue API.
- The default API deadlines for Blobstore API calls have been raised to 15s for
  online and 30s for offline requests, up from 5s.
- The Images API now allows you to stretch an image without maintaining the
  aspect ratio.
    http://code.google.com/p/googleappengine/issues/detail?id=2220
- Mail Quota for App Engine apps that have signed up for billing will only be
  increased after the first payment for the app is processed.
- Fixed an issue where the SDK did not resize images down to 512 pixels by
  default, as it does in production.
- Fixed an issue with the Images API where valid images were returning a
  NotImageError.
    http://code.google.com/p/googleappengine/issues/detail?id=5545

Version 1.6.1
=============
- You can now configure Frontend Instance Classes from your Admin Console's
  application settings page. Three classes are available, with increasing
  memory, CPU limits, and associated cost. By default, all applications use the
  basic frontend instance setting of 128MB memory and 600MHz CPU.
- We've added new functionality to the Log API that will allow you to read your
  application's logs programmatically.
- We are releasing an experimental Conversion API that will allow you to convert
  between document types including .doc, .html, .pdf, images using OCR, and
  more.
- The High Replication Datastore migration utility is now available as a GA
  feature, and is no longer experimental.
- The dev appserver now emits a warning when loading any classes that fall under
  com.google.appengine.repackaged.*.
- Version 2.0.0 of the DataNucleus App Engine plugin is available as an
  experimental download from http://goo.gl/kyQiO. This release
  adds support for JPA2 and JDO3. Installation instructions are available at
  http://goo.gl/ELBL4.
- The Blobstore API now supports the multiple="true" attribute to the HTML input
  tag.
- TaskOptions.Param now implements Serializable.
    http://code.google.com/p/googleappengine/issues/detail?id=3712
- Fixed an issue in the SDK where logging "null" caused a 500 error.
- Fixed an issue with backends where SessionManager might try to save a session
  forever under certain circumstances.
- Fixed an issue where cached static files served to IPs on the DoS blacklist
  consumed bandwidth quota.
    http://code.google.com/p/googleappengine/issues/detail?id=4607

Version 1.6.0
=============
- On November 7th, App Engine will be out of Preview. The new Terms of Service
  and previously announced pricing changes will be in effect. Additionally, all
  paid apps are now covered by our SLA.
    http://code.google.com/appengine/docs/billing.html
- Paid apps can now specify the maximum pending latency for instances and the
  minimum number of idle instances for your application in the Admin Console.
- Task Queue storage has been separated in to its own line item. Previously,
  this was included in Datastore storage.
- We have released an experimental utility, available in the Admin Console, to
  assist in migrating your application to the High Replication datastore. This
  utility allows you to copy the bulk of your data in the background, while the
  source application is still serving. You then need a brief read-only period to
  migrate your application data while you copy the data that has changed from
  the time the original copy started.
- Blobstore, which was previously limited to apps with billing enabled, is now
  available for all apps.
- We have published a new article on Datastore Index Selection and Advanced
  Search which explains our recent improvements to the query planner that make
  exploding indexes unnecessary.
    http://code.google.com/appengine/articles/indexselection.html
- Applications can now receive xmpp error stanzas at /_ah/xmpp/error.
- In the Admin Console data viewer, you can now filter by namespace from a drop
  down menu, if applicable.
- In the Admin Console's Datastore Statistics, we now offer namespace suggest
  for filtering stats.
- Added API functionality for making calls to the Memcache API asynchronously.
- In the Memcache API, getIdentifiable() and putIfUntouched() now support
  batch operations.
- We've added a page, /_ah/admin/capabilitiesstatus, to the dev console that
  allows you to configure the capability state of the local API implementations
  when running locally.
- We've added LocalCapabilitiesServiceTestConfig to the testing API, which
  allows you to configure the capability state of the local API implementations
  in your tests.
- The Datastore API now supports callbacks that can execute before or after
  put() and delete() calls.
- The queue-name argument is now optional for async-session-persistence in
  appengine-web.xml.
- Fixed a ClassNotFound error when using async-session-persistence.
    http://code.google.com/p/googleappengine/issues/detail?id=5774
- Fixed an issue with memcache serialization when using a entity key with a name
  that points to the same reference as the key's parent.
    http://code.google.com/p/googleappengine/issues/detail?id=2088
- Fixed an issue where DoS stats in the Admin Console didn't work for High
  Replication apps.
    http://code.google.com/p/googleappengine/issues/detail?id=5237
- WARNING: Starting with 1.6.1 (our next release, NOT this release), URLFetch
  requests will honor the Accept-Encoding header. If your code sets this header
  then it must be prepared to receive content of the specified type. For more
  information please see
    http://code.google.com/p/googleappengine/issues/detail?id=4978

Version 1.5.5
=============
- We have increased the number of files you can upload with your application to
  from 3,000 to 10,000.
- We have increased the size limit for a single file uploaded to App Engine from
  10MB to 32MB.
- We have increased the Frontend request deadline from 30 seconds to 60 seconds.
- We have increased the online URLFetch maximum deadline from 10 seconds to 60
  seconds. The default deadline remains at 10 seconds. The offline maximum deadline
  for URLFetch remains at 10 minutes.
- We have increased the URLFetch Post payload from 1MB to 5MB.
- App Engine now supports Cross Group (XG) transactions with the High
  Replication Datastore, which allow you to perform transactions across multiple
  entity groups.
    http://code.google.com/appengine/docs/java/datastore/transactions.html
- We have added a graph to the admin console that displays the number of
  instances for which you will be billed.
- In the XMPP API, getPresence() is deprecated in favor of using the inbound
  presence handlers documented in
  http://code.google.com/appengine/docs/java/xmpp/overview.html#Handling_User_Presence.
- Fixed an issue in the Admin Console where the "Run Now" button did not work
  for tasks with a '-' in the name.
- Fixed an issue to provide a better error message when a user tries to parse an
  HttpRequest's input stream more than once in a request.
- Fixed an issue to provide a better error message when using the Mail API to
  send email to an invalid user address.
- Fixed an issue in the SDK where HttpServletRequest.getInputStream().read()
  always returned -1.
    http://code.google.com/p/googleappengine/issues/detail?id=5396
- Fixed an issue where you could not schedule a cron job to run every 100
  minutes.
    http://code.google.com/p/googleappengine/issues/detail?id=5861

Version 1.5.4
=============
- You can now specify the maximum size for a blob in
  BlobstoreService.createUploadUrl().
- Zigzag merge join queries will now continue scanning up to the 30 second
  Datastore query deadline. For zigzag queries that used to generate
  DatastoreNeedIndexException, many will now succeed. A small percentage will
  now instead timeout.
- The SDK datastore viewer in the dev console now displays the number of "Write
  Ops" for each entity. "Write Ops" are the total number of entity and index
  writes that were required to create the entity.
- The Prospective Search API is available in Java for all applications. This API
  is still experimental, so applications will be limited to a maximum of 1000
  subscriptions.
- We made a classloading improvement that we expect to help loading request
  latencies for projects with large numbers of jars.
- Added support for the set_default_version flag to Appcfg.
- The Java Remote API now recognizes the HTTP_X_APPENGINE_INBOUND_APPID. This
  means that the Datastore Admin copy functionality will work when using
  Java's Remote API with the destination app.
- Fixed an issue that incorrectly allowed creation of tasks with whitespace in
  the url.
- Fixed the error message for "transaction not found" to be more descriptive.
- Fixed an issue with the dev appserver's local Blobstore implementation trying
  to modify an immutable collection.
    http://code.google.com/p/googleappengine/issues/detail?id=3081
- Fixed an SDK issue where CONFIG, FINE, FINER, FINEST logging messages were not
  displayed.
    http://code.google.com/p/googleappengine/issues/detail?id=4591


Version 1.5.3
=============
- We've removed the limit on the size of blob uploads using the Blobstore API.
- You can now send emails with any attachment extension that is not included on
  the email attachment extension blacklist.
- Added a getIndexes() method to the DatastoreService to retrieve an
  application's indexes and their corresponding states.
- The development server has been updated to understand the reduced index
  requirements of the 1.5.2 datastore query planner changes.
- The Datastore Admin functionality can now be enabled directly in the Admin
  Console.
- You can now use Remote API to access the services of one App Engine
  application from a different App Engine application.
- The Java Testing APIs now default to UTC if no timezone is specified.
- AppCfg now supports download_app, which will download all files that were
  uploaded from your war directory.
- AppCfg now supports the -V (version) and -A (application) flags.
- Added app_identity api with methods to work with service accounts for
  asserting identity on outbound HTTP calls.
    http://code.google.com/appengine/docs/java/appidentity/overview.html
- Added an improved HRD migration tool that requires a read-only period relative
  to your datastore write rate (as opposed to your datastore size, which is how
  the current version behaves). The tool is not yet generally available.  If you
  are interested in being an early adopter please fill out this form:
  http://goo.gl/3jrXu
- Fixed an issue in the Channel API where jsapi was not served with the correct
  mime type.
- Fixed an issue where blobs could not be uploaded using HTTPS.
- Fixed an issue where GQL didn't allow querying for valid kind names
  containing '.', '-', and ':' by supporting quoted identifiers.
    http://code.google.com/p/googleappengine/issues/detail?id=2584

Version 1.5.2
=============
- You can now specify the minimum pending latency for instances and the maximum
  number of idle instances for your application in the Admin Console.
- The datastore now never requires an exploding index.
    http://code.google.com/appengine/docs/python/datastore/queries.html#Big_Entities_and_Exploding_Indexes
- The SDK will now never suggest indexes with the same property repeated, as
  such indexes are likely to be exploding indexes.
- Datastore stats are now available on a per-namespace basis.
- The queue details page in the Admin Console now contains request header
  details, previous run information, and a task payload viewer.
- You can modify the lease on a task leased from a pull queue using the
  modifyTaskLease() method.
- Pull Task maximum size has been increased to 1MB.
- You can now update the number of available backend instances without needing
  to first stop the backend using the "backend configure" appcfg directive.
- You can now set the "References" and "In-Reply-To" headers with the Mail API.
    http://code.google.com/p/googleappengine/issues/detail?id=2802
- The whitelist has been updated to include support for JSR 105.
- When the SDK throws a DatastoreNeedIndexException for a missing index
  definition, the exception can now be caught.

Version 1.5.1
=============
- The development server's datastore and testing service implementations now
  contains logic that closely replicates the consistency guarantees of the High
  Replication datastore. To use, run the dev_appserver with the flag
  -Ddatastore.default_high_rep_job_policy_unapplied_job_pct=20.
- All user request have an X-AppEngine-Country header which contains the
  ISO-3166-1 alpha-2 country code for the user, based on the IP address of the
  client request.
- The Channel API can now provide user presence, this can be configured by
  adding channel_presence to the list of inbound services for your application.
- The Images API now supports the WebP format.
- You can switch the timezone for App Engine logs in the Admin Console.
  http://code.google.com/p/googleappengine/issues/detail?id=734
- Added javax.xml.ws.Service$Mode to the whitelist.
  http://code.google.com/p/googleappengine/issues/detail?id=4770
- You can configure your application to asynchronously write https session data
  by adding <async-session-persistence enabled="true"/> to your
  appengine-web.xml.
  http://code.google.com/p/googleappengine/issues/detail?id=1692
- The local task queue unit testing API now supports Deferred Tasks.
- Fixed an issue where using reserved URLs did not cause an error in the SDK.
- Fixed an issue where having a backends.xml configuration file caused logging
  to stdout to fail in the SDK.
- Fixed an issue where the Channel API didn't work with non-default versions of
  applications using the High Replication datastore.
- Fixed an issue where the Remote API rtok comparison was broken for some users,
  causing appfcg download data to fail.
- Fixed an issue with the SDK where you could not apply a transform to PNG
  images.
  http://code.google.com/p/googleappengine/issues/detail?id=3458
- When displaying corrupt data in the Admin Console dataviewer, a useful error
  will be displayed, instead of a 500.
  http://code.google.com/p/googleappengine/issues/detail?id=4945
- Fixed an issue with the SDK where non-string index names caused an error upon
  upload.
  http://code.google.com/p/googleappengine/issues/detail?id=5004
- Datanucleus now supports polymorphic relationships.
  http://code.google.com/p/datanucleus-appengine/issues/detail?id=153
- Datanucleus now supports PreparedQuery#countEntities(FetchOptions).
  http://code.google.com/p/datanucleus-appengine/issues/detail?id=225
- Fixed an issue with datanucleus where recursive relation did not work.
  http://code.google.com/p/datanucleus-appengine/issues/detail?id=80

Version 1.5.0.1
===============
- Fixed a bug that caused appengine-jsr107cache-1.5.0.jar to be empty.

Version 1.5.0
=============
- Support for Backends which allow developers to create infrastructure
  components that complement the existing dynamic apps that App Engine already
  provides. Instances of a backend can maintain state, be addressed
  individually, and are not subject to per-request time limits. They can also be
  configured to consume more memory and CPU than ordinary dynamic instances.
- Task Queues support pull mode, allowing for more control over task queue work
  rates. To use pull queues, include the 'mode' element in your queue.xml.
- Pull queues are supported by a REST API, allowing access from outside App
  Engine. To use the REST API, you must also include a valid ACL section
  specifying which users can lease tasks from the pull queue.
- Task Queue payload limits have been increased. Queues support 100KB per task.
  Within App Engine, the new limit is 32 MB per batch of tasks. With the REST
  API the limit is 1 MB per batch.
- HTTP request and response sizes have been increased to 32 MB.
- We have removed the rate quotas for requests, datastore operations,
  memcache operations, and image API operations. Resource quotas still apply.
- When creating new applications, developers will now see the High Replication
  Datastore as the default configuration option.  Developers that still wish to
  use the Master/Slave configuration must explicitly choose this option at
  application creation time.
- The Task Queue maximum configurable processing rate has been increased to
  500/s.
- Modified Dashboard latency graphs to indicate they only include dynamic
  requests.
- We have added two restrictions to the Mail API to improve the reliability
  of the service for all applications.
  - Emails must be sent from email accounts managed by Google (either Gmail or
    a domain signed up for Google Apps).
  - Reduced the number of free recipients per day from 2000 to 100 for new
    applications.
- Fixed an issue where the Javadoc for the File API was not generated.
- Fixed an issue where the API Deadlines were not being enforced in the SDK.
- Fixed an issue with Federated Users causing the Admin Console dataviewer to
  fail.
    http://code.google.com/p/googleappengine/issues/detail?id=384
- Fixed an issue causing SDK URL Fetch not to work behind proxy.
    http://code.google.com/p/googleappengine/issues/detail?id=544
- Fixed an issue deploying an app with version set to 0.
    http://code.google.com/p/googleappengine/issues/detail?id=735
- Improved support for reserving an app id that is a canonicalized version of
  a user's Gmail address.
    http://code.google.com/p/googleappengine/issues/detail?id=1196
- Added a more useful error message for unavailable App Ids.
    http://code.google.com/p/googleappengine/issues/detail?id=1303
- Added clearer error messaging for invalid transactions in the SDK.
    http://code.google.com/p/googleappengine/issues/detail?id=1357
- Added better error messages for cron.xml parsing.
    http://code.google.com/p/googleappengine/issues/detail?id=1490
- Entity constructors are now consistent with KeyFactory constructors.
    http://code.google.com/p/googleappengine/issues/detail?id=1626
- Task Queue names can now include the "_" character.
    http://code.google.com/p/googleappengine/issues/detail?id=1723
- The sender of an email is no longer BCC'd when they are already included in
  the email.
    http://code.google.com/p/googleappengine/issues/detail?id=1907
- Added a more helpful error message when trying to send email to a malformed
  address.
    http://code.google.com/p/googleappengine/issues/detail?id=2386
- The SDK now returns an error if the Content-length header is not included in a
  post request, matching production.
    http://code.google.com/p/googleappengine/issues/detail?id=2512
- Fixed an issue where the wrong type of error was being thrown on HTTP request
  timeout.
    http://code.google.com/p/googleappengine/issues/detail?id=2464
- Fixed an issue where the Admin Console didn't keep the app version viewed
  consistent across actions.
    http://code.google.com/p/googleappengine/issues/detail?id=4023
- Added Javadocs for TaskOptions.taskName().
    http://code.google.com/p/googleappengine/issues/detail?id=4316
- Fixed a typo in the Admin Console on the New App page.
    http://code.google.com/p/googleappengine/issues/detail?id=4620
- Fixed an issue where sending mail from an app registered on the HR datastore
  required the app id be prefaced with s~.
    http://code.google.com/p/googleappengine/issues/detail?id=4671
- Fixed an issue where HTTP POST was broken in the SDK if the Content-Length
  header was specified.
    http://code.google.com/p/googleappengine/issues/detail?id=4836

Version 1.4.3
=============
- Added FileService API that allows writing to and reading from files in
  blobstore.
- You can now specify cron execution for a time interval between a start and end
  time.
- You can now configure the specific application version to which a task queue
  or cron job will send requests.
- The Admin Console Task Queues page now displays a more accurate estimate of
  queue size for queues containing more than 2000 tasks.
- Java applications can enable concurrent request support by setting
  <threadsafe> to True in their appengine-web.xml. This flag indicates that
  request handlers for your app are thread safe and multiple request handlers
  may safely run at the same time in the same memory space for your application.
- Deferred library support now available in Java.
    http://code.google.com/p/googleappengine/issues/detail?id=2381
- Remote API library now available in Java. This can be used in conjunction with
  apps using either the Java or the Python runtime.
- The Java SDK now supports kindless and ancestor only queries.
- Fixed an issue where JAX-WS clients in the SDK could not handle receiving a
  SOAP fault.
- Fixed an issue where the SDK did not support fetching HTTPS URLs.
- Fixed an issue where no link was displayed in the Admin Console blobstore
  viewer for an unnamed blob.
- Fixed an issue where the Admin Console data viewer couldn't edit entities
  with ByteString properties.
    http://code.google.com/p/googleappengine/issues/detail?id=2367
- Fixed an issue where the Admin Console crashed when using a non-ascii
  key_name.
    http://code.google.com/p/googleappengine/issues/detail?id=2451
- The Disable Application admin function has been button-ized.
    http://code.google.com/p/googleappengine/issues/detail?id=4323
- Fixed a regex validation issue in the queue.xml file that caused some uploads
  to break.
    http://code.google.com/p/googleappengine/issues/detail?id=4365
- Fixed an issue where the Java SDK Task Queue did not support 10 minute
  timeouts.
    http://code.google.com/p/googleappengine/issues/detail?id=4564
- Fixed an issue where the Channel API in the SDK didn't properly send messages
  with unicode characters.
    http://code.google.com/p/googleappengine/issues/detail?id=4675

Version 1.4.2
=============
- You can now vacuum datastore indexes with the Java SDK.
- The XMPP API was updated to include presence and allow subscriptions.
- The Task Queue now supports programmatic deleting of tasks.
    http://code.google.com/p/googleappengine/issues/detail?id=2588
- The maximum rate per queue at which tasks are processed has been increased to
  100 task per second.
- The maximum number of concurrent requests for a single queue can be specified
  in the application's queue.xml. This provides an additional easy-to-use form
  of rate limiting. The current number of running tasks is also displayed in
  the Admin Console.
- Metadata queries in the Datastore now support cursors.
- Admin Console logs viewer now displays time as YYYY-MM-DD HH:MM:SS.mmm.
- The Mail API added KML and KMZ files as allowed attachments.
- Added support for verifying the server SSL certificate when making a
  URLFetch request to an HTTPS URL. This will become the default in a future
  release.
- Added a warning when an admin tries to upload a queue.yaml where the number
  of new queues and the number of disabled queues exceeds 100.
- Added a putIfUntouched() method to the Memcache API.
    http://code.google.com/p/googleappengine/issues/detail?id=2139
- Added JAX-WS support for writing SOAP clients and SAAJ support for writing
  SOAP servers. JAX-WS for SOAP servers is not yet supported.
- Fixed an issue where mail from @appid.appspotmail.com did not work when
  sending mail to app admins.
- Fixed an issue where the SDK did not enforce the 100 task limit for the Task
  Queue.
    http://code.google.com/p/googleappengine/issues/detail?id=3296
- Fixed an issue where the Java SDK URLFetch did not support 32MB response
  sizes.
    http://code.google.com/p/googleappengine/issues/detail?id=4215
- Fixed an issues where <jsp-file> mappings in web.xml were broken.
    http://code.google.com/p/googleappengine/issues/detail?id=4216

Version 1.4.1
=============
There were no updates to the Java SDK for the 1.4.1 App Engine release.

Version 1.4.0
=============
- The Always On feature allows applications to pay and keep 3 instances of their
  application always running, which can significantly reduce application
  latency.
- Developers can now enable Warmup Requests. By specifying  a handler in an
  app's appengine-web.xml, App Engine will attempt to send a Warmup Request to
  initialize new instances before a user interacts with it. This can reduce the
  latency an end-user sees for initializing your application.
- The Channel API is now available for all users.
- Task Queue has been officially released, and is no longer an experimental
  feature. The API import paths that use 'labs' have been deprecated. Task queue
  storage will count towards an application's overall storage quota, and will
  thus be charged for.
- The deadline for Task Queue and Cron requests has been raised to 10 minutes.
  Datastore and API deadlines within those requests remain unchanged.
- For the Task Queue, developers can specify task retry-parameters in their
  queue.xml.
- Apps that have enabled billing are allowed up to 100 queues with the Task
  Queue API.
- Metadata Queries on the datastore for datastore kinds, namespaces, and entity
  properties are available.
- URL Fetch allowed response size has been increased, up to 32 MB. Request size
  is still limited to 1 MB.
- The request and response sizes for the Images API have been increased to
  32 MB.
- The total size of Memcache batch operations is increased to 32 MB. The 1 MB
  limit on individual Memcache objects still applies.
- The attachment size for outgoing emails has been increased from 1 MB to 10 MB.
  The size limit for incoming emails is still 10 MB.
- Size and quantity limits on datastore batch get/put/delete operations have
  been removed. Individual entities are still limited to 1 MB, but your app may
  batch as many entities together for get/put/delete calls as the overall
  datastore deadline will allow for.
- When iterating over query results, the datastore will now asynchronously
  prefetch results, reducing latency in many cases by 10-15%.
- The Admin Console Blacklist page lists the top blacklist rejected visitors.
- The automatic image thumbnailing service supports arbitrary crop sizes up to
  1600px.
- Overall average instance latency in the Admin Console is now a weighted
  average over QPS per instance.
- Added a low-level AysncDatastoreService for making calls to the datastore
  asynchronously.
- Added a getBodyAsBytes() method to QueueStateInfo.TaskStateInfo, this returns
  the body of the task state as a pure byte-string.
- The whitelist has been updated to include all classes from javax.xml.soap.
- Fixed an issue sending email to multiple recipients.
    http://code.google.com/p/googleappengine/issues/detail?id=1623
- Revert the default logging level during GWT hosted mode back to INFO.
    http://code.google.com/p/googleappengine/issues/detail?id=4011
- Fixed an issue with OpenId over SSL.
  http://code.google.com/p/googleappengine/issues/detail?id=3393

Version 1.3.8
=============
- You can run task queue tasks immediately from the admin console.
- Added an OutputSettings class to the Images API to specify the JPEG encoding
  quality when running in production.
- Support for login of multiple Google accounts within an app, and longer login
  sessions. For more information see:
    http://www.google.com/support/accounts/bin/answer.py?answer=181599
- In queue.xml, the maximum allowed bucket size is now 100.
- Removed limits on zigzag merge-join queries. Therefore the error "The built-in
  indices are not efficient enough for this query and your data. Please add a
  composite index for this query." will no longer be thrown in most cases,
  enabling more types of queries without indexes.
- The whitelist has been updated to include java.net.InetAddress and some
  interfaces and abstract classes in javax.xml.soap, including
  javax.xml.soap.SOAPMessage.
- Fixed an issue reserving App Ids by owners of emails containing periods,
  multiple cases, and googlemail.com address.
    http://code.google.com/p/googleappengine/issues/detail?id=1196
- Fixed an issue where TaskOptions had no public getters, making testing
  impossible.
    http://code.google.com/p/googleappengine/issues/detail?id=3243
- Fixed an issue on the development server where PNGs were being returned as
  JPEGs.
    http://code.google.com/p/googleappengine/issues/detail?id=3661

Version 1.3.7
=============
- Fixed an SDK issue where calling getServingUrl raised an exception.
    http://code.google.com/p/googleappengine/issues/detail?id=3598

Version 1.3.6
=============
- Multitenancy is now supported in the datastore, allowing better
  compartmentalization of user data.
- Automatic image thumbnailing is now available in the Images API using
  getServingUrl.
- Users can now serve custom static error pages for over_quota, dos_api_denial
  and default cases.
- Results of datastore count() queries and offsets for all datastore queries
  are no longer capped at 1000.
- Added a pause queue button to the task queue details page in the Admin
  Console.
- Historical graphs have been added to all of the dashboard graphs in the Admin
  Console.
- Content-range headers are supported on Blobstore downloads.
- New method to allocate datastore ids in a given range: allocateIdRange()
- The app.yaml format is supported with Java applications.
- Increased several rate limited quotas for free applications.
- Fixed an issue that did not allow forms of over 200,000 bytes to be submitted.
   http://code.google.com/p/googleappengine/issues/detail?id=1608

Version 1.3.5
=============
- Ability to configure the Task Queue storage limit with the
  total-storage-limit field in the queue.xml file.
- Task Queues now support up to 50 qps per queue, up from 50 qps per app.
- Developers can programmatically access Blobs with BlobstoreInputStream, which
  provides an InputStream view of a blob in Blobstore
- Bulkloader transform helpers for lists and hierarchical keys were added.
- remote_api_shell commands can be sent over HTTPS or HTTP.
- Admin Console logs now include information on request time latency.
- The datastore now supports end cursors.
- Fixed an issue where requesting /appstats would not properly direct to
  /appstats/.
- Fixed an issue with inconsistent URL mappings between the SDK and production.
    http://code.google.com/p/googleappengine/issues/detail?id=2598

Version 1.3.4
=============
- Client side bulkloader available with the Python SDK that has a new
  configuration syntax and wizard for easier import/export with the datastore.
  Can be used by enabling remote_api in your Java application
- Applications can now be configured to authenticate with OpenID by selecting
  the OpenID option when creating your application in the admin console
    http://code.google.com/p/googleappengine/issues/detail?id=248
    http://code.google.com/p/googleappengine/issues/detail?id=56
- New API to allow App Engine apps to act as OAuth service providers
    http://code.google.com/p/googleappengine/issues/detail?id=919
- The version update check in the Java SDK now uses https
- Allow full access to javax.el.*
    http://code.google.com/p/googleappengine/issues/detail?id=3157
- Increased the timeout during deployment to 15 minutes
- Fixed an issue with JPA where an illegal cast exception was thrown during the
  fetch of integer fields
- MemcacheService.setNamespace() is deprecated in favor of
  MemcacheServiceFactory.getMemcacheManager(namespace)
- Support in the SDK for Java 1.5 is being deprecated. These warnings now appear
  when starting the SDK

Version 1.3.3.1
===============
- Fixed an issue where servlet filters could cause 404s
    http://code.google.com/p/googleappengine/issues/detail?id=3138

Version 1.3.3
=============
- Added two new system properties com.google.appengine.application.id and
  com.google.appengine.application.version
- DeadlineExceededException is now always thrown before
  HardDeadlineExceededError
- Decreased likelihood of "Too many URLMap" deployment errors for complex
  web apps
- Fixed an error where QuotaService.getCpuTimeInMegaCycles() was returning
  cycles instead of megacycles
- Fixed an issue between differing behavior of jsp in the production and
  development environments
    http://code.google.com/p/googleappengine/issues/detail?id=3022
- Fixed an issue uploading webapps with .tag files
    http://code.google.com/p/googleappengine/issues/detail?id=2902

Version 1.3.2
=============
- New API to read the contents of uploaded Blobs (fetch_data)
    http://code.google.com/p/googleappengine/issues/detail?id=2536
- URLFetch now supports accessing ports 80-90, 440-450, and 1024-65535
- Mail API now allows common document formats as attachments
    http://code.google.com/p/googleappengine/issues/detail?id=494
- The Task Queue API now supports adding multiple tasks in a single call to
  Queue.add()
- Fixed charset handling for inbound emails
    http://code.google.com/p/googleappengine/issues/detail?id=2326
- Fixed issue with compositing background colors in dev_appserver
- New feature in the datastore to specify whether to use strong or eventually
  consistent reads (the default is strong)
- New datastore feature allows setting deadlines for operations
- Increased the maximum Task Queue refill rate from 20/s to 50/s
- Support for IP blacklisting to prevent denial of service (DoS) attacks
- App Stats is now available for the Java SDK in addition to Python
- Fix issue with expiration times not being reset on Put on the Memchache API
    http://code.google.com/p/googleappengine/issues/detail?id=1284
- Fix issue preventing static files from being served when a servlet is mapped to root
    http://code.google.com/p/googleappengine/issues/detail?id=1379

Version 1.3.1
=============
  - Datastore Query Cursors
      http://code.google.com/appengine/docs/java/datastore/queriesandindexes.html#Query_Cursors
  - Transactional Tasks
  - Support for Custom Admin Console pages
  - Java Precompilation is now on by default
      Developers can opt-out of precompilation by setting the flag in
      appengine-web.xml:
      <precompilation-enabled>false</precompilation-enabled>
  - New built-in support for unit testing (see appengine-testing.jar)
      http://code.google.com/appengine/docs/java/tools/localunittesting.html
      http://code.google.com/p/googleappengine/issues/detail?id=326
  - net.sf.jsr107 package included as an alternative to the low-level
    Memcache API
  - javax.annotation.Resource/Resources added to the package whitelist
  - New "month" and "synchronized" syntax for Cron configuration
      http://code.google.com/appengine/docs/java/config/cron.html
  - URLFetch supports asynchronous requests
      http://code.google.com/p/googleappengine/issues/detail?id=1899
  - appcfg.sh uses HTTPS for application deployment
  - appcfg.sh adds request_logs --append
  - Changes to the order queries without a specified sort order are returned
    Only queries that use IN will see different results.
  - Added support for multiple != filters on the same property
  - Improved support for keys-only queries when using IN and != filters
  - Support for ETags, If-matches, If-not-matches HTTP Headers, as well as 304
    status codes now available on static files (not yet available on the
    dev_appserver or Blobstore blobs)
      http://code.google.com/p/googleappengine/issues/detail?id=575
  - Fixed issue where the maximum transform count was enforced for composite
    operations
      http://code.google.com/p/googleappengine/issues/detail?id=1656
  - Fixed issue with whitespace on the end of strings in web.xml
      http://code.google.com/p/googleappengine/issues/detail?id=2242
  - Fixed web.xml <error-page> entries for 404 error codes
      http://code.google.com/p/googleappengine/issues/detail?id=1477
  - Added validation prevent welcome-files with absolute paths
      http://code.google.com/p/googleappengine/issues/detail?id=1249
  - Fixed issue where cancelling a deployment in progress could unintentionally
    corrupt the SDK
      http://code.google.com/p/googleappengine/issues/detail?id=2255
  - Fixed issue with QuotaService.getCpuTimeInMegaCycles() returning 0
      http://code.google.com/p/googleappengine/issues/detail?id=2639
  - Fixed issue where JSP exceptions will be incorrectly cast causing a
    ClassCastException
      http://code.google.com/p/googleappengine/issues/detail?id=1438

Version 1.3.0
=============
  - Support for the new Blobstore API
  - New com.google.appengine.runtime.{version,environment} system properties
    (and a SystemProperty accessor class)
  - New sample applications for GWT 2.0
  - Optimizations for many reflection operations

Version 1.2.8
=============
  - Support for JAXB. JAXB is included in JDK 1.6 (and App Engine's production
    servers). If you're using JDK 1.5 with your local dev_appserver, you will
    need to include the JAXB libraries with your application to use it.
      http://code.google.com/p/googleappengine/issues/detail?id=1267
  - New support for application pre-compilation to reduce the length of
    loading requests. To enable pre-compilation on your application, add this
    flag to your appengine-web.xml:
      <precompilation-enabled>true</precompilation-enabled>
    If you have trouble deploying your application, you should remove this
    flag or set it to false.
  - Added Quota API (com.google.appengine.api.quota) to match Python API.
  - Low-level Memcache API now supports batchIncrement().
  - HTTPResponse object now has getFinalUrl() method for 302 redirects.
    - http://code.google.com/p/googleappengine/issues/detail?id=1464
  - Java Dev Appserver now automatically executes tasks.  If you prefer the
    old behavior where tasks do not automatically execute you can use the
    following flag when starting the server:
      -Dtask_queue.disable_auto_task_execution
  - Additional file extensions permitted when sending mail.
    - http://code.google.com/p/googleappengine/issues/detail?id=494
  - Fixed issue with Java mail handler not processing multipart messages
    correctly.
  - Fixed agent code included in appengine-local-runtime.jar results in
    RuntimeException.
    - http://code.google.com/p/googleappengine/issues/detail?id=2280
  - Fixed issue with sort orders defined on properties that allow multiple
    values.
    - http://code.google.com/p/googleappengine/issues/detail?id=2349
  - Fixed problem with dropped query strings after requiring log-in.
    - http://code.google.com/p/googleappengine/issues/detail?id=2225
  - Removed limitation preventing multiple parameters with the same name.
    - http://code.google.com/p/googleappengine/issues/detail?id=2090
  - Fixed issue with local datastore incorrectly sorting results of ancestor
    queries.
    - http://code.google.com/p/googleappengine/issues/detail?id=2177
  - New Index building status page in the Admin Console
  - Task Queue now supports purging queues, and deleting tasks and queues via
    the Admin Console.
    - http://code.google.com/p/googleappengine/issues/detail?id=2159
    - http://code.google.com/p/googleappengine/issues/detail?id=1740
  - Over Quota HTTP status code changed from 403 to 503, other to 500.
    - http://code.google.com/p/googleappengine/issues/detail?id=961
  - Task Queue now considers all HTTP 2xx status codes to represent success.

For past release notes, visit:
http://code.google.com/p/googleappengine/wiki/SdkForJavaReleaseNotes
