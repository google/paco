/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.0-rc1-master-d74f93a
 */
function mdInputContainerDirective(e,t){function n(t,n,i){e(n)}function i(e,n,i){var r=this;r.isErrorGetter=i.mdIsError&&t(i.mdIsError),r.delegateClick=function(){r.input.focus()},r.element=n,r.setFocused=function(e){n.toggleClass("md-input-focused",!!e)},r.setHasValue=function(e){n.toggleClass("md-input-has-value",!!e)},r.setInvalid=function(e){n.toggleClass("md-input-invalid",!!e)},e.$watch(function(){return r.label&&r.input},function(e){e&&!r.label.attr("for")&&r.label.attr("for",r.input.attr("id"))})}return i.$inject=["$scope","$element","$attrs"],{restrict:"E",link:n,controller:i}}function labelDirective(){return{restrict:"E",require:"^?mdInputContainer",link:function(e,t,n,i){i&&!n.mdNoFloat&&(i.label=t,e.$on("$destroy",function(){i.label=null}))}}}function inputTextareaDirective(e,t,n){function i(i,r,a,l){function o(e){return c.setHasValue(!m.$isEmpty(e)),e}function u(){c.setHasValue(r.val().length>0||(r[0].validity||{}).badInput)}function s(){function n(e){return f(),e}function a(){if(s.style.height=s.offsetHeight+"px",r.addClass("md-no-flex"),isNaN(d)){u.style.height="auto",u.scrollTop=0;var e=l();e&&(u.style.height=e+"px")}else{u.setAttribute("rows",1),p||(u.style.minHeight="0",p=r.prop("clientHeight"),u.style.minHeight=null);var t=Math.max(d,Math.round(u.scrollHeight/p));u.setAttribute("rows",t)}r.removeClass("md-no-flex"),s.style.height="auto"}function l(){var e=u.scrollHeight-u.offsetHeight;return u.offsetHeight+(e>0?e:0)}function o(e){u.scrollTop=0;var t=u.scrollHeight-u.offsetHeight,n=u.offsetHeight+t;u.style.height=n+"px"}if(!angular.isDefined(r.attr("md-no-autogrow"))){var u=r[0],s=c.element[0],d=NaN,p=null;u.hasAttribute("rows")&&(d=parseInt(u.getAttribute("rows")));var f=e.debounce(a,1);m?(m.$formatters.push(n),m.$viewChangeListeners.push(n)):f(),r.on("keydown input",f),isNaN(d)&&(r.attr("rows","1"),r.on("scroll",o)),angular.element(t).on("resize",f),i.$on("$destroy",function(){angular.element(t).off("resize",f)})}}var c=l[0],d=!!l[1],m=l[1]||e.fakeNgModel(),p=angular.isDefined(a.readonly);if(c){if(c.input)throw new Error("<md-input-container> can only have *one* <input>, <textarea> or <md-select> child element!");c.input=r,c.label||n.expect(r,"aria-label",r.attr("placeholder")),r.addClass("md-input"),r.attr("id")||r.attr("id","input_"+e.nextUid()),"textarea"===r[0].tagName.toLowerCase()&&s(),d||u();var f=c.isErrorGetter||function(){return m.$invalid&&m.$touched};i.$watch(f,c.setInvalid),m.$parsers.push(o),m.$formatters.push(o),r.on("input",u),p||r.on("focus",function(e){c.setFocused(!0)}).on("blur",function(e){c.setFocused(!1),u()}),i.$on("$destroy",function(){c.setFocused(!1),c.setHasValue(!1),c.input=null})}}return{restrict:"E",require:["^?mdInputContainer","?ngModel"],link:i}}function mdMaxlengthDirective(e){function t(t,n,i,r){function a(e){return s.text((n.val()||e||"").length+"/"+l),e}var l,o=r[0],u=r[1],s=angular.element('<div class="md-char-counter">');i.$set("ngTrim","false"),u.element.append(s),o.$formatters.push(a),o.$viewChangeListeners.push(a),n.on("input keydown",function(){a()}),t.$watch(i.mdMaxlength,function(t){l=t,angular.isNumber(t)&&t>0?(s.parent().length||e.enter(s,u.element,angular.element(u.element[0].lastElementChild)),a()):e.leave(s)}),o.$validators["md-maxlength"]=function(e,t){return!angular.isNumber(l)||0>l?!0:(e||n.val()||t||"").length<=l}}return{restrict:"A",require:["ngModel","^mdInputContainer"],link:t}}function placeholderDirective(e){function t(t,n,i,r){if(r&&!angular.isDefined(r.element.attr("md-no-float"))){var a=i.placeholder;if(n.removeAttr("placeholder"),0==r.element.find("label").length){if(r.input&&"MD-SELECT"!=r.input[0].nodeName){var l='<label ng-click="delegateClick()">'+a+"</label>";r.element.addClass("md-icon-float"),r.element.prepend(l)}}else"MD-SELECT"!=n[0].nodeName&&e.warn("The placeholder='"+a+"' will be ignored since this md-input-container has a child label element.")}}return{restrict:"A",require:"^^?mdInputContainer",priority:200,link:t}}goog.provide("ng.material.components.input"),goog.require("ng.material.core"),angular.module("material.components.input",["material.core"]).directive("mdInputContainer",mdInputContainerDirective).directive("label",labelDirective).directive("input",inputTextareaDirective).directive("textarea",inputTextareaDirective).directive("mdMaxlength",mdMaxlengthDirective).directive("placeholder",placeholderDirective),mdInputContainerDirective.$inject=["$mdTheming","$parse"],inputTextareaDirective.$inject=["$mdUtil","$window","$mdAria"],mdMaxlengthDirective.$inject=["$animate"],placeholderDirective.$inject=["$log"],ng.material.components.input=angular.module("material.components.input");